{
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js\",\"filename\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"syntax-dynamic-import\",\"visitor\":{},\"options\":{},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-decorators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"legacy\":true},\"externalDependencies\":[]},{\"key\":\"proposal-function-sent\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"MetaProperty\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-throw-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"UnaryExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-export-default-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-pipeline-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"proposal\":\"minimal\"},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-do-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DoExpression\":{\"exit\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.18.10": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js",
      "filename": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-decorators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "legacy": true
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-function-sent",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "MetaProperty": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-throw-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "UnaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-export-default-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-pipeline-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "proposal": "minimal"
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-do-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DoExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/index.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "decorators-legacy",
          "functionSent",
          "exportNamespaceFrom",
          "numericSeparator",
          "throwExpressions",
          "exportDefaultFrom",
          "logicalAssignment",
          "optionalChaining",
          [
            "pipelineOperator",
            {
              "proposal": "minimal"
            }
          ],
          "nullishCoalescingOperator",
          "doExpressions",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _server = _interopRequireDefault(require(\"./server\"));\n\nvar _mongodb = require(\"mongodb\");\n\nvar _moviesDAO = _interopRequireDefault(require(\"../src/dao/moviesDAO\"));\n\nvar _usersDAO = _interopRequireDefault(require(\"./dao/usersDAO\"));\n\nvar _commentsDAO = _interopRequireDefault(require(\"./dao/commentsDAO\"));\n\nvar port = process.env.PORT || 8000;\n/**\nTicket: Connection Pooling\n\nPlease change the configuration of the MongoClient object by setting the\nmaximum connection pool size to 50 active connections.\n*/\n\n/**\nTicket: Timeouts\n\nPlease prevent the program from waiting indefinitely by setting the write\nconcern timeout limit to 2500 milliseconds.\n*/\n\n_mongodb.MongoClient.connect(process.env.MFLIX_DB_URI, // TODO: Connection Pooling\n// Set the poolSize to 50 connections.\n// TODO: Timeouts\n// Set the write timeout limit to 2500 milliseconds.\n{\n  useNewUrlParser: true,\n  poolSize: 50,\n  wtimeout: 2500\n})[\"catch\"](function (err) {\n  console.error(err.stack);\n  process.exit(1);\n}).then( /*#__PURE__*/function () {\n  var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(client) {\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _moviesDAO[\"default\"].injectDB(client);\n\n          case 2:\n            _context.next = 4;\n            return _usersDAO[\"default\"].injectDB(client);\n\n          case 4:\n            _context.next = 6;\n            return _commentsDAO[\"default\"].injectDB(client);\n\n          case 6:\n            _server[\"default\"].listen(port, function () {\n              console.log(\"listening on port \".concat(port));\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}());\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJwb3J0IiwicHJvY2VzcyIsImVudiIsIlBPUlQiLCJNb25nb0NsaWVudCIsImNvbm5lY3QiLCJNRkxJWF9EQl9VUkkiLCJ1c2VOZXdVcmxQYXJzZXIiLCJwb29sU2l6ZSIsInd0aW1lb3V0IiwiZXJyIiwiY29uc29sZSIsImVycm9yIiwic3RhY2siLCJleGl0IiwidGhlbiIsImNsaWVudCIsIk1vdmllc0RBTyIsImluamVjdERCIiwiVXNlcnNEQU8iLCJDb21tZW50c0RBTyIsImFwcCIsImxpc3RlbiIsImxvZyJdLCJzb3VyY2VSb290IjoiL1VzZXJzL2Z1c2lvbnRlY2gvRG9jdW1lbnRzL0Z1c2lvblRlY2gvTTIyMC9tZmxpeC1qcy9zcmMiLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBhcHAgZnJvbSBcIi4vc2VydmVyXCJcbmltcG9ydCB7IE1vbmdvQ2xpZW50IH0gZnJvbSBcIm1vbmdvZGJcIlxuaW1wb3J0IE1vdmllc0RBTyBmcm9tIFwiLi4vc3JjL2Rhby9tb3ZpZXNEQU9cIlxuaW1wb3J0IFVzZXJzREFPIGZyb20gXCIuL2Rhby91c2Vyc0RBT1wiXG5pbXBvcnQgQ29tbWVudHNEQU8gZnJvbSBcIi4vZGFvL2NvbW1lbnRzREFPXCJcblxuY29uc3QgcG9ydCA9IHByb2Nlc3MuZW52LlBPUlQgfHwgODAwMFxuXG4vKipcblRpY2tldDogQ29ubmVjdGlvbiBQb29saW5nXG5cblBsZWFzZSBjaGFuZ2UgdGhlIGNvbmZpZ3VyYXRpb24gb2YgdGhlIE1vbmdvQ2xpZW50IG9iamVjdCBieSBzZXR0aW5nIHRoZVxubWF4aW11bSBjb25uZWN0aW9uIHBvb2wgc2l6ZSB0byA1MCBhY3RpdmUgY29ubmVjdGlvbnMuXG4qL1xuXG4vKipcblRpY2tldDogVGltZW91dHNcblxuUGxlYXNlIHByZXZlbnQgdGhlIHByb2dyYW0gZnJvbSB3YWl0aW5nIGluZGVmaW5pdGVseSBieSBzZXR0aW5nIHRoZSB3cml0ZVxuY29uY2VybiB0aW1lb3V0IGxpbWl0IHRvIDI1MDAgbWlsbGlzZWNvbmRzLlxuKi9cblxuTW9uZ29DbGllbnQuY29ubmVjdChcbiAgcHJvY2Vzcy5lbnYuTUZMSVhfREJfVVJJLFxuICAvLyBUT0RPOiBDb25uZWN0aW9uIFBvb2xpbmdcbiAgLy8gU2V0IHRoZSBwb29sU2l6ZSB0byA1MCBjb25uZWN0aW9ucy5cbiAgLy8gVE9ETzogVGltZW91dHNcbiAgLy8gU2V0IHRoZSB3cml0ZSB0aW1lb3V0IGxpbWl0IHRvIDI1MDAgbWlsbGlzZWNvbmRzLlxuICB7IHVzZU5ld1VybFBhcnNlcjogdHJ1ZSwgcG9vbFNpemU6IDUwLCB3dGltZW91dDogMjUwMCB9LFxuKVxuICAuY2F0Y2goZXJyID0+IHtcbiAgICBjb25zb2xlLmVycm9yKGVyci5zdGFjaylcbiAgICBwcm9jZXNzLmV4aXQoMSlcbiAgfSlcbiAgLnRoZW4oYXN5bmMgY2xpZW50ID0+IHtcbiAgICBhd2FpdCBNb3ZpZXNEQU8uaW5qZWN0REIoY2xpZW50KVxuICAgIGF3YWl0IFVzZXJzREFPLmluamVjdERCKGNsaWVudClcbiAgICBhd2FpdCBDb21tZW50c0RBTy5pbmplY3REQihjbGllbnQpXG4gICAgYXBwLmxpc3Rlbihwb3J0LCAoKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhgbGlzdGVuaW5nIG9uIHBvcnQgJHtwb3J0fWApXG4gICAgfSlcbiAgfSlcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQSxJQUFNQSxJQUFJLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQUFaLElBQW9CLElBQWpDO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQUMsb0JBQUEsQ0FBWUMsT0FBWixDQUNFSixPQUFPLENBQUNDLEdBQVIsQ0FBWUksWUFEZCxFQUVFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7RUFBRUMsZUFBZSxFQUFFLElBQW5CO0VBQXlCQyxRQUFRLEVBQUUsRUFBbkM7RUFBdUNDLFFBQVEsRUFBRTtBQUFqRCxDQU5GLFdBUVMsVUFBQUMsR0FBRyxFQUFJO0VBQ1pDLE9BQU8sQ0FBQ0MsS0FBUixDQUFjRixHQUFHLENBQUNHLEtBQWxCO0VBQ0FaLE9BQU8sQ0FBQ2EsSUFBUixDQUFhLENBQWI7QUFDRCxDQVhILEVBWUdDLElBWkg7RUFBQSx5RkFZUSxpQkFBTUMsTUFBTjtJQUFBO01BQUE7UUFBQTtVQUFBO1lBQUE7WUFBQSxPQUNFQyxxQkFBQSxDQUFVQyxRQUFWLENBQW1CRixNQUFuQixDQURGOztVQUFBO1lBQUE7WUFBQSxPQUVFRyxvQkFBQSxDQUFTRCxRQUFULENBQWtCRixNQUFsQixDQUZGOztVQUFBO1lBQUE7WUFBQSxPQUdFSSx1QkFBQSxDQUFZRixRQUFaLENBQXFCRixNQUFyQixDQUhGOztVQUFBO1lBSUpLLGtCQUFBLENBQUlDLE1BQUosQ0FBV3RCLElBQVgsRUFBaUIsWUFBTTtjQUNyQlcsT0FBTyxDQUFDWSxHQUFSLDZCQUFpQ3ZCLElBQWpDO1lBQ0QsQ0FGRDs7VUFKSTtVQUFBO1lBQUE7UUFBQTtNQUFBO0lBQUE7RUFBQSxDQVpSOztFQUFBO0lBQUE7RUFBQTtBQUFBIn0=",
    "map": {
      "version": 3,
      "names": [
        "port",
        "process",
        "env",
        "PORT",
        "MongoClient",
        "connect",
        "MFLIX_DB_URI",
        "useNewUrlParser",
        "poolSize",
        "wtimeout",
        "err",
        "console",
        "error",
        "stack",
        "exit",
        "then",
        "client",
        "MoviesDAO",
        "injectDB",
        "UsersDAO",
        "CommentsDAO",
        "app",
        "listen",
        "log"
      ],
      "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src",
      "sources": [
        "index.js"
      ],
      "sourcesContent": [
        "import app from \"./server\"\nimport { MongoClient } from \"mongodb\"\nimport MoviesDAO from \"../src/dao/moviesDAO\"\nimport UsersDAO from \"./dao/usersDAO\"\nimport CommentsDAO from \"./dao/commentsDAO\"\n\nconst port = process.env.PORT || 8000\n\n/**\nTicket: Connection Pooling\n\nPlease change the configuration of the MongoClient object by setting the\nmaximum connection pool size to 50 active connections.\n*/\n\n/**\nTicket: Timeouts\n\nPlease prevent the program from waiting indefinitely by setting the write\nconcern timeout limit to 2500 milliseconds.\n*/\n\nMongoClient.connect(\n  process.env.MFLIX_DB_URI,\n  // TODO: Connection Pooling\n  // Set the poolSize to 50 connections.\n  // TODO: Timeouts\n  // Set the write timeout limit to 2500 milliseconds.\n  { useNewUrlParser: true, poolSize: 50, wtimeout: 2500 },\n)\n  .catch(err => {\n    console.error(err.stack)\n    process.exit(1)\n  })\n  .then(async client => {\n    await MoviesDAO.injectDB(client)\n    await UsersDAO.injectDB(client)\n    await CommentsDAO.injectDB(client)\n    app.listen(port, () => {\n      console.log(`listening on port ${port}`)\n    })\n  })\n"
      ],
      "mappings": ";;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEAC,oBAAA,CAAYC,OAAZ,CACEJ,OAAO,CAACC,GAAR,CAAYI,YADd,EAEE;AACA;AACA;AACA;AACA;EAAEC,eAAe,EAAE,IAAnB;EAAyBC,QAAQ,EAAE,EAAnC;EAAuCC,QAAQ,EAAE;AAAjD,CANF,WAQS,UAAAC,GAAG,EAAI;EACZC,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,KAAlB;EACAZ,OAAO,CAACa,IAAR,CAAa,CAAb;AACD,CAXH,EAYGC,IAZH;EAAA,yFAYQ,iBAAMC,MAAN;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,OACEC,qBAAA,CAAUC,QAAV,CAAmBF,MAAnB,CADF;;UAAA;YAAA;YAAA,OAEEG,oBAAA,CAASD,QAAT,CAAkBF,MAAlB,CAFF;;UAAA;YAAA;YAAA,OAGEI,uBAAA,CAAYF,QAAZ,CAAqBF,MAArB,CAHF;;UAAA;YAIJK,kBAAA,CAAIC,MAAJ,CAAWtB,IAAX,EAAiB,YAAM;cACrBW,OAAO,CAACY,GAAR,6BAAiCvB,IAAjC;YACD,CAFD;;UAJI;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAZR;;EAAA;IAAA;EAAA;AAAA"
    },
    "sourceType": "script",
    "externalDependencies": {},
    "mtime": 1659996379145
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js\",\"filename\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"syntax-dynamic-import\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-decorators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"legacy\":true},\"externalDependencies\":[]},{\"key\":\"proposal-function-sent\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"MetaProperty\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-throw-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"UnaryExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-export-default-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-pipeline-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"proposal\":\"minimal\"},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-do-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DoExpression\":{\"exit\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.18.10": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js",
      "filename": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/server.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-decorators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "legacy": true
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-function-sent",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "MetaProperty": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-throw-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "UnaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-export-default-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-pipeline-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "proposal": "minimal"
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-do-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DoExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/server.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "decorators-legacy",
          "functionSent",
          "exportNamespaceFrom",
          "numericSeparator",
          "throwExpressions",
          "exportDefaultFrom",
          "logicalAssignment",
          "optionalChaining",
          [
            "pipelineOperator",
            {
              "proposal": "minimal"
            }
          ],
          "nullishCoalescingOperator",
          "doExpressions",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _morgan = _interopRequireDefault(require(\"morgan\"));\n\nvar _movies = _interopRequireDefault(require(\"../src/api/movies.route\"));\n\nvar _users = _interopRequireDefault(require(\"../src/api/users.route\"));\n\nvar app = (0, _express[\"default\"])();\napp.use((0, _cors[\"default\"])());\nprocess.env.NODE_ENV !== \"prod\" && app.use((0, _morgan[\"default\"])(\"dev\"));\napp.use(_bodyParser[\"default\"].json());\napp.use(_bodyParser[\"default\"].urlencoded({\n  extended: true\n})); // Register api routes\n\napp.use(\"/api/v1/movies\", _movies[\"default\"]);\napp.use(\"/api/v1/user\", _users[\"default\"]);\napp.use(\"/status\", _express[\"default\"][\"static\"](\"build\"));\napp.use(\"/\", _express[\"default\"][\"static\"](\"build\"));\napp.use(\"*\", function (req, res) {\n  return res.status(404).json({\n    error: \"not found\"\n  });\n});\nvar _default = app;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhcHAiLCJleHByZXNzIiwidXNlIiwiY29ycyIsInByb2Nlc3MiLCJlbnYiLCJOT0RFX0VOViIsIm1vcmdhbiIsImJvZHlQYXJzZXIiLCJqc29uIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwibW92aWVzIiwidXNlcnMiLCJyZXEiLCJyZXMiLCJzdGF0dXMiLCJlcnJvciJdLCJzb3VyY2VSb290IjoiL1VzZXJzL2Z1c2lvbnRlY2gvRG9jdW1lbnRzL0Z1c2lvblRlY2gvTTIyMC9tZmxpeC1qcy9zcmMiLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tIFwiZXhwcmVzc1wiXG5pbXBvcnQgYm9keVBhcnNlciBmcm9tIFwiYm9keS1wYXJzZXJcIlxuaW1wb3J0IGNvcnMgZnJvbSBcImNvcnNcIlxuaW1wb3J0IG1vcmdhbiBmcm9tIFwibW9yZ2FuXCJcbmltcG9ydCBtb3ZpZXMgZnJvbSBcIi4uL3NyYy9hcGkvbW92aWVzLnJvdXRlXCJcbmltcG9ydCB1c2VycyBmcm9tIFwiLi4vc3JjL2FwaS91c2Vycy5yb3V0ZVwiXG5cbmNvbnN0IGFwcCA9IGV4cHJlc3MoKVxuXG5hcHAudXNlKGNvcnMoKSlcbnByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2RcIiAmJiBhcHAudXNlKG1vcmdhbihcImRldlwiKSlcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpXG5hcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiB0cnVlIH0pKVxuXG4vLyBSZWdpc3RlciBhcGkgcm91dGVzXG5hcHAudXNlKFwiL2FwaS92MS9tb3ZpZXNcIiwgbW92aWVzKVxuYXBwLnVzZShcIi9hcGkvdjEvdXNlclwiLCB1c2VycylcbmFwcC51c2UoXCIvc3RhdHVzXCIsIGV4cHJlc3Muc3RhdGljKFwiYnVpbGRcIikpXG5hcHAudXNlKFwiL1wiLCBleHByZXNzLnN0YXRpYyhcImJ1aWxkXCIpKVxuYXBwLnVzZShcIipcIiwgKHJlcSwgcmVzKSA9PiByZXMuc3RhdHVzKDQwNCkuanNvbih7IGVycm9yOiBcIm5vdCBmb3VuZFwiIH0pKVxuXG5leHBvcnQgZGVmYXVsdCBhcHBcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBRUEsSUFBTUEsR0FBRyxHQUFHLElBQUFDLG1CQUFBLEdBQVo7QUFFQUQsR0FBRyxDQUFDRSxHQUFKLENBQVEsSUFBQUMsZ0JBQUEsR0FBUjtBQUNBQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsUUFBWixLQUF5QixNQUF6QixJQUFtQ04sR0FBRyxDQUFDRSxHQUFKLENBQVEsSUFBQUssa0JBQUEsRUFBTyxLQUFQLENBQVIsQ0FBbkM7QUFDQVAsR0FBRyxDQUFDRSxHQUFKLENBQVFNLHNCQUFBLENBQVdDLElBQVgsRUFBUjtBQUNBVCxHQUFHLENBQUNFLEdBQUosQ0FBUU0sc0JBQUEsQ0FBV0UsVUFBWCxDQUFzQjtFQUFFQyxRQUFRLEVBQUU7QUFBWixDQUF0QixDQUFSLEUsQ0FFQTs7QUFDQVgsR0FBRyxDQUFDRSxHQUFKLENBQVEsZ0JBQVIsRUFBMEJVLGtCQUExQjtBQUNBWixHQUFHLENBQUNFLEdBQUosQ0FBUSxjQUFSLEVBQXdCVyxpQkFBeEI7QUFDQWIsR0FBRyxDQUFDRSxHQUFKLENBQVEsU0FBUixFQUFtQkQsbUJBQUEsV0FBZSxPQUFmLENBQW5CO0FBQ0FELEdBQUcsQ0FBQ0UsR0FBSixDQUFRLEdBQVIsRUFBYUQsbUJBQUEsV0FBZSxPQUFmLENBQWI7QUFDQUQsR0FBRyxDQUFDRSxHQUFKLENBQVEsR0FBUixFQUFhLFVBQUNZLEdBQUQsRUFBTUMsR0FBTjtFQUFBLE9BQWNBLEdBQUcsQ0FBQ0MsTUFBSixDQUFXLEdBQVgsRUFBZ0JQLElBQWhCLENBQXFCO0lBQUVRLEtBQUssRUFBRTtFQUFULENBQXJCLENBQWQ7QUFBQSxDQUFiO2VBRWVqQixHIn0=",
    "map": {
      "version": 3,
      "names": [
        "app",
        "express",
        "use",
        "cors",
        "process",
        "env",
        "NODE_ENV",
        "morgan",
        "bodyParser",
        "json",
        "urlencoded",
        "extended",
        "movies",
        "users",
        "req",
        "res",
        "status",
        "error"
      ],
      "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src",
      "sources": [
        "server.js"
      ],
      "sourcesContent": [
        "import express from \"express\"\nimport bodyParser from \"body-parser\"\nimport cors from \"cors\"\nimport morgan from \"morgan\"\nimport movies from \"../src/api/movies.route\"\nimport users from \"../src/api/users.route\"\n\nconst app = express()\n\napp.use(cors())\nprocess.env.NODE_ENV !== \"prod\" && app.use(morgan(\"dev\"))\napp.use(bodyParser.json())\napp.use(bodyParser.urlencoded({ extended: true }))\n\n// Register api routes\napp.use(\"/api/v1/movies\", movies)\napp.use(\"/api/v1/user\", users)\napp.use(\"/status\", express.static(\"build\"))\napp.use(\"/\", express.static(\"build\"))\napp.use(\"*\", (req, res) => res.status(404).json({ error: \"not found\" }))\n\nexport default app\n"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,GAAG,GAAG,IAAAC,mBAAA,GAAZ;AAEAD,GAAG,CAACE,GAAJ,CAAQ,IAAAC,gBAAA,GAAR;AACAC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,MAAzB,IAAmCN,GAAG,CAACE,GAAJ,CAAQ,IAAAK,kBAAA,EAAO,KAAP,CAAR,CAAnC;AACAP,GAAG,CAACE,GAAJ,CAAQM,sBAAA,CAAWC,IAAX,EAAR;AACAT,GAAG,CAACE,GAAJ,CAAQM,sBAAA,CAAWE,UAAX,CAAsB;EAAEC,QAAQ,EAAE;AAAZ,CAAtB,CAAR,E,CAEA;;AACAX,GAAG,CAACE,GAAJ,CAAQ,gBAAR,EAA0BU,kBAA1B;AACAZ,GAAG,CAACE,GAAJ,CAAQ,cAAR,EAAwBW,iBAAxB;AACAb,GAAG,CAACE,GAAJ,CAAQ,SAAR,EAAmBD,mBAAA,WAAe,OAAf,CAAnB;AACAD,GAAG,CAACE,GAAJ,CAAQ,GAAR,EAAaD,mBAAA,WAAe,OAAf,CAAb;AACAD,GAAG,CAACE,GAAJ,CAAQ,GAAR,EAAa,UAACY,GAAD,EAAMC,GAAN;EAAA,OAAcA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBP,IAAhB,CAAqB;IAAEQ,KAAK,EAAE;EAAT,CAArB,CAAd;AAAA,CAAb;eAEejB,G"
    },
    "sourceType": "script",
    "externalDependencies": {},
    "mtime": 1641016800000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js\",\"filename\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api/movies.route.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"syntax-dynamic-import\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-decorators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"legacy\":true},\"externalDependencies\":[]},{\"key\":\"proposal-function-sent\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"MetaProperty\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-throw-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"UnaryExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-export-default-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-pipeline-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"proposal\":\"minimal\"},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-do-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DoExpression\":{\"exit\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.18.10": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js",
      "filename": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api/movies.route.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-decorators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "legacy": true
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-function-sent",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "MetaProperty": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-throw-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "UnaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-export-default-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-pipeline-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "proposal": "minimal"
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-do-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DoExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api/movies.route.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "decorators-legacy",
          "functionSent",
          "exportNamespaceFrom",
          "numericSeparator",
          "throwExpressions",
          "exportDefaultFrom",
          "logicalAssignment",
          "optionalChaining",
          [
            "pipelineOperator",
            {
              "proposal": "minimal"
            }
          ],
          "nullishCoalescingOperator",
          "doExpressions",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api/movies.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api",
        "sourceFileName": "movies.route.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _movies = _interopRequireDefault(require(\"./movies.controller\"));\n\nvar _comments = _interopRequireDefault(require(\"./comments.controller\"));\n\nvar router = new _express.Router(); // associate put, delete, and get(id)\n\nrouter.route(\"/\").get(_movies[\"default\"].apiGetMovies);\nrouter.route(\"/search\").get(_movies[\"default\"].apiSearchMovies);\nrouter.route(\"/countries\").get(_movies[\"default\"].apiGetMoviesByCountry);\nrouter.route(\"/facet-search\").get(_movies[\"default\"].apiFacetedSearch);\nrouter.route(\"/id/:id\").get(_movies[\"default\"].apiGetMovieById);\nrouter.route(\"/config-options\").get(_movies[\"default\"].getConfig);\nrouter.route(\"/comment\").post(_comments[\"default\"].apiPostComment).put(_comments[\"default\"].apiUpdateComment)[\"delete\"](_comments[\"default\"].apiDeleteComment);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyb3V0ZXIiLCJSb3V0ZXIiLCJyb3V0ZSIsImdldCIsIk1vdmllc0N0cmwiLCJhcGlHZXRNb3ZpZXMiLCJhcGlTZWFyY2hNb3ZpZXMiLCJhcGlHZXRNb3ZpZXNCeUNvdW50cnkiLCJhcGlGYWNldGVkU2VhcmNoIiwiYXBpR2V0TW92aWVCeUlkIiwiZ2V0Q29uZmlnIiwicG9zdCIsIkNvbW1lbnRzQ3RybCIsImFwaVBvc3RDb21tZW50IiwicHV0IiwiYXBpVXBkYXRlQ29tbWVudCIsImFwaURlbGV0ZUNvbW1lbnQiXSwic291cmNlUm9vdCI6Ii9Vc2Vycy9mdXNpb250ZWNoL0RvY3VtZW50cy9GdXNpb25UZWNoL00yMjAvbWZsaXgtanMvc3JjL2FwaSIsInNvdXJjZXMiOlsibW92aWVzLnJvdXRlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gXCJleHByZXNzXCJcbmltcG9ydCBNb3ZpZXNDdHJsIGZyb20gXCIuL21vdmllcy5jb250cm9sbGVyXCJcbmltcG9ydCBDb21tZW50c0N0cmwgZnJvbSBcIi4vY29tbWVudHMuY29udHJvbGxlclwiXG5cbmNvbnN0IHJvdXRlciA9IG5ldyBSb3V0ZXIoKVxuXG4vLyBhc3NvY2lhdGUgcHV0LCBkZWxldGUsIGFuZCBnZXQoaWQpXG5yb3V0ZXIucm91dGUoXCIvXCIpLmdldChNb3ZpZXNDdHJsLmFwaUdldE1vdmllcylcbnJvdXRlci5yb3V0ZShcIi9zZWFyY2hcIikuZ2V0KE1vdmllc0N0cmwuYXBpU2VhcmNoTW92aWVzKVxucm91dGVyLnJvdXRlKFwiL2NvdW50cmllc1wiKS5nZXQoTW92aWVzQ3RybC5hcGlHZXRNb3ZpZXNCeUNvdW50cnkpXG5yb3V0ZXIucm91dGUoXCIvZmFjZXQtc2VhcmNoXCIpLmdldChNb3ZpZXNDdHJsLmFwaUZhY2V0ZWRTZWFyY2gpXG5yb3V0ZXIucm91dGUoXCIvaWQvOmlkXCIpLmdldChNb3ZpZXNDdHJsLmFwaUdldE1vdmllQnlJZClcbnJvdXRlci5yb3V0ZShcIi9jb25maWctb3B0aW9uc1wiKS5nZXQoTW92aWVzQ3RybC5nZXRDb25maWcpXG5cbnJvdXRlclxuICAucm91dGUoXCIvY29tbWVudFwiKVxuICAucG9zdChDb21tZW50c0N0cmwuYXBpUG9zdENvbW1lbnQpXG4gIC5wdXQoQ29tbWVudHNDdHJsLmFwaVVwZGF0ZUNvbW1lbnQpXG4gIC5kZWxldGUoQ29tbWVudHNDdHJsLmFwaURlbGV0ZUNvbW1lbnQpXG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlclxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFFQSxJQUFNQSxNQUFNLEdBQUcsSUFBSUMsZUFBSixFQUFmLEMsQ0FFQTs7QUFDQUQsTUFBTSxDQUFDRSxLQUFQLENBQWEsR0FBYixFQUFrQkMsR0FBbEIsQ0FBc0JDLGtCQUFBLENBQVdDLFlBQWpDO0FBQ0FMLE1BQU0sQ0FBQ0UsS0FBUCxDQUFhLFNBQWIsRUFBd0JDLEdBQXhCLENBQTRCQyxrQkFBQSxDQUFXRSxlQUF2QztBQUNBTixNQUFNLENBQUNFLEtBQVAsQ0FBYSxZQUFiLEVBQTJCQyxHQUEzQixDQUErQkMsa0JBQUEsQ0FBV0cscUJBQTFDO0FBQ0FQLE1BQU0sQ0FBQ0UsS0FBUCxDQUFhLGVBQWIsRUFBOEJDLEdBQTlCLENBQWtDQyxrQkFBQSxDQUFXSSxnQkFBN0M7QUFDQVIsTUFBTSxDQUFDRSxLQUFQLENBQWEsU0FBYixFQUF3QkMsR0FBeEIsQ0FBNEJDLGtCQUFBLENBQVdLLGVBQXZDO0FBQ0FULE1BQU0sQ0FBQ0UsS0FBUCxDQUFhLGlCQUFiLEVBQWdDQyxHQUFoQyxDQUFvQ0Msa0JBQUEsQ0FBV00sU0FBL0M7QUFFQVYsTUFBTSxDQUNIRSxLQURILENBQ1MsVUFEVCxFQUVHUyxJQUZILENBRVFDLG9CQUFBLENBQWFDLGNBRnJCLEVBR0dDLEdBSEgsQ0FHT0Ysb0JBQUEsQ0FBYUcsZ0JBSHBCLFlBSVVILG9CQUFBLENBQWFJLGdCQUp2QjtlQU1laEIsTSJ9",
    "map": {
      "version": 3,
      "names": [
        "router",
        "Router",
        "route",
        "get",
        "MoviesCtrl",
        "apiGetMovies",
        "apiSearchMovies",
        "apiGetMoviesByCountry",
        "apiFacetedSearch",
        "apiGetMovieById",
        "getConfig",
        "post",
        "CommentsCtrl",
        "apiPostComment",
        "put",
        "apiUpdateComment",
        "apiDeleteComment"
      ],
      "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api",
      "sources": [
        "movies.route.js"
      ],
      "sourcesContent": [
        "import { Router } from \"express\"\nimport MoviesCtrl from \"./movies.controller\"\nimport CommentsCtrl from \"./comments.controller\"\n\nconst router = new Router()\n\n// associate put, delete, and get(id)\nrouter.route(\"/\").get(MoviesCtrl.apiGetMovies)\nrouter.route(\"/search\").get(MoviesCtrl.apiSearchMovies)\nrouter.route(\"/countries\").get(MoviesCtrl.apiGetMoviesByCountry)\nrouter.route(\"/facet-search\").get(MoviesCtrl.apiFacetedSearch)\nrouter.route(\"/id/:id\").get(MoviesCtrl.apiGetMovieById)\nrouter.route(\"/config-options\").get(MoviesCtrl.getConfig)\n\nrouter\n  .route(\"/comment\")\n  .post(CommentsCtrl.apiPostComment)\n  .put(CommentsCtrl.apiUpdateComment)\n  .delete(CommentsCtrl.apiDeleteComment)\n\nexport default router\n"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;AACA;;AAEA,IAAMA,MAAM,GAAG,IAAIC,eAAJ,EAAf,C,CAEA;;AACAD,MAAM,CAACE,KAAP,CAAa,GAAb,EAAkBC,GAAlB,CAAsBC,kBAAA,CAAWC,YAAjC;AACAL,MAAM,CAACE,KAAP,CAAa,SAAb,EAAwBC,GAAxB,CAA4BC,kBAAA,CAAWE,eAAvC;AACAN,MAAM,CAACE,KAAP,CAAa,YAAb,EAA2BC,GAA3B,CAA+BC,kBAAA,CAAWG,qBAA1C;AACAP,MAAM,CAACE,KAAP,CAAa,eAAb,EAA8BC,GAA9B,CAAkCC,kBAAA,CAAWI,gBAA7C;AACAR,MAAM,CAACE,KAAP,CAAa,SAAb,EAAwBC,GAAxB,CAA4BC,kBAAA,CAAWK,eAAvC;AACAT,MAAM,CAACE,KAAP,CAAa,iBAAb,EAAgCC,GAAhC,CAAoCC,kBAAA,CAAWM,SAA/C;AAEAV,MAAM,CACHE,KADH,CACS,UADT,EAEGS,IAFH,CAEQC,oBAAA,CAAaC,cAFrB,EAGGC,GAHH,CAGOF,oBAAA,CAAaG,gBAHpB,YAIUH,oBAAA,CAAaI,gBAJvB;eAMehB,M"
    },
    "sourceType": "script",
    "externalDependencies": {},
    "mtime": 1641016800000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js\",\"filename\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api/movies.controller.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"syntax-dynamic-import\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-decorators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"legacy\":true},\"externalDependencies\":[]},{\"key\":\"proposal-function-sent\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"MetaProperty\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-throw-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"UnaryExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-export-default-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-pipeline-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"proposal\":\"minimal\"},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-do-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DoExpression\":{\"exit\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.18.10": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js",
      "filename": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api/movies.controller.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-decorators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "legacy": true
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-function-sent",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "MetaProperty": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-throw-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "UnaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-export-default-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-pipeline-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "proposal": "minimal"
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-do-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DoExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api/movies.controller.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "decorators-legacy",
          "functionSent",
          "exportNamespaceFrom",
          "numericSeparator",
          "throwExpressions",
          "exportDefaultFrom",
          "logicalAssignment",
          "optionalChaining",
          [
            "pipelineOperator",
            {
              "proposal": "minimal"
            }
          ],
          "nullishCoalescingOperator",
          "doExpressions",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api/movies.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api",
        "sourceFileName": "movies.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _moviesDAO = _interopRequireDefault(require(\"../dao/moviesDAO\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar MoviesController = /*#__PURE__*/function () {\n  function MoviesController() {\n    (0, _classCallCheck2[\"default\"])(this, MoviesController);\n  }\n\n  (0, _createClass2[\"default\"])(MoviesController, null, [{\n    key: \"apiGetMovies\",\n    value: function () {\n      var _apiGetMovies = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(req, res, next) {\n        var MOVIES_PER_PAGE, _yield$MoviesDAO$getM, moviesList, totalNumMovies, response;\n\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                MOVIES_PER_PAGE = 20;\n                _context.next = 3;\n                return _moviesDAO[\"default\"].getMovies();\n\n              case 3:\n                _yield$MoviesDAO$getM = _context.sent;\n                moviesList = _yield$MoviesDAO$getM.moviesList;\n                totalNumMovies = _yield$MoviesDAO$getM.totalNumMovies;\n                response = {\n                  movies: moviesList,\n                  page: 0,\n                  filters: {},\n                  entries_per_page: MOVIES_PER_PAGE,\n                  total_results: totalNumMovies\n                };\n                res.json(response);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function apiGetMovies(_x, _x2, _x3) {\n        return _apiGetMovies.apply(this, arguments);\n      }\n\n      return apiGetMovies;\n    }()\n  }, {\n    key: \"apiGetMoviesByCountry\",\n    value: function () {\n      var _apiGetMoviesByCountry = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(req, res, next) {\n        var countries, countryList, moviesList, response;\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                countries = req.query.countries == \"\" ? \"USA\" : req.query.countries;\n                countryList = Array.isArray(countries) ? countries : Array(countries);\n                _context2.next = 4;\n                return _moviesDAO[\"default\"].getMoviesByCountry(countryList);\n\n              case 4:\n                moviesList = _context2.sent;\n                response = {\n                  titles: moviesList\n                };\n                res.json(response);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function apiGetMoviesByCountry(_x4, _x5, _x6) {\n        return _apiGetMoviesByCountry.apply(this, arguments);\n      }\n\n      return apiGetMoviesByCountry;\n    }()\n  }, {\n    key: \"apiGetMovieById\",\n    value: function () {\n      var _apiGetMovieById = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(req, res, next) {\n        var id, movie, updated_type;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                id = req.params.id || {};\n                _context3.next = 4;\n                return _moviesDAO[\"default\"].getMovieByID(id);\n\n              case 4:\n                movie = _context3.sent;\n\n                if (movie) {\n                  _context3.next = 8;\n                  break;\n                }\n\n                res.status(404).json({\n                  error: \"Not found\"\n                });\n                return _context3.abrupt(\"return\");\n\n              case 8:\n                updated_type = movie.lastupdated instanceof Date ? \"Date\" : \"other\";\n                res.json({\n                  movie: movie,\n                  updated_type: updated_type\n                });\n                _context3.next = 16;\n                break;\n\n              case 12:\n                _context3.prev = 12;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.log(\"api, \".concat(_context3.t0));\n                res.status(500).json({\n                  error: _context3.t0\n                });\n\n              case 16:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 12]]);\n      }));\n\n      function apiGetMovieById(_x7, _x8, _x9) {\n        return _apiGetMovieById.apply(this, arguments);\n      }\n\n      return apiGetMovieById;\n    }()\n  }, {\n    key: \"apiSearchMovies\",\n    value: function () {\n      var _apiSearchMovies = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(req, res, next) {\n        var MOVIES_PER_PAGE, page, searchType, filters, _yield$MoviesDAO$getM2, moviesList, totalNumMovies, response;\n\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                MOVIES_PER_PAGE = 20;\n\n                try {\n                  page = req.query.page ? parseInt(req.query.page, 10) : 0;\n                } catch (e) {\n                  console.error(\"Got bad value for page:, \".concat(e));\n                  page = 0;\n                }\n\n                try {\n                  searchType = Object.keys(req.query)[0];\n                } catch (e) {\n                  console.error(\"No search keys specified: \".concat(e));\n                }\n\n                filters = {};\n                _context4.t0 = searchType;\n                _context4.next = _context4.t0 === \"genre\" ? 7 : _context4.t0 === \"cast\" ? 9 : _context4.t0 === \"text\" ? 11 : 13;\n                break;\n\n              case 7:\n                if (req.query.genre !== \"\") {\n                  filters.genre = req.query.genre;\n                }\n\n                return _context4.abrupt(\"break\", 13);\n\n              case 9:\n                if (req.query.cast !== \"\") {\n                  filters.cast = req.query.cast;\n                }\n\n                return _context4.abrupt(\"break\", 13);\n\n              case 11:\n                if (req.query.text !== \"\") {\n                  filters.text = req.query.text;\n                }\n\n                return _context4.abrupt(\"break\", 13);\n\n              case 13:\n                _context4.next = 15;\n                return _moviesDAO[\"default\"].getMovies({\n                  filters: filters,\n                  page: page,\n                  MOVIES_PER_PAGE: MOVIES_PER_PAGE\n                });\n\n              case 15:\n                _yield$MoviesDAO$getM2 = _context4.sent;\n                moviesList = _yield$MoviesDAO$getM2.moviesList;\n                totalNumMovies = _yield$MoviesDAO$getM2.totalNumMovies;\n                response = {\n                  movies: moviesList,\n                  page: page,\n                  filters: filters,\n                  entries_per_page: MOVIES_PER_PAGE,\n                  total_results: totalNumMovies\n                };\n                res.json(response);\n\n              case 20:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function apiSearchMovies(_x10, _x11, _x12) {\n        return _apiSearchMovies.apply(this, arguments);\n      }\n\n      return apiSearchMovies;\n    }()\n  }, {\n    key: \"apiFacetedSearch\",\n    value: function () {\n      var _apiFacetedSearch = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5(req, res, next) {\n        var MOVIES_PER_PAGE, page, filters, facetedSearchResult, response;\n        return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                MOVIES_PER_PAGE = 20;\n\n                try {\n                  page = req.query.page ? parseInt(req.query.page, 10) : 0;\n                } catch (e) {\n                  console.error(\"Got bad value for page, defaulting to 0: \".concat(e));\n                  page = 0;\n                }\n\n                filters = {};\n                filters = req.query.cast !== \"\" ? {\n                  cast: new RegExp(req.query.cast, \"i\")\n                } : {\n                  cast: \"Tom Hanks\"\n                };\n                _context5.next = 6;\n                return _moviesDAO[\"default\"].facetedSearch({\n                  filters: filters,\n                  page: page,\n                  MOVIES_PER_PAGE: MOVIES_PER_PAGE\n                });\n\n              case 6:\n                facetedSearchResult = _context5.sent;\n                response = {\n                  movies: facetedSearchResult.movies,\n                  facets: {\n                    runtime: facetedSearchResult.runtime,\n                    rating: facetedSearchResult.rating\n                  },\n                  page: page,\n                  filters: filters,\n                  entries_per_page: MOVIES_PER_PAGE,\n                  total_results: facetedSearchResult.count\n                };\n                res.json(response);\n\n              case 9:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function apiFacetedSearch(_x13, _x14, _x15) {\n        return _apiFacetedSearch.apply(this, arguments);\n      }\n\n      return apiFacetedSearch;\n    }()\n  }, {\n    key: \"getConfig\",\n    value: function () {\n      var _getConfig = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6(req, res, next) {\n        var _yield$MoviesDAO$getC, poolSize, wtimeout, authInfo, response;\n\n        return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return _moviesDAO[\"default\"].getConfiguration();\n\n              case 2:\n                _yield$MoviesDAO$getC = _context6.sent;\n                poolSize = _yield$MoviesDAO$getC.poolSize;\n                wtimeout = _yield$MoviesDAO$getC.wtimeout;\n                authInfo = _yield$MoviesDAO$getC.authInfo;\n\n                try {\n                  response = _objectSpread({\n                    pool_size: poolSize,\n                    wtimeout: wtimeout\n                  }, authInfo);\n                  res.json(response);\n                } catch (e) {\n                  res.status(500).json({\n                    error: e\n                  });\n                }\n\n              case 7:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function getConfig(_x16, _x17, _x18) {\n        return _getConfig.apply(this, arguments);\n      }\n\n      return getConfig;\n    }()\n  }]);\n  return MoviesController;\n}();\n\nexports[\"default\"] = MoviesController;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "names": [
        "MoviesController",
        "req",
        "res",
        "next",
        "MOVIES_PER_PAGE",
        "MoviesDAO",
        "getMovies",
        "moviesList",
        "totalNumMovies",
        "response",
        "movies",
        "page",
        "filters",
        "entries_per_page",
        "total_results",
        "json",
        "countries",
        "query",
        "countryList",
        "Array",
        "isArray",
        "getMoviesByCountry",
        "titles",
        "id",
        "params",
        "getMovieByID",
        "movie",
        "status",
        "error",
        "updated_type",
        "lastupdated",
        "Date",
        "console",
        "log",
        "parseInt",
        "e",
        "searchType",
        "Object",
        "keys",
        "genre",
        "cast",
        "text",
        "RegExp",
        "facetedSearch",
        "facetedSearchResult",
        "facets",
        "runtime",
        "rating",
        "count",
        "getConfiguration",
        "poolSize",
        "wtimeout",
        "authInfo",
        "pool_size"
      ],
      "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api",
      "sources": [
        "movies.controller.js"
      ],
      "sourcesContent": [
        "import MoviesDAO from \"../dao/moviesDAO\"\n\nexport default class MoviesController {\n  static async apiGetMovies(req, res, next) {\n    const MOVIES_PER_PAGE = 20\n    const { moviesList, totalNumMovies } = await MoviesDAO.getMovies()\n    let response = {\n      movies: moviesList,\n      page: 0,\n      filters: {},\n      entries_per_page: MOVIES_PER_PAGE,\n      total_results: totalNumMovies,\n    }\n    res.json(response)\n  }\n\n  static async apiGetMoviesByCountry(req, res, next) {\n    let countries = req.query.countries == \"\" ? \"USA\" : req.query.countries\n    let countryList = Array.isArray(countries) ? countries : Array(countries)\n    let moviesList = await MoviesDAO.getMoviesByCountry(countryList)\n    let response = {\n      titles: moviesList,\n    }\n    res.json(response)\n  }\n\n  static async apiGetMovieById(req, res, next) {\n    try {\n      let id = req.params.id || {}\n      let movie = await MoviesDAO.getMovieByID(id)\n      if (!movie) {\n        res.status(404).json({ error: \"Not found\" })\n        return\n      }\n      let updated_type = movie.lastupdated instanceof Date ? \"Date\" : \"other\"\n      res.json({ movie, updated_type })\n    } catch (e) {\n      console.log(`api, ${e}`)\n      res.status(500).json({ error: e })\n    }\n  }\n\n  static async apiSearchMovies(req, res, next) {\n    const MOVIES_PER_PAGE = 20\n    let page\n    try {\n      page = req.query.page ? parseInt(req.query.page, 10) : 0\n    } catch (e) {\n      console.error(`Got bad value for page:, ${e}`)\n      page = 0\n    }\n    let searchType\n    try {\n      searchType = Object.keys(req.query)[0]\n    } catch (e) {\n      console.error(`No search keys specified: ${e}`)\n    }\n\n    let filters = {}\n\n    switch (searchType) {\n      case \"genre\":\n        if (req.query.genre !== \"\") {\n          filters.genre = req.query.genre\n        }\n        break\n      case \"cast\":\n        if (req.query.cast !== \"\") {\n          filters.cast = req.query.cast\n        }\n        break\n      case \"text\":\n        if (req.query.text !== \"\") {\n          filters.text = req.query.text\n        }\n        break\n      default:\n      // nothing to do\n    }\n\n    const { moviesList, totalNumMovies } = await MoviesDAO.getMovies({\n      filters,\n      page,\n      MOVIES_PER_PAGE,\n    })\n\n    let response = {\n      movies: moviesList,\n      page: page,\n      filters,\n      entries_per_page: MOVIES_PER_PAGE,\n      total_results: totalNumMovies,\n    }\n\n    res.json(response)\n  }\n\n  static async apiFacetedSearch(req, res, next) {\n    const MOVIES_PER_PAGE = 20\n\n    let page\n    try {\n      page = req.query.page ? parseInt(req.query.page, 10) : 0\n    } catch (e) {\n      console.error(`Got bad value for page, defaulting to 0: ${e}`)\n      page = 0\n    }\n\n    let filters = {}\n\n    filters =\n      req.query.cast !== \"\"\n        ? { cast: new RegExp(req.query.cast, \"i\") }\n        : { cast: \"Tom Hanks\" }\n\n    const facetedSearchResult = await MoviesDAO.facetedSearch({\n      filters,\n      page,\n      MOVIES_PER_PAGE,\n    })\n\n    let response = {\n      movies: facetedSearchResult.movies,\n      facets: {\n        runtime: facetedSearchResult.runtime,\n        rating: facetedSearchResult.rating,\n      },\n      page: page,\n      filters,\n      entries_per_page: MOVIES_PER_PAGE,\n      total_results: facetedSearchResult.count,\n    }\n\n    res.json(response)\n  }\n\n  static async getConfig(req, res, next) {\n    const { poolSize, wtimeout, authInfo } = await MoviesDAO.getConfiguration()\n    try {\n      let response = {\n        pool_size: poolSize,\n        wtimeout,\n        ...authInfo,\n      }\n      res.json(response)\n    } catch (e) {\n      res.status(500).json({ error: e })\n    }\n  }\n}\n"
      ],
      "mappings": "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"
    },
    "sourceType": "script",
    "externalDependencies": {},
    "mtime": 1641016800000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js\",\"filename\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao/moviesDAO.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"syntax-dynamic-import\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-decorators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"legacy\":true},\"externalDependencies\":[]},{\"key\":\"proposal-function-sent\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"MetaProperty\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-throw-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"UnaryExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-export-default-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-pipeline-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"proposal\":\"minimal\"},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-do-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DoExpression\":{\"exit\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.18.10": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js",
      "filename": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao/moviesDAO.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-decorators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "legacy": true
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-function-sent",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "MetaProperty": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-throw-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "UnaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-export-default-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-pipeline-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "proposal": "minimal"
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-do-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DoExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao/moviesDAO.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "decorators-legacy",
          "functionSent",
          "exportNamespaceFrom",
          "numericSeparator",
          "throwExpressions",
          "exportDefaultFrom",
          "logicalAssignment",
          "optionalChaining",
          [
            "pipelineOperator",
            {
              "proposal": "minimal"
            }
          ],
          "nullishCoalescingOperator",
          "doExpressions",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao/moviesDAO.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao",
        "sourceFileName": "moviesDAO.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _bson = require(\"bson\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar movies;\nvar mflix;\nvar DEFAULT_SORT = [[\"tomatoes.viewer.numReviews\", -1]];\n\nvar MoviesDAO = /*#__PURE__*/function () {\n  function MoviesDAO() {\n    (0, _classCallCheck2[\"default\"])(this, MoviesDAO);\n  }\n\n  (0, _createClass2[\"default\"])(MoviesDAO, null, [{\n    key: \"injectDB\",\n    value: function () {\n      var _injectDB = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(conn) {\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!movies) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                _context.prev = 2;\n                _context.next = 5;\n                return conn.db(process.env.MFLIX_NS);\n\n              case 5:\n                mflix = _context.sent;\n                _context.next = 8;\n                return conn.db(process.env.MFLIX_NS).collection(\"movies\");\n\n              case 8:\n                movies = _context.sent;\n                this.movies = movies; // this is only for testing\n\n                _context.next = 15;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](2);\n                console.error(\"Unable to establish a collection handle in moviesDAO: \".concat(_context.t0));\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 12]]);\n      }));\n\n      function injectDB(_x) {\n        return _injectDB.apply(this, arguments);\n      }\n\n      return injectDB;\n    }()\n    /**\n     * Retrieves the connection pool size, write concern and user roles on the\n     * current client.\n     * @returns {Promise<ConfigurationResult>} An object with configuration details.\n     */\n\n  }, {\n    key: \"getConfiguration\",\n    value: function () {\n      var _getConfiguration = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        var roleInfo, authInfo, _movies$s$db$serverCo, poolSize, wtimeout, response;\n\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return mflix.command({\n                  connectionStatus: 1\n                });\n\n              case 2:\n                roleInfo = _context2.sent;\n                authInfo = roleInfo.authInfo.authenticatedUserRoles[0];\n                _movies$s$db$serverCo = movies.s.db.serverConfig.s.options, poolSize = _movies$s$db$serverCo.poolSize, wtimeout = _movies$s$db$serverCo.wtimeout;\n                response = {\n                  poolSize: poolSize,\n                  wtimeout: wtimeout,\n                  authInfo: authInfo\n                };\n                return _context2.abrupt(\"return\", response);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getConfiguration() {\n        return _getConfiguration.apply(this, arguments);\n      }\n\n      return getConfiguration;\n    }()\n    /**\n     * Finds and returns movies originating from one or more countries.\n     * Returns a list of objects, each object contains a title and an _id.\n     * @param {string[]} countries - The list of countries.\n     * @returns {Promise<CountryResult>} A promise that will resolve to a list of CountryResults.\n     */\n\n  }, {\n    key: \"getMoviesByCountry\",\n    value: function () {\n      var _getMoviesByCountry = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(countries) {\n        var cursor;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return movies.find({\n                  countries: {\n                    $in: countries\n                  }\n                }).project({\n                  title: 1\n                });\n\n              case 3:\n                cursor = _context3.sent;\n                _context3.next = 10;\n                break;\n\n              case 6:\n                _context3.prev = 6;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.error(\"Unable to issue find command, \".concat(_context3.t0));\n                return _context3.abrupt(\"return\", []);\n\n              case 10:\n                return _context3.abrupt(\"return\", cursor.toArray());\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 6]]);\n      }));\n\n      function getMoviesByCountry(_x2) {\n        return _getMoviesByCountry.apply(this, arguments);\n      }\n\n      return getMoviesByCountry;\n    }()\n    /**\n     * Finds and returns movies matching a given text in their title or description.\n     * @param {string} text - The text to match with.\n     * @returns {QueryParams} The QueryParams for text search\n     */\n\n  }, {\n    key: \"textSearchQuery\",\n    value: function textSearchQuery(text) {\n      var query = {\n        $text: {\n          $search: text\n        }\n      };\n      var meta_score = {\n        $meta: \"textScore\"\n      };\n      var sort = [[\"score\", meta_score]];\n      var project = {\n        score: meta_score\n      };\n      return {\n        query: query,\n        project: project,\n        sort: sort\n      };\n    }\n    /**\n     * Finds and returns movies including one or more cast members.\n     * @param {string[]} cast - The cast members to match with.\n     * @returns {QueryParams} The QueryParams for cast search\n     */\n\n  }, {\n    key: \"castSearchQuery\",\n    value: function castSearchQuery(cast) {\n      var searchCast = Array.isArray(cast) ? cast : cast.split(\", \");\n      var query = {\n        cast: {\n          $in: searchCast\n        }\n      };\n      var project = {};\n      var sort = DEFAULT_SORT;\n      return {\n        query: query,\n        project: project,\n        sort: sort\n      };\n    }\n    /**\n     * Finds and returns movies matching a one or more genres.\n     * @param {string[]} genre - The genres to match with.\n     * @returns {QueryParams} The QueryParams for genre search\n     */\n\n  }, {\n    key: \"genreSearchQuery\",\n    value: function genreSearchQuery(genre) {\n      /**\n      Ticket: Text and Subfield Search\n         Given an array of one or more genres, construct a query that searches\n      MongoDB for movies with that genre.\n      */\n      var searchGenre = Array.isArray(genre) ? genre : genre.split(\", \"); // TODO Ticket: Text and Subfield Search\n      // Construct a query that will search for the chosen genre.\n\n      var query = {\n        'genres': {\n          $in: searchGenre\n        }\n      };\n      var project = {};\n      var sort = DEFAULT_SORT;\n      return {\n        query: query,\n        project: project,\n        sort: sort\n      };\n    }\n    /**\n     *\n     * @param {Object} filters - The search parameter to use in the query. Comes\n     * in the form of `{cast: { $in: [...castMembers]}}`\n     * @param {number} page - The page of movies to retrieve.\n     * @param {number} moviesPerPage - The number of movies to display per page.\n     * @returns {FacetedSearchReturn} FacetedSearchReturn\n     */\n\n  }, {\n    key: \"facetedSearch\",\n    value: function () {\n      var _facetedSearch = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4() {\n        var _ref,\n            _ref$filters,\n            filters,\n            _ref$page,\n            page,\n            _ref$moviesPerPage,\n            moviesPerPage,\n            matchStage,\n            sortStage,\n            countingPipeline,\n            skipStage,\n            limitStage,\n            facetStage,\n            queryPipeline,\n            results,\n            count,\n            _args4 = arguments;\n\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _ref = _args4.length > 0 && _args4[0] !== undefined ? _args4[0] : {}, _ref$filters = _ref.filters, filters = _ref$filters === void 0 ? null : _ref$filters, _ref$page = _ref.page, page = _ref$page === void 0 ? 0 : _ref$page, _ref$moviesPerPage = _ref.moviesPerPage, moviesPerPage = _ref$moviesPerPage === void 0 ? 20 : _ref$moviesPerPage;\n\n                if (!(!filters || !filters.cast)) {\n                  _context4.next = 3;\n                  break;\n                }\n\n                throw new Error(\"Must specify cast members to filter by.\");\n\n              case 3:\n                matchStage = {\n                  $match: filters\n                };\n                sortStage = {\n                  $sort: {\n                    \"tomatoes.viewer.numReviews\": -1\n                  }\n                };\n                countingPipeline = [matchStage, sortStage, {\n                  $count: \"count\"\n                }];\n                skipStage = {\n                  $skip: moviesPerPage * page\n                };\n                limitStage = {\n                  $limit: moviesPerPage\n                };\n                facetStage = {\n                  $facet: {\n                    runtime: [{\n                      $bucket: {\n                        groupBy: \"$runtime\",\n                        boundaries: [0, 60, 90, 120, 180],\n                        \"default\": \"other\",\n                        output: {\n                          count: {\n                            $sum: 1\n                          }\n                        }\n                      }\n                    }],\n                    rating: [{\n                      $bucket: {\n                        groupBy: \"$metacritic\",\n                        boundaries: [0, 50, 70, 90, 100],\n                        \"default\": \"other\",\n                        output: {\n                          count: {\n                            $sum: 1\n                          }\n                        }\n                      }\n                    }],\n                    movies: [{\n                      $addFields: {\n                        title: \"$title\"\n                      }\n                    }]\n                  }\n                };\n                /**\n                Ticket: Faceted Search\n                   Please append the skipStage, limitStage, and facetStage to the queryPipeline\n                (in that order). You can accomplish this by adding the stages directly to\n                the queryPipeline.\n                   The queryPipeline is a Javascript array, so you can use push() or concat()\n                to complete this task, but you might have to do something about `const`.\n                */\n\n                queryPipeline = [matchStage, sortStage, skipStage, limitStage, facetStage // TODO Ticket: Faceted Search\n                // Add the stages to queryPipeline in the correct order.\n                ];\n                _context4.prev = 10;\n                _context4.next = 13;\n                return movies.aggregate(queryPipeline);\n\n              case 13:\n                _context4.next = 15;\n                return _context4.sent.next();\n\n              case 15:\n                results = _context4.sent;\n                _context4.next = 18;\n                return movies.aggregate(countingPipeline);\n\n              case 18:\n                _context4.next = 20;\n                return _context4.sent.next();\n\n              case 20:\n                count = _context4.sent;\n                return _context4.abrupt(\"return\", _objectSpread({}, results, {}, count));\n\n              case 24:\n                _context4.prev = 24;\n                _context4.t0 = _context4[\"catch\"](10);\n                return _context4.abrupt(\"return\", {\n                  error: \"Results too large, be more restrictive in filter\"\n                });\n\n              case 27:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[10, 24]]);\n      }));\n\n      function facetedSearch() {\n        return _facetedSearch.apply(this, arguments);\n      }\n\n      return facetedSearch;\n    }()\n    /**\n     * Finds and returns movies by country.\n     * Returns a list of objects, each object contains a title and an _id.\n     * @param {Object} filters - The search parameters to use in the query.\n     * @param {number} page - The page of movies to retrieve.\n     * @param {number} moviesPerPage - The number of movies to display per page.\n     * @returns {GetMoviesResult} An object with movie results and total results\n     * that would match this query\n     */\n\n  }, {\n    key: \"getMovies\",\n    value: function () {\n      var _getMovies = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5() {\n        var _ref2,\n            _ref2$filters,\n            filters,\n            _ref2$page,\n            page,\n            _ref2$moviesPerPage,\n            moviesPerPage,\n            queryParams,\n            _queryParams,\n            _queryParams$query,\n            query,\n            _queryParams$project,\n            project,\n            _queryParams$sort,\n            sort,\n            cursor,\n            displayCursor,\n            moviesList,\n            totalNumMovies,\n            _args5 = arguments;\n\n        return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _ref2 = _args5.length > 0 && _args5[0] !== undefined ? _args5[0] : {}, _ref2$filters = _ref2.filters, filters = _ref2$filters === void 0 ? null : _ref2$filters, _ref2$page = _ref2.page, page = _ref2$page === void 0 ? 0 : _ref2$page, _ref2$moviesPerPage = _ref2.moviesPerPage, moviesPerPage = _ref2$moviesPerPage === void 0 ? 20 : _ref2$moviesPerPage;\n                queryParams = {};\n\n                if (filters) {\n                  if (\"text\" in filters) {\n                    queryParams = this.textSearchQuery(filters[\"text\"]);\n                  } else if (\"cast\" in filters) {\n                    queryParams = this.castSearchQuery(filters[\"cast\"]);\n                  } else if (\"genre\" in filters) {\n                    queryParams = this.genreSearchQuery(filters[\"genre\"]);\n                  }\n                }\n\n                _queryParams = queryParams, _queryParams$query = _queryParams.query, query = _queryParams$query === void 0 ? {} : _queryParams$query, _queryParams$project = _queryParams.project, project = _queryParams$project === void 0 ? {} : _queryParams$project, _queryParams$sort = _queryParams.sort, sort = _queryParams$sort === void 0 ? DEFAULT_SORT : _queryParams$sort;\n                _context5.prev = 4;\n                _context5.next = 7;\n                return movies.find(query).project(project).sort(sort);\n\n              case 7:\n                cursor = _context5.sent;\n                _context5.next = 14;\n                break;\n\n              case 10:\n                _context5.prev = 10;\n                _context5.t0 = _context5[\"catch\"](4);\n                console.error(\"Unable to issue find command, \".concat(_context5.t0));\n                return _context5.abrupt(\"return\", {\n                  moviesList: [],\n                  totalNumMovies: 0\n                });\n\n              case 14:\n                /**\n                Ticket: Paging\n                   Before this method returns back to the API, use the \"moviesPerPage\" and\n                \"page\" arguments to decide the movies to display.\n                   Paging can be implemented by using the skip() and limit() cursor methods.\n                */\n                // TODO Ticket: Paging\n                // Use the cursor to only return the movies that belong on the current page\n                displayCursor = cursor.limit(moviesPerPage).skip(moviesPerPage * page);\n                _context5.prev = 15;\n                _context5.next = 18;\n                return displayCursor.toArray();\n\n              case 18:\n                moviesList = _context5.sent;\n\n                if (!(page === 0)) {\n                  _context5.next = 25;\n                  break;\n                }\n\n                _context5.next = 22;\n                return movies.countDocuments(query);\n\n              case 22:\n                _context5.t1 = _context5.sent;\n                _context5.next = 26;\n                break;\n\n              case 25:\n                _context5.t1 = 0;\n\n              case 26:\n                totalNumMovies = _context5.t1;\n                return _context5.abrupt(\"return\", {\n                  moviesList: moviesList,\n                  totalNumMovies: totalNumMovies\n                });\n\n              case 30:\n                _context5.prev = 30;\n                _context5.t2 = _context5[\"catch\"](15);\n                console.error(\"Unable to convert cursor to array or problem counting documents, \".concat(_context5.t2));\n                return _context5.abrupt(\"return\", {\n                  moviesList: [],\n                  totalNumMovies: 0\n                });\n\n              case 34:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[4, 10], [15, 30]]);\n      }));\n\n      function getMovies() {\n        return _getMovies.apply(this, arguments);\n      }\n\n      return getMovies;\n    }()\n    /**\n     * Gets a movie by its id\n     * @param {string} id - The desired movie id, the _id in Mongo\n     * @returns {MflixMovie | null} Returns either a single movie or nothing\n     */\n\n  }, {\n    key: \"getMovieByID\",\n    value: function () {\n      var _getMovieByID = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6(id) {\n        var pipeline;\n        return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.prev = 0;\n\n                /**\n                Ticket: Get Comments\n                   Given a movie ID, build an Aggregation Pipeline to retrieve the comments\n                matching that movie's ID.\n                   The $match stage is already completed. You will need to add a $lookup\n                stage that searches the `comments` collection for the correct comments.\n                */\n                // TODO Ticket: Get Comments\n                // Implement the required pipeline.\n                pipeline = [{\n                  $match: {\n                    _id: (0, _bson.ObjectId)(id)\n                  }\n                }, {\n                  \"$lookup\": {\n                    \"from\": \"comments\",\n                    \"let\": {\n                      \"id\": \"$_id\"\n                    },\n                    \"pipeline\": [{\n                      \"$match\": {\n                        \"$expr\": {\n                          \"$eq\": [\"$movie_id\", \"$$id\"]\n                        }\n                      }\n                    }, {\n                      \"$sort\": {\n                        \"date\": -1\n                      }\n                    }],\n                    \"as\": \"comments\"\n                  }\n                }];\n                _context6.next = 4;\n                return movies.aggregate(pipeline).next();\n\n              case 4:\n                return _context6.abrupt(\"return\", _context6.sent);\n\n              case 7:\n                _context6.prev = 7;\n                _context6.t0 = _context6[\"catch\"](0);\n\n                /**\n                Ticket: Error Handling\n                      Handle the error that occurs when an invalid ID is passed to this method.\n                When this specific error is thrown, the method should return `null`.\n                */\n                // TODO Ticket: Error Handling\n                // Catch the InvalidId error by string matching, and then handle it.\n                console.error(\"Something went wrong in getMovieByID: \".concat(_context6.t0));\n                throw _context6.t0;\n\n              case 11:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, null, [[0, 7]]);\n      }));\n\n      function getMovieByID(_x3) {\n        return _getMovieByID.apply(this, arguments);\n      }\n\n      return getMovieByID;\n    }()\n  }]);\n  return MoviesDAO;\n}();\n/**\n * This is a parsed query, sort, and project bundle.\n * @typedef QueryParams\n * @property {Object} query - The specified query, transformed accordingly\n * @property {any[]} sort - The specified sort\n * @property {Object} project - The specified project, if any\n */\n\n/**\n * Represents a single country result\n * @typedef CountryResult\n * @property {string} ObjectID - The ObjectID of the movie\n * @property {string} title - The title of the movie\n */\n\n/**\n * A Movie from mflix\n * @typedef MflixMovie\n * @property {string} _id\n * @property {string} title\n * @property {number} year\n * @property {number} runtime\n * @property {Date} released\n * @property {string[]} cast\n * @property {number} metacriticd\n * @property {string} poster\n * @property {string} plot\n * @property {string} fullplot\n * @property {string|Date} lastupdated\n * @property {string} type\n * @property {string[]} languages\n * @property {string[]} directors\n * @property {string[]} writers\n * @property {IMDB} imdb\n * @property {string[]} countries\n * @property {string[]} rated\n * @property {string[]} genres\n * @property {string[]} comments\n */\n\n/**\n * IMDB subdocument\n * @typedef IMDB\n * @property {number} rating\n * @property {number} votes\n * @property {number} id\n */\n\n/**\n * Result set for getMovies method\n * @typedef GetMoviesResult\n * @property {MflixMovies[]} moviesList\n * @property {number} totalNumResults\n */\n\n/**\n * Faceted Search Return\n *\n * The type of return from faceted search. It will be a single document with\n * 3 fields: rating, runtime, and movies.\n * @typedef FacetedSearchReturn\n * @property {object} rating\n * @property {object} runtime\n * @property {MFlixMovie[]}movies\n */\n\n\nexports[\"default\"] = MoviesDAO;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtb3ZpZXMiLCJtZmxpeCIsIkRFRkFVTFRfU09SVCIsIk1vdmllc0RBTyIsImNvbm4iLCJkYiIsInByb2Nlc3MiLCJlbnYiLCJNRkxJWF9OUyIsImNvbGxlY3Rpb24iLCJjb25zb2xlIiwiZXJyb3IiLCJjb21tYW5kIiwiY29ubmVjdGlvblN0YXR1cyIsInJvbGVJbmZvIiwiYXV0aEluZm8iLCJhdXRoZW50aWNhdGVkVXNlclJvbGVzIiwicyIsInNlcnZlckNvbmZpZyIsIm9wdGlvbnMiLCJwb29sU2l6ZSIsInd0aW1lb3V0IiwicmVzcG9uc2UiLCJjb3VudHJpZXMiLCJmaW5kIiwiJGluIiwicHJvamVjdCIsInRpdGxlIiwiY3Vyc29yIiwidG9BcnJheSIsInRleHQiLCJxdWVyeSIsIiR0ZXh0IiwiJHNlYXJjaCIsIm1ldGFfc2NvcmUiLCIkbWV0YSIsInNvcnQiLCJzY29yZSIsImNhc3QiLCJzZWFyY2hDYXN0IiwiQXJyYXkiLCJpc0FycmF5Iiwic3BsaXQiLCJnZW5yZSIsInNlYXJjaEdlbnJlIiwiZmlsdGVycyIsInBhZ2UiLCJtb3ZpZXNQZXJQYWdlIiwiRXJyb3IiLCJtYXRjaFN0YWdlIiwiJG1hdGNoIiwic29ydFN0YWdlIiwiJHNvcnQiLCJjb3VudGluZ1BpcGVsaW5lIiwiJGNvdW50Iiwic2tpcFN0YWdlIiwiJHNraXAiLCJsaW1pdFN0YWdlIiwiJGxpbWl0IiwiZmFjZXRTdGFnZSIsIiRmYWNldCIsInJ1bnRpbWUiLCIkYnVja2V0IiwiZ3JvdXBCeSIsImJvdW5kYXJpZXMiLCJvdXRwdXQiLCJjb3VudCIsIiRzdW0iLCJyYXRpbmciLCIkYWRkRmllbGRzIiwicXVlcnlQaXBlbGluZSIsImFnZ3JlZ2F0ZSIsIm5leHQiLCJyZXN1bHRzIiwicXVlcnlQYXJhbXMiLCJ0ZXh0U2VhcmNoUXVlcnkiLCJjYXN0U2VhcmNoUXVlcnkiLCJnZW5yZVNlYXJjaFF1ZXJ5IiwibW92aWVzTGlzdCIsInRvdGFsTnVtTW92aWVzIiwiZGlzcGxheUN1cnNvciIsImxpbWl0Iiwic2tpcCIsImNvdW50RG9jdW1lbnRzIiwiaWQiLCJwaXBlbGluZSIsIl9pZCIsIk9iamVjdElkIl0sInNvdXJjZVJvb3QiOiIvVXNlcnMvZnVzaW9udGVjaC9Eb2N1bWVudHMvRnVzaW9uVGVjaC9NMjIwL21mbGl4LWpzL3NyYy9kYW8iLCJzb3VyY2VzIjpbIm1vdmllc0RBTy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPYmplY3RJZCB9IGZyb20gXCJic29uXCJcblxubGV0IG1vdmllc1xubGV0IG1mbGl4XG5jb25zdCBERUZBVUxUX1NPUlQgPSBbW1widG9tYXRvZXMudmlld2VyLm51bVJldmlld3NcIiwgLTFdXVxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNb3ZpZXNEQU8ge1xuICBzdGF0aWMgYXN5bmMgaW5qZWN0REIoY29ubikge1xuICAgIGlmIChtb3ZpZXMpIHtcbiAgICAgIHJldHVyblxuICAgIH1cbiAgICB0cnkge1xuICAgICAgbWZsaXggPSBhd2FpdCBjb25uLmRiKHByb2Nlc3MuZW52Lk1GTElYX05TKVxuICAgICAgbW92aWVzID0gYXdhaXQgY29ubi5kYihwcm9jZXNzLmVudi5NRkxJWF9OUykuY29sbGVjdGlvbihcIm1vdmllc1wiKVxuICAgICAgdGhpcy5tb3ZpZXMgPSBtb3ZpZXMgLy8gdGhpcyBpcyBvbmx5IGZvciB0ZXN0aW5nXG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgY29uc29sZS5lcnJvcihcbiAgICAgICAgYFVuYWJsZSB0byBlc3RhYmxpc2ggYSBjb2xsZWN0aW9uIGhhbmRsZSBpbiBtb3ZpZXNEQU86ICR7ZX1gLFxuICAgICAgKVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBSZXRyaWV2ZXMgdGhlIGNvbm5lY3Rpb24gcG9vbCBzaXplLCB3cml0ZSBjb25jZXJuIGFuZCB1c2VyIHJvbGVzIG9uIHRoZVxuICAgKiBjdXJyZW50IGNsaWVudC5cbiAgICogQHJldHVybnMge1Byb21pc2U8Q29uZmlndXJhdGlvblJlc3VsdD59IEFuIG9iamVjdCB3aXRoIGNvbmZpZ3VyYXRpb24gZGV0YWlscy5cbiAgICovXG4gIHN0YXRpYyBhc3luYyBnZXRDb25maWd1cmF0aW9uKCkge1xuICAgIGNvbnN0IHJvbGVJbmZvID0gYXdhaXQgbWZsaXguY29tbWFuZCh7IGNvbm5lY3Rpb25TdGF0dXM6IDEgfSlcbiAgICBjb25zdCBhdXRoSW5mbyA9IHJvbGVJbmZvLmF1dGhJbmZvLmF1dGhlbnRpY2F0ZWRVc2VyUm9sZXNbMF1cbiAgICBjb25zdCB7IHBvb2xTaXplLCB3dGltZW91dCB9ID0gbW92aWVzLnMuZGIuc2VydmVyQ29uZmlnLnMub3B0aW9uc1xuICAgIGxldCByZXNwb25zZSA9IHtcbiAgICAgIHBvb2xTaXplLFxuICAgICAgd3RpbWVvdXQsXG4gICAgICBhdXRoSW5mbyxcbiAgICB9XG4gICAgcmV0dXJuIHJlc3BvbnNlXG4gIH1cblxuICAvKipcbiAgICogRmluZHMgYW5kIHJldHVybnMgbW92aWVzIG9yaWdpbmF0aW5nIGZyb20gb25lIG9yIG1vcmUgY291bnRyaWVzLlxuICAgKiBSZXR1cm5zIGEgbGlzdCBvZiBvYmplY3RzLCBlYWNoIG9iamVjdCBjb250YWlucyBhIHRpdGxlIGFuZCBhbiBfaWQuXG4gICAqIEBwYXJhbSB7c3RyaW5nW119IGNvdW50cmllcyAtIFRoZSBsaXN0IG9mIGNvdW50cmllcy5cbiAgICogQHJldHVybnMge1Byb21pc2U8Q291bnRyeVJlc3VsdD59IEEgcHJvbWlzZSB0aGF0IHdpbGwgcmVzb2x2ZSB0byBhIGxpc3Qgb2YgQ291bnRyeVJlc3VsdHMuXG4gICAqL1xuICBzdGF0aWMgYXN5bmMgZ2V0TW92aWVzQnlDb3VudHJ5KGNvdW50cmllcykge1xuICAgIC8qKlxuICAgIFRpY2tldDogUHJvamVjdGlvblxuXG4gICAgV3JpdGUgYSBxdWVyeSB0aGF0IG1hdGNoZXMgbW92aWVzIHdpdGggdGhlIGNvdW50cmllcyBpbiB0aGUgXCJjb3VudHJpZXNcIlxuICAgIGxpc3QsIGJ1dCBvbmx5IHJldHVybnMgdGhlIHRpdGxlIGFuZCBfaWQgb2YgZWFjaCBtb3ZpZS5cblxuICAgIFJlbWVtYmVyIHRoYXQgaW4gTW9uZ29EQiwgdGhlICRpbiBvcGVyYXRvciBjYW4gYmUgdXNlZCB3aXRoIGEgbGlzdCB0b1xuICAgIG1hdGNoIG9uZSBvciBtb3JlIHZhbHVlcyBvZiBhIHNwZWNpZmljIGZpZWxkLlxuICAgICovXG5cbiAgICBsZXQgY3Vyc29yXG4gICAgdHJ5IHtcbiAgICAgIC8vIFRPRE8gVGlja2V0OiBQcm9qZWN0aW9uXG4gICAgICAvLyBGaW5kIG1vdmllcyBtYXRjaGluZyB0aGUgXCJjb3VudHJpZXNcIiBsaXN0LCBidXQgb25seSByZXR1cm4gdGhlIHRpdGxlXG4gICAgICAvLyBhbmQgX2lkLiBEbyBub3QgcHV0IGEgbGltaXQgaW4geW91ciBvd24gaW1wbGVtZW50YXRpb24sIHRoZSBsaW1pdFxuICAgICAgLy8gaGVyZSBpcyBvbmx5IGluY2x1ZGVkIHRvIGF2b2lkIHNlbmRpbmcgNDYwMDAgZG9jdW1lbnRzIGRvd24gdGhlXG4gICAgICAvLyB3aXJlLlxuICAgICAgY3Vyc29yID0gYXdhaXQgbW92aWVzLmZpbmQoeyBjb3VudHJpZXM6IHsgJGluOiBjb3VudHJpZXMgfSB9KS5wcm9qZWN0KHsgdGl0bGU6IDEgfSlcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBjb25zb2xlLmVycm9yKGBVbmFibGUgdG8gaXNzdWUgZmluZCBjb21tYW5kLCAke2V9YClcbiAgICAgIHJldHVybiBbXVxuICAgIH1cblxuICAgIHJldHVybiBjdXJzb3IudG9BcnJheSgpXG4gIH1cblxuICAvKipcbiAgICogRmluZHMgYW5kIHJldHVybnMgbW92aWVzIG1hdGNoaW5nIGEgZ2l2ZW4gdGV4dCBpbiB0aGVpciB0aXRsZSBvciBkZXNjcmlwdGlvbi5cbiAgICogQHBhcmFtIHtzdHJpbmd9IHRleHQgLSBUaGUgdGV4dCB0byBtYXRjaCB3aXRoLlxuICAgKiBAcmV0dXJucyB7UXVlcnlQYXJhbXN9IFRoZSBRdWVyeVBhcmFtcyBmb3IgdGV4dCBzZWFyY2hcbiAgICovXG4gIHN0YXRpYyB0ZXh0U2VhcmNoUXVlcnkodGV4dCkge1xuICAgIGNvbnN0IHF1ZXJ5ID0geyAkdGV4dDogeyAkc2VhcmNoOiB0ZXh0IH0gfVxuICAgIGNvbnN0IG1ldGFfc2NvcmUgPSB7ICRtZXRhOiBcInRleHRTY29yZVwiIH1cbiAgICBjb25zdCBzb3J0ID0gW1tcInNjb3JlXCIsIG1ldGFfc2NvcmVdXVxuICAgIGNvbnN0IHByb2plY3QgPSB7IHNjb3JlOiBtZXRhX3Njb3JlIH1cblxuICAgIHJldHVybiB7IHF1ZXJ5LCBwcm9qZWN0LCBzb3J0IH1cbiAgfVxuXG4gIC8qKlxuICAgKiBGaW5kcyBhbmQgcmV0dXJucyBtb3ZpZXMgaW5jbHVkaW5nIG9uZSBvciBtb3JlIGNhc3QgbWVtYmVycy5cbiAgICogQHBhcmFtIHtzdHJpbmdbXX0gY2FzdCAtIFRoZSBjYXN0IG1lbWJlcnMgdG8gbWF0Y2ggd2l0aC5cbiAgICogQHJldHVybnMge1F1ZXJ5UGFyYW1zfSBUaGUgUXVlcnlQYXJhbXMgZm9yIGNhc3Qgc2VhcmNoXG4gICAqL1xuICBzdGF0aWMgY2FzdFNlYXJjaFF1ZXJ5KGNhc3QpIHtcbiAgICBjb25zdCBzZWFyY2hDYXN0ID0gQXJyYXkuaXNBcnJheShjYXN0KSA/IGNhc3QgOiBjYXN0LnNwbGl0KFwiLCBcIilcblxuICAgIGNvbnN0IHF1ZXJ5ID0geyBjYXN0OiB7ICRpbjogc2VhcmNoQ2FzdCB9IH1cbiAgICBjb25zdCBwcm9qZWN0ID0ge31cbiAgICBjb25zdCBzb3J0ID0gREVGQVVMVF9TT1JUXG5cbiAgICByZXR1cm4geyBxdWVyeSwgcHJvamVjdCwgc29ydCB9XG4gIH1cblxuICAvKipcbiAgICogRmluZHMgYW5kIHJldHVybnMgbW92aWVzIG1hdGNoaW5nIGEgb25lIG9yIG1vcmUgZ2VucmVzLlxuICAgKiBAcGFyYW0ge3N0cmluZ1tdfSBnZW5yZSAtIFRoZSBnZW5yZXMgdG8gbWF0Y2ggd2l0aC5cbiAgICogQHJldHVybnMge1F1ZXJ5UGFyYW1zfSBUaGUgUXVlcnlQYXJhbXMgZm9yIGdlbnJlIHNlYXJjaFxuICAgKi9cbiAgc3RhdGljIGdlbnJlU2VhcmNoUXVlcnkoZ2VucmUpIHtcbiAgICAvKipcbiAgICBUaWNrZXQ6IFRleHQgYW5kIFN1YmZpZWxkIFNlYXJjaFxuICBcbiAgICBHaXZlbiBhbiBhcnJheSBvZiBvbmUgb3IgbW9yZSBnZW5yZXMsIGNvbnN0cnVjdCBhIHF1ZXJ5IHRoYXQgc2VhcmNoZXNcbiAgICBNb25nb0RCIGZvciBtb3ZpZXMgd2l0aCB0aGF0IGdlbnJlLlxuICAgICovXG5cbiAgICBjb25zdCBzZWFyY2hHZW5yZSA9IEFycmF5LmlzQXJyYXkoZ2VucmUpID8gZ2VucmUgOiBnZW5yZS5zcGxpdChcIiwgXCIpXG5cbiAgICAvLyBUT0RPIFRpY2tldDogVGV4dCBhbmQgU3ViZmllbGQgU2VhcmNoXG4gICAgLy8gQ29uc3RydWN0IGEgcXVlcnkgdGhhdCB3aWxsIHNlYXJjaCBmb3IgdGhlIGNob3NlbiBnZW5yZS5cbiAgICBjb25zdCBxdWVyeSA9IHsgJ2dlbnJlcyc6IHsgJGluOiBzZWFyY2hHZW5yZSB9IH1cbiAgICBjb25zdCBwcm9qZWN0ID0ge31cbiAgICBjb25zdCBzb3J0ID0gREVGQVVMVF9TT1JUXG5cbiAgICByZXR1cm4geyBxdWVyeSwgcHJvamVjdCwgc29ydCB9XG4gIH1cblxuICAvKipcbiAgICpcbiAgICogQHBhcmFtIHtPYmplY3R9IGZpbHRlcnMgLSBUaGUgc2VhcmNoIHBhcmFtZXRlciB0byB1c2UgaW4gdGhlIHF1ZXJ5LiBDb21lc1xuICAgKiBpbiB0aGUgZm9ybSBvZiBge2Nhc3Q6IHsgJGluOiBbLi4uY2FzdE1lbWJlcnNdfX1gXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBwYWdlIC0gVGhlIHBhZ2Ugb2YgbW92aWVzIHRvIHJldHJpZXZlLlxuICAgKiBAcGFyYW0ge251bWJlcn0gbW92aWVzUGVyUGFnZSAtIFRoZSBudW1iZXIgb2YgbW92aWVzIHRvIGRpc3BsYXkgcGVyIHBhZ2UuXG4gICAqIEByZXR1cm5zIHtGYWNldGVkU2VhcmNoUmV0dXJufSBGYWNldGVkU2VhcmNoUmV0dXJuXG4gICAqL1xuICBzdGF0aWMgYXN5bmMgZmFjZXRlZFNlYXJjaCh7XG4gICAgZmlsdGVycyA9IG51bGwsXG4gICAgcGFnZSA9IDAsXG4gICAgbW92aWVzUGVyUGFnZSA9IDIwLFxuICB9ID0ge30pIHtcbiAgICBpZiAoIWZpbHRlcnMgfHwgIWZpbHRlcnMuY2FzdCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTXVzdCBzcGVjaWZ5IGNhc3QgbWVtYmVycyB0byBmaWx0ZXIgYnkuXCIpXG4gICAgfVxuICAgIGNvbnN0IG1hdGNoU3RhZ2UgPSB7ICRtYXRjaDogZmlsdGVycyB9XG4gICAgY29uc3Qgc29ydFN0YWdlID0geyAkc29ydDogeyBcInRvbWF0b2VzLnZpZXdlci5udW1SZXZpZXdzXCI6IC0xIH0gfVxuICAgIGNvbnN0IGNvdW50aW5nUGlwZWxpbmUgPSBbbWF0Y2hTdGFnZSwgc29ydFN0YWdlLCB7ICRjb3VudDogXCJjb3VudFwiIH1dXG4gICAgY29uc3Qgc2tpcFN0YWdlID0geyAkc2tpcDogbW92aWVzUGVyUGFnZSAqIHBhZ2UgfVxuICAgIGNvbnN0IGxpbWl0U3RhZ2UgPSB7ICRsaW1pdDogbW92aWVzUGVyUGFnZSB9XG4gICAgY29uc3QgZmFjZXRTdGFnZSA9IHtcbiAgICAgICRmYWNldDoge1xuICAgICAgICBydW50aW1lOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgJGJ1Y2tldDoge1xuICAgICAgICAgICAgICBncm91cEJ5OiBcIiRydW50aW1lXCIsXG4gICAgICAgICAgICAgIGJvdW5kYXJpZXM6IFswLCA2MCwgOTAsIDEyMCwgMTgwXSxcbiAgICAgICAgICAgICAgZGVmYXVsdDogXCJvdGhlclwiLFxuICAgICAgICAgICAgICBvdXRwdXQ6IHtcbiAgICAgICAgICAgICAgICBjb3VudDogeyAkc3VtOiAxIH0sXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIH0sXG4gICAgICAgIF0sXG4gICAgICAgIHJhdGluZzogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgICRidWNrZXQ6IHtcbiAgICAgICAgICAgICAgZ3JvdXBCeTogXCIkbWV0YWNyaXRpY1wiLFxuICAgICAgICAgICAgICBib3VuZGFyaWVzOiBbMCwgNTAsIDcwLCA5MCwgMTAwXSxcbiAgICAgICAgICAgICAgZGVmYXVsdDogXCJvdGhlclwiLFxuICAgICAgICAgICAgICBvdXRwdXQ6IHtcbiAgICAgICAgICAgICAgICBjb3VudDogeyAkc3VtOiAxIH0sXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIH0sXG4gICAgICAgIF0sXG4gICAgICAgIG1vdmllczogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgICRhZGRGaWVsZHM6IHtcbiAgICAgICAgICAgICAgdGl0bGU6IFwiJHRpdGxlXCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIH0sXG4gICAgICAgIF0sXG4gICAgICB9LFxuICAgIH1cblxuICAgIC8qKlxuICAgIFRpY2tldDogRmFjZXRlZCBTZWFyY2hcbiAgXG4gICAgUGxlYXNlIGFwcGVuZCB0aGUgc2tpcFN0YWdlLCBsaW1pdFN0YWdlLCBhbmQgZmFjZXRTdGFnZSB0byB0aGUgcXVlcnlQaXBlbGluZVxuICAgIChpbiB0aGF0IG9yZGVyKS4gWW91IGNhbiBhY2NvbXBsaXNoIHRoaXMgYnkgYWRkaW5nIHRoZSBzdGFnZXMgZGlyZWN0bHkgdG9cbiAgICB0aGUgcXVlcnlQaXBlbGluZS5cbiAgXG4gICAgVGhlIHF1ZXJ5UGlwZWxpbmUgaXMgYSBKYXZhc2NyaXB0IGFycmF5LCBzbyB5b3UgY2FuIHVzZSBwdXNoKCkgb3IgY29uY2F0KClcbiAgICB0byBjb21wbGV0ZSB0aGlzIHRhc2ssIGJ1dCB5b3UgbWlnaHQgaGF2ZSB0byBkbyBzb21ldGhpbmcgYWJvdXQgYGNvbnN0YC5cbiAgICAqL1xuXG4gICAgY29uc3QgcXVlcnlQaXBlbGluZSA9IFtcbiAgICAgIG1hdGNoU3RhZ2UsXG4gICAgICBzb3J0U3RhZ2UsXG4gICAgICBza2lwU3RhZ2UsXG4gICAgICBsaW1pdFN0YWdlLFxuICAgICAgZmFjZXRTdGFnZVxuICAgICAgLy8gVE9ETyBUaWNrZXQ6IEZhY2V0ZWQgU2VhcmNoXG4gICAgICAvLyBBZGQgdGhlIHN0YWdlcyB0byBxdWVyeVBpcGVsaW5lIGluIHRoZSBjb3JyZWN0IG9yZGVyLlxuICAgIF1cblxuICAgIHRyeSB7XG4gICAgICBjb25zdCByZXN1bHRzID0gYXdhaXQgKGF3YWl0IG1vdmllcy5hZ2dyZWdhdGUocXVlcnlQaXBlbGluZSkpLm5leHQoKVxuICAgICAgY29uc3QgY291bnQgPSBhd2FpdCAoYXdhaXQgbW92aWVzLmFnZ3JlZ2F0ZShjb3VudGluZ1BpcGVsaW5lKSkubmV4dCgpXG4gICAgICByZXR1cm4ge1xuICAgICAgICAuLi5yZXN1bHRzLFxuICAgICAgICAuLi5jb3VudCxcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICByZXR1cm4geyBlcnJvcjogXCJSZXN1bHRzIHRvbyBsYXJnZSwgYmUgbW9yZSByZXN0cmljdGl2ZSBpbiBmaWx0ZXJcIiB9XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEZpbmRzIGFuZCByZXR1cm5zIG1vdmllcyBieSBjb3VudHJ5LlxuICAgKiBSZXR1cm5zIGEgbGlzdCBvZiBvYmplY3RzLCBlYWNoIG9iamVjdCBjb250YWlucyBhIHRpdGxlIGFuZCBhbiBfaWQuXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBmaWx0ZXJzIC0gVGhlIHNlYXJjaCBwYXJhbWV0ZXJzIHRvIHVzZSBpbiB0aGUgcXVlcnkuXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBwYWdlIC0gVGhlIHBhZ2Ugb2YgbW92aWVzIHRvIHJldHJpZXZlLlxuICAgKiBAcGFyYW0ge251bWJlcn0gbW92aWVzUGVyUGFnZSAtIFRoZSBudW1iZXIgb2YgbW92aWVzIHRvIGRpc3BsYXkgcGVyIHBhZ2UuXG4gICAqIEByZXR1cm5zIHtHZXRNb3ZpZXNSZXN1bHR9IEFuIG9iamVjdCB3aXRoIG1vdmllIHJlc3VsdHMgYW5kIHRvdGFsIHJlc3VsdHNcbiAgICogdGhhdCB3b3VsZCBtYXRjaCB0aGlzIHF1ZXJ5XG4gICAqL1xuICBzdGF0aWMgYXN5bmMgZ2V0TW92aWVzKHtcbiAgICAvLyBoZXJlJ3Mgd2hlcmUgdGhlIGRlZmF1bHQgcGFyYW1ldGVycyBhcmUgc2V0IGZvciB0aGUgZ2V0TW92aWVzIG1ldGhvZFxuICAgIGZpbHRlcnMgPSBudWxsLFxuICAgIHBhZ2UgPSAwLFxuICAgIG1vdmllc1BlclBhZ2UgPSAyMCxcbiAgfSA9IHt9KSB7XG4gICAgbGV0IHF1ZXJ5UGFyYW1zID0ge31cbiAgICBpZiAoZmlsdGVycykge1xuICAgICAgaWYgKFwidGV4dFwiIGluIGZpbHRlcnMpIHtcbiAgICAgICAgcXVlcnlQYXJhbXMgPSB0aGlzLnRleHRTZWFyY2hRdWVyeShmaWx0ZXJzW1widGV4dFwiXSlcbiAgICAgIH0gZWxzZSBpZiAoXCJjYXN0XCIgaW4gZmlsdGVycykge1xuICAgICAgICBxdWVyeVBhcmFtcyA9IHRoaXMuY2FzdFNlYXJjaFF1ZXJ5KGZpbHRlcnNbXCJjYXN0XCJdKVxuICAgICAgfSBlbHNlIGlmIChcImdlbnJlXCIgaW4gZmlsdGVycykge1xuICAgICAgICBxdWVyeVBhcmFtcyA9IHRoaXMuZ2VucmVTZWFyY2hRdWVyeShmaWx0ZXJzW1wiZ2VucmVcIl0pXG4gICAgICB9XG4gICAgfVxuXG4gICAgbGV0IHsgcXVlcnkgPSB7fSwgcHJvamVjdCA9IHt9LCBzb3J0ID0gREVGQVVMVF9TT1JUIH0gPSBxdWVyeVBhcmFtc1xuICAgIGxldCBjdXJzb3JcbiAgICB0cnkge1xuICAgICAgY3Vyc29yID0gYXdhaXQgbW92aWVzXG4gICAgICAgIC5maW5kKHF1ZXJ5KVxuICAgICAgICAucHJvamVjdChwcm9qZWN0KVxuICAgICAgICAuc29ydChzb3J0KVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoYFVuYWJsZSB0byBpc3N1ZSBmaW5kIGNvbW1hbmQsICR7ZX1gKVxuICAgICAgcmV0dXJuIHsgbW92aWVzTGlzdDogW10sIHRvdGFsTnVtTW92aWVzOiAwIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICBUaWNrZXQ6IFBhZ2luZ1xuICBcbiAgICBCZWZvcmUgdGhpcyBtZXRob2QgcmV0dXJucyBiYWNrIHRvIHRoZSBBUEksIHVzZSB0aGUgXCJtb3ZpZXNQZXJQYWdlXCIgYW5kXG4gICAgXCJwYWdlXCIgYXJndW1lbnRzIHRvIGRlY2lkZSB0aGUgbW92aWVzIHRvIGRpc3BsYXkuXG4gIFxuICAgIFBhZ2luZyBjYW4gYmUgaW1wbGVtZW50ZWQgYnkgdXNpbmcgdGhlIHNraXAoKSBhbmQgbGltaXQoKSBjdXJzb3IgbWV0aG9kcy5cbiAgICAqL1xuXG4gICAgLy8gVE9ETyBUaWNrZXQ6IFBhZ2luZ1xuICAgIC8vIFVzZSB0aGUgY3Vyc29yIHRvIG9ubHkgcmV0dXJuIHRoZSBtb3ZpZXMgdGhhdCBiZWxvbmcgb24gdGhlIGN1cnJlbnQgcGFnZVxuICAgIGNvbnN0IGRpc3BsYXlDdXJzb3IgPSBjdXJzb3IubGltaXQobW92aWVzUGVyUGFnZSkuc2tpcChtb3ZpZXNQZXJQYWdlICogcGFnZSlcblxuICAgIHRyeSB7XG4gICAgICBjb25zdCBtb3ZpZXNMaXN0ID0gYXdhaXQgZGlzcGxheUN1cnNvci50b0FycmF5KClcbiAgICAgIGNvbnN0IHRvdGFsTnVtTW92aWVzID0gcGFnZSA9PT0gMCA/IGF3YWl0IG1vdmllcy5jb3VudERvY3VtZW50cyhxdWVyeSkgOiAwXG5cbiAgICAgIHJldHVybiB7IG1vdmllc0xpc3QsIHRvdGFsTnVtTW92aWVzIH1cbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFxuICAgICAgICBgVW5hYmxlIHRvIGNvbnZlcnQgY3Vyc29yIHRvIGFycmF5IG9yIHByb2JsZW0gY291bnRpbmcgZG9jdW1lbnRzLCAke2V9YCxcbiAgICAgIClcbiAgICAgIHJldHVybiB7IG1vdmllc0xpc3Q6IFtdLCB0b3RhbE51bU1vdmllczogMCB9XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEdldHMgYSBtb3ZpZSBieSBpdHMgaWRcbiAgICogQHBhcmFtIHtzdHJpbmd9IGlkIC0gVGhlIGRlc2lyZWQgbW92aWUgaWQsIHRoZSBfaWQgaW4gTW9uZ29cbiAgICogQHJldHVybnMge01mbGl4TW92aWUgfCBudWxsfSBSZXR1cm5zIGVpdGhlciBhIHNpbmdsZSBtb3ZpZSBvciBub3RoaW5nXG4gICAqL1xuICBzdGF0aWMgYXN5bmMgZ2V0TW92aWVCeUlEKGlkKSB7XG4gICAgdHJ5IHtcbiAgICAgIC8qKlxuICAgICAgVGlja2V0OiBHZXQgQ29tbWVudHNcbiAgXG4gICAgICBHaXZlbiBhIG1vdmllIElELCBidWlsZCBhbiBBZ2dyZWdhdGlvbiBQaXBlbGluZSB0byByZXRyaWV2ZSB0aGUgY29tbWVudHNcbiAgICAgIG1hdGNoaW5nIHRoYXQgbW92aWUncyBJRC5cbiAgXG4gICAgICBUaGUgJG1hdGNoIHN0YWdlIGlzIGFscmVhZHkgY29tcGxldGVkLiBZb3Ugd2lsbCBuZWVkIHRvIGFkZCBhICRsb29rdXBcbiAgICAgIHN0YWdlIHRoYXQgc2VhcmNoZXMgdGhlIGBjb21tZW50c2AgY29sbGVjdGlvbiBmb3IgdGhlIGNvcnJlY3QgY29tbWVudHMuXG4gICAgICAqL1xuXG4gICAgICAvLyBUT0RPIFRpY2tldDogR2V0IENvbW1lbnRzXG4gICAgICAvLyBJbXBsZW1lbnQgdGhlIHJlcXVpcmVkIHBpcGVsaW5lLlxuICAgICAgY29uc3QgcGlwZWxpbmUgPSBbXG4gICAgICAgIHtcbiAgICAgICAgICAkbWF0Y2g6IHtcbiAgICAgICAgICAgIF9pZDogT2JqZWN0SWQoaWQpXG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIFwiJGxvb2t1cFwiOiB7XG4gICAgICAgICAgICBcImZyb21cIjogXCJjb21tZW50c1wiLFxuICAgICAgICAgICAgXCJsZXRcIjogeyBcImlkXCI6IFwiJF9pZFwiIH0sXG4gICAgICAgICAgICBcInBpcGVsaW5lXCI6IFt7IFwiJG1hdGNoXCI6IHsgXCIkZXhwclwiOiB7IFwiJGVxXCI6IFtcIiRtb3ZpZV9pZFwiLCBcIiQkaWRcIl0gfSB9IH0sIHsgXCIkc29ydFwiOiB7IFwiZGF0ZVwiOiAtMSB9IH1dLFxuICAgICAgICAgICAgXCJhc1wiOiBcImNvbW1lbnRzXCJcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIF1cbiAgICAgIHJldHVybiBhd2FpdCBtb3ZpZXMuYWdncmVnYXRlKHBpcGVsaW5lKS5uZXh0KClcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAvKipcbiAgICAgIFRpY2tldDogRXJyb3IgSGFuZGxpbmdcbiAgICAgXG4gICAgICBIYW5kbGUgdGhlIGVycm9yIHRoYXQgb2NjdXJzIHdoZW4gYW4gaW52YWxpZCBJRCBpcyBwYXNzZWQgdG8gdGhpcyBtZXRob2QuXG4gICAgICBXaGVuIHRoaXMgc3BlY2lmaWMgZXJyb3IgaXMgdGhyb3duLCB0aGUgbWV0aG9kIHNob3VsZCByZXR1cm4gYG51bGxgLlxuICAgICAgKi9cblxuICAgICAgLy8gVE9ETyBUaWNrZXQ6IEVycm9yIEhhbmRsaW5nXG4gICAgICAvLyBDYXRjaCB0aGUgSW52YWxpZElkIGVycm9yIGJ5IHN0cmluZyBtYXRjaGluZywgYW5kIHRoZW4gaGFuZGxlIGl0LlxuICAgICAgY29uc29sZS5lcnJvcihgU29tZXRoaW5nIHdlbnQgd3JvbmcgaW4gZ2V0TW92aWVCeUlEOiAke2V9YClcbiAgICAgIHRocm93IGVcbiAgICB9XG4gIH1cbn1cblxuLyoqXG4gKiBUaGlzIGlzIGEgcGFyc2VkIHF1ZXJ5LCBzb3J0LCBhbmQgcHJvamVjdCBidW5kbGUuXG4gKiBAdHlwZWRlZiBRdWVyeVBhcmFtc1xuICogQHByb3BlcnR5IHtPYmplY3R9IHF1ZXJ5IC0gVGhlIHNwZWNpZmllZCBxdWVyeSwgdHJhbnNmb3JtZWQgYWNjb3JkaW5nbHlcbiAqIEBwcm9wZXJ0eSB7YW55W119IHNvcnQgLSBUaGUgc3BlY2lmaWVkIHNvcnRcbiAqIEBwcm9wZXJ0eSB7T2JqZWN0fSBwcm9qZWN0IC0gVGhlIHNwZWNpZmllZCBwcm9qZWN0LCBpZiBhbnlcbiAqL1xuXG4vKipcbiAqIFJlcHJlc2VudHMgYSBzaW5nbGUgY291bnRyeSByZXN1bHRcbiAqIEB0eXBlZGVmIENvdW50cnlSZXN1bHRcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBPYmplY3RJRCAtIFRoZSBPYmplY3RJRCBvZiB0aGUgbW92aWVcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSB0aXRsZSAtIFRoZSB0aXRsZSBvZiB0aGUgbW92aWVcbiAqL1xuXG4vKipcbiAqIEEgTW92aWUgZnJvbSBtZmxpeFxuICogQHR5cGVkZWYgTWZsaXhNb3ZpZVxuICogQHByb3BlcnR5IHtzdHJpbmd9IF9pZFxuICogQHByb3BlcnR5IHtzdHJpbmd9IHRpdGxlXG4gKiBAcHJvcGVydHkge251bWJlcn0geWVhclxuICogQHByb3BlcnR5IHtudW1iZXJ9IHJ1bnRpbWVcbiAqIEBwcm9wZXJ0eSB7RGF0ZX0gcmVsZWFzZWRcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nW119IGNhc3RcbiAqIEBwcm9wZXJ0eSB7bnVtYmVyfSBtZXRhY3JpdGljZFxuICogQHByb3BlcnR5IHtzdHJpbmd9IHBvc3RlclxuICogQHByb3BlcnR5IHtzdHJpbmd9IHBsb3RcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBmdWxscGxvdFxuICogQHByb3BlcnR5IHtzdHJpbmd8RGF0ZX0gbGFzdHVwZGF0ZWRcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSB0eXBlXG4gKiBAcHJvcGVydHkge3N0cmluZ1tdfSBsYW5ndWFnZXNcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nW119IGRpcmVjdG9yc1xuICogQHByb3BlcnR5IHtzdHJpbmdbXX0gd3JpdGVyc1xuICogQHByb3BlcnR5IHtJTURCfSBpbWRiXG4gKiBAcHJvcGVydHkge3N0cmluZ1tdfSBjb3VudHJpZXNcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nW119IHJhdGVkXG4gKiBAcHJvcGVydHkge3N0cmluZ1tdfSBnZW5yZXNcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nW119IGNvbW1lbnRzXG4gKi9cblxuLyoqXG4gKiBJTURCIHN1YmRvY3VtZW50XG4gKiBAdHlwZWRlZiBJTURCXG4gKiBAcHJvcGVydHkge251bWJlcn0gcmF0aW5nXG4gKiBAcHJvcGVydHkge251bWJlcn0gdm90ZXNcbiAqIEBwcm9wZXJ0eSB7bnVtYmVyfSBpZFxuICovXG5cbi8qKlxuICogUmVzdWx0IHNldCBmb3IgZ2V0TW92aWVzIG1ldGhvZFxuICogQHR5cGVkZWYgR2V0TW92aWVzUmVzdWx0XG4gKiBAcHJvcGVydHkge01mbGl4TW92aWVzW119IG1vdmllc0xpc3RcbiAqIEBwcm9wZXJ0eSB7bnVtYmVyfSB0b3RhbE51bVJlc3VsdHNcbiAqL1xuXG4vKipcbiAqIEZhY2V0ZWQgU2VhcmNoIFJldHVyblxuICpcbiAqIFRoZSB0eXBlIG9mIHJldHVybiBmcm9tIGZhY2V0ZWQgc2VhcmNoLiBJdCB3aWxsIGJlIGEgc2luZ2xlIGRvY3VtZW50IHdpdGhcbiAqIDMgZmllbGRzOiByYXRpbmcsIHJ1bnRpbWUsIGFuZCBtb3ZpZXMuXG4gKiBAdHlwZWRlZiBGYWNldGVkU2VhcmNoUmV0dXJuXG4gKiBAcHJvcGVydHkge29iamVjdH0gcmF0aW5nXG4gKiBAcHJvcGVydHkge29iamVjdH0gcnVudGltZVxuICogQHByb3BlcnR5IHtNRmxpeE1vdmllW119bW92aWVzXG4gKi9cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7Ozs7QUFFQSxJQUFJQSxNQUFKO0FBQ0EsSUFBSUMsS0FBSjtBQUNBLElBQU1DLFlBQVksR0FBRyxDQUFDLENBQUMsNEJBQUQsRUFBK0IsQ0FBQyxDQUFoQyxDQUFELENBQXJCOztJQUVxQkMsUzs7Ozs7Ozs7cUhBQ0dDLEk7Ozs7O3FCQUNoQkosTTs7Ozs7Ozs7Ozt1QkFJWUksSUFBSSxDQUFDQyxFQUFMLENBQVFDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxRQUFw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",
    "map": {
      "version": 3,
      "names": [
        "movies",
        "mflix",
        "DEFAULT_SORT",
        "MoviesDAO",
        "conn",
        "db",
        "process",
        "env",
        "MFLIX_NS",
        "collection",
        "console",
        "error",
        "command",
        "connectionStatus",
        "roleInfo",
        "authInfo",
        "authenticatedUserRoles",
        "s",
        "serverConfig",
        "options",
        "poolSize",
        "wtimeout",
        "response",
        "countries",
        "find",
        "$in",
        "project",
        "title",
        "cursor",
        "toArray",
        "text",
        "query",
        "$text",
        "$search",
        "meta_score",
        "$meta",
        "sort",
        "score",
        "cast",
        "searchCast",
        "Array",
        "isArray",
        "split",
        "genre",
        "searchGenre",
        "filters",
        "page",
        "moviesPerPage",
        "Error",
        "matchStage",
        "$match",
        "sortStage",
        "$sort",
        "countingPipeline",
        "$count",
        "skipStage",
        "$skip",
        "limitStage",
        "$limit",
        "facetStage",
        "$facet",
        "runtime",
        "$bucket",
        "groupBy",
        "boundaries",
        "output",
        "count",
        "$sum",
        "rating",
        "$addFields",
        "queryPipeline",
        "aggregate",
        "next",
        "results",
        "queryParams",
        "textSearchQuery",
        "castSearchQuery",
        "genreSearchQuery",
        "moviesList",
        "totalNumMovies",
        "displayCursor",
        "limit",
        "skip",
        "countDocuments",
        "id",
        "pipeline",
        "_id",
        "ObjectId"
      ],
      "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao",
      "sources": [
        "moviesDAO.js"
      ],
      "sourcesContent": [
        "import { ObjectId } from \"bson\"\n\nlet movies\nlet mflix\nconst DEFAULT_SORT = [[\"tomatoes.viewer.numReviews\", -1]]\n\nexport default class MoviesDAO {\n  static async injectDB(conn) {\n    if (movies) {\n      return\n    }\n    try {\n      mflix = await conn.db(process.env.MFLIX_NS)\n      movies = await conn.db(process.env.MFLIX_NS).collection(\"movies\")\n      this.movies = movies // this is only for testing\n    } catch (e) {\n      console.error(\n        `Unable to establish a collection handle in moviesDAO: ${e}`,\n      )\n    }\n  }\n\n  /**\n   * Retrieves the connection pool size, write concern and user roles on the\n   * current client.\n   * @returns {Promise<ConfigurationResult>} An object with configuration details.\n   */\n  static async getConfiguration() {\n    const roleInfo = await mflix.command({ connectionStatus: 1 })\n    const authInfo = roleInfo.authInfo.authenticatedUserRoles[0]\n    const { poolSize, wtimeout } = movies.s.db.serverConfig.s.options\n    let response = {\n      poolSize,\n      wtimeout,\n      authInfo,\n    }\n    return response\n  }\n\n  /**\n   * Finds and returns movies originating from one or more countries.\n   * Returns a list of objects, each object contains a title and an _id.\n   * @param {string[]} countries - The list of countries.\n   * @returns {Promise<CountryResult>} A promise that will resolve to a list of CountryResults.\n   */\n  static async getMoviesByCountry(countries) {\n    /**\n    Ticket: Projection\n\n    Write a query that matches movies with the countries in the \"countries\"\n    list, but only returns the title and _id of each movie.\n\n    Remember that in MongoDB, the $in operator can be used with a list to\n    match one or more values of a specific field.\n    */\n\n    let cursor\n    try {\n      // TODO Ticket: Projection\n      // Find movies matching the \"countries\" list, but only return the title\n      // and _id. Do not put a limit in your own implementation, the limit\n      // here is only included to avoid sending 46000 documents down the\n      // wire.\n      cursor = await movies.find({ countries: { $in: countries } }).project({ title: 1 })\n    } catch (e) {\n      console.error(`Unable to issue find command, ${e}`)\n      return []\n    }\n\n    return cursor.toArray()\n  }\n\n  /**\n   * Finds and returns movies matching a given text in their title or description.\n   * @param {string} text - The text to match with.\n   * @returns {QueryParams} The QueryParams for text search\n   */\n  static textSearchQuery(text) {\n    const query = { $text: { $search: text } }\n    const meta_score = { $meta: \"textScore\" }\n    const sort = [[\"score\", meta_score]]\n    const project = { score: meta_score }\n\n    return { query, project, sort }\n  }\n\n  /**\n   * Finds and returns movies including one or more cast members.\n   * @param {string[]} cast - The cast members to match with.\n   * @returns {QueryParams} The QueryParams for cast search\n   */\n  static castSearchQuery(cast) {\n    const searchCast = Array.isArray(cast) ? cast : cast.split(\", \")\n\n    const query = { cast: { $in: searchCast } }\n    const project = {}\n    const sort = DEFAULT_SORT\n\n    return { query, project, sort }\n  }\n\n  /**\n   * Finds and returns movies matching a one or more genres.\n   * @param {string[]} genre - The genres to match with.\n   * @returns {QueryParams} The QueryParams for genre search\n   */\n  static genreSearchQuery(genre) {\n    /**\n    Ticket: Text and Subfield Search\n  \n    Given an array of one or more genres, construct a query that searches\n    MongoDB for movies with that genre.\n    */\n\n    const searchGenre = Array.isArray(genre) ? genre : genre.split(\", \")\n\n    // TODO Ticket: Text and Subfield Search\n    // Construct a query that will search for the chosen genre.\n    const query = { 'genres': { $in: searchGenre } }\n    const project = {}\n    const sort = DEFAULT_SORT\n\n    return { query, project, sort }\n  }\n\n  /**\n   *\n   * @param {Object} filters - The search parameter to use in the query. Comes\n   * in the form of `{cast: { $in: [...castMembers]}}`\n   * @param {number} page - The page of movies to retrieve.\n   * @param {number} moviesPerPage - The number of movies to display per page.\n   * @returns {FacetedSearchReturn} FacetedSearchReturn\n   */\n  static async facetedSearch({\n    filters = null,\n    page = 0,\n    moviesPerPage = 20,\n  } = {}) {\n    if (!filters || !filters.cast) {\n      throw new Error(\"Must specify cast members to filter by.\")\n    }\n    const matchStage = { $match: filters }\n    const sortStage = { $sort: { \"tomatoes.viewer.numReviews\": -1 } }\n    const countingPipeline = [matchStage, sortStage, { $count: \"count\" }]\n    const skipStage = { $skip: moviesPerPage * page }\n    const limitStage = { $limit: moviesPerPage }\n    const facetStage = {\n      $facet: {\n        runtime: [\n          {\n            $bucket: {\n              groupBy: \"$runtime\",\n              boundaries: [0, 60, 90, 120, 180],\n              default: \"other\",\n              output: {\n                count: { $sum: 1 },\n              },\n            },\n          },\n        ],\n        rating: [\n          {\n            $bucket: {\n              groupBy: \"$metacritic\",\n              boundaries: [0, 50, 70, 90, 100],\n              default: \"other\",\n              output: {\n                count: { $sum: 1 },\n              },\n            },\n          },\n        ],\n        movies: [\n          {\n            $addFields: {\n              title: \"$title\",\n            },\n          },\n        ],\n      },\n    }\n\n    /**\n    Ticket: Faceted Search\n  \n    Please append the skipStage, limitStage, and facetStage to the queryPipeline\n    (in that order). You can accomplish this by adding the stages directly to\n    the queryPipeline.\n  \n    The queryPipeline is a Javascript array, so you can use push() or concat()\n    to complete this task, but you might have to do something about `const`.\n    */\n\n    const queryPipeline = [\n      matchStage,\n      sortStage,\n      skipStage,\n      limitStage,\n      facetStage\n      // TODO Ticket: Faceted Search\n      // Add the stages to queryPipeline in the correct order.\n    ]\n\n    try {\n      const results = await (await movies.aggregate(queryPipeline)).next()\n      const count = await (await movies.aggregate(countingPipeline)).next()\n      return {\n        ...results,\n        ...count,\n      }\n    } catch (e) {\n      return { error: \"Results too large, be more restrictive in filter\" }\n    }\n  }\n\n  /**\n   * Finds and returns movies by country.\n   * Returns a list of objects, each object contains a title and an _id.\n   * @param {Object} filters - The search parameters to use in the query.\n   * @param {number} page - The page of movies to retrieve.\n   * @param {number} moviesPerPage - The number of movies to display per page.\n   * @returns {GetMoviesResult} An object with movie results and total results\n   * that would match this query\n   */\n  static async getMovies({\n    // here's where the default parameters are set for the getMovies method\n    filters = null,\n    page = 0,\n    moviesPerPage = 20,\n  } = {}) {\n    let queryParams = {}\n    if (filters) {\n      if (\"text\" in filters) {\n        queryParams = this.textSearchQuery(filters[\"text\"])\n      } else if (\"cast\" in filters) {\n        queryParams = this.castSearchQuery(filters[\"cast\"])\n      } else if (\"genre\" in filters) {\n        queryParams = this.genreSearchQuery(filters[\"genre\"])\n      }\n    }\n\n    let { query = {}, project = {}, sort = DEFAULT_SORT } = queryParams\n    let cursor\n    try {\n      cursor = await movies\n        .find(query)\n        .project(project)\n        .sort(sort)\n    } catch (e) {\n      console.error(`Unable to issue find command, ${e}`)\n      return { moviesList: [], totalNumMovies: 0 }\n    }\n\n    /**\n    Ticket: Paging\n  \n    Before this method returns back to the API, use the \"moviesPerPage\" and\n    \"page\" arguments to decide the movies to display.\n  \n    Paging can be implemented by using the skip() and limit() cursor methods.\n    */\n\n    // TODO Ticket: Paging\n    // Use the cursor to only return the movies that belong on the current page\n    const displayCursor = cursor.limit(moviesPerPage).skip(moviesPerPage * page)\n\n    try {\n      const moviesList = await displayCursor.toArray()\n      const totalNumMovies = page === 0 ? await movies.countDocuments(query) : 0\n\n      return { moviesList, totalNumMovies }\n    } catch (e) {\n      console.error(\n        `Unable to convert cursor to array or problem counting documents, ${e}`,\n      )\n      return { moviesList: [], totalNumMovies: 0 }\n    }\n  }\n\n  /**\n   * Gets a movie by its id\n   * @param {string} id - The desired movie id, the _id in Mongo\n   * @returns {MflixMovie | null} Returns either a single movie or nothing\n   */\n  static async getMovieByID(id) {\n    try {\n      /**\n      Ticket: Get Comments\n  \n      Given a movie ID, build an Aggregation Pipeline to retrieve the comments\n      matching that movie's ID.\n  \n      The $match stage is already completed. You will need to add a $lookup\n      stage that searches the `comments` collection for the correct comments.\n      */\n\n      // TODO Ticket: Get Comments\n      // Implement the required pipeline.\n      const pipeline = [\n        {\n          $match: {\n            _id: ObjectId(id)\n          },\n        },\n        {\n          \"$lookup\": {\n            \"from\": \"comments\",\n            \"let\": { \"id\": \"$_id\" },\n            \"pipeline\": [{ \"$match\": { \"$expr\": { \"$eq\": [\"$movie_id\", \"$$id\"] } } }, { \"$sort\": { \"date\": -1 } }],\n            \"as\": \"comments\"\n          }\n        }\n      ]\n      return await movies.aggregate(pipeline).next()\n    } catch (e) {\n      /**\n      Ticket: Error Handling\n     \n      Handle the error that occurs when an invalid ID is passed to this method.\n      When this specific error is thrown, the method should return `null`.\n      */\n\n      // TODO Ticket: Error Handling\n      // Catch the InvalidId error by string matching, and then handle it.\n      console.error(`Something went wrong in getMovieByID: ${e}`)\n      throw e\n    }\n  }\n}\n\n/**\n * This is a parsed query, sort, and project bundle.\n * @typedef QueryParams\n * @property {Object} query - The specified query, transformed accordingly\n * @property {any[]} sort - The specified sort\n * @property {Object} project - The specified project, if any\n */\n\n/**\n * Represents a single country result\n * @typedef CountryResult\n * @property {string} ObjectID - The ObjectID of the movie\n * @property {string} title - The title of the movie\n */\n\n/**\n * A Movie from mflix\n * @typedef MflixMovie\n * @property {string} _id\n * @property {string} title\n * @property {number} year\n * @property {number} runtime\n * @property {Date} released\n * @property {string[]} cast\n * @property {number} metacriticd\n * @property {string} poster\n * @property {string} plot\n * @property {string} fullplot\n * @property {string|Date} lastupdated\n * @property {string} type\n * @property {string[]} languages\n * @property {string[]} directors\n * @property {string[]} writers\n * @property {IMDB} imdb\n * @property {string[]} countries\n * @property {string[]} rated\n * @property {string[]} genres\n * @property {string[]} comments\n */\n\n/**\n * IMDB subdocument\n * @typedef IMDB\n * @property {number} rating\n * @property {number} votes\n * @property {number} id\n */\n\n/**\n * Result set for getMovies method\n * @typedef GetMoviesResult\n * @property {MflixMovies[]} moviesList\n * @property {number} totalNumResults\n */\n\n/**\n * Faceted Search Return\n *\n * The type of return from faceted search. It will be a single document with\n * 3 fields: rating, runtime, and movies.\n * @typedef FacetedSearchReturn\n * @property {object} rating\n * @property {object} runtime\n * @property {MFlixMovie[]}movies\n */\n"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAEA,IAAIA,MAAJ;AACA,IAAIC,KAAJ;AACA,IAAMC,YAAY,GAAG,CAAC,CAAC,4BAAD,EAA+B,CAAC,CAAhC,CAAD,CAArB;;IAEqBC,S;;;;;;;;qHACGC,I;;;;;qBAChBJ,M;;;;;;;;;;uBAIYI,IAAI,CAACC,EAAL,CAAQC,OAAO,CAACC,GAAR,CAAYC,QAApB,C;;;gBAAdP,K;;uBACeG,IAAI,CAACC,EAAL,CAAQC,OAAO,CAACC,GAAR,CAAYC,QAApB,EAA8BC,UAA9B,CAAyC,QAAzC,C;;;gBAAfT,M;gBACA,KAAKA,MAAL,GAAcA,MAAd,C,CAAqB;;;;;;;;gBAErBU,OAAO,CAACC,KAAR;;;;;;;;;;;;;;;;IAMJ;AACF;AACA;AACA;AACA;;;;;;;;;;;;;uBAE2BV,KAAK,CAACW,OAAN,CAAc;kBAAEC,gBAAgB,EAAE;gBAApB,CAAd,C;;;gBAAjBC,Q;gBACAC,Q,GAAWD,QAAQ,CAACC,QAAT,CAAkBC,sBAAlB,CAAyC,CAAzC,C;wCACchB,MAAM,CAACiB,CAAP,CAASZ,EAAT,CAAYa,YAAZ,CAAyBD,CAAzB,CAA2BE,O,EAAlDC,Q,yBAAAA,Q,EAAUC,Q,yBAAAA,Q;gBACdC,Q,GAAW;kBACbF,QAAQ,EAARA,QADa;kBAEbC,QAAQ,EAARA,QAFa;kBAGbN,QAAQ,EAARA;gBAHa,C;kDAKRO,Q;;;;;;;;;;;;;;;;IAGT;AACF;AACA;AACA;AACA;AACA;;;;;gIACkCC,S;;;;;;;;uBAkBbvB,MAAM,CAACwB,IAAP,CAAY;kBAAED,SAAS,EAAE;oBAAEE,GAAG,EAAEF;kBAAP;gBAAb,CAAZ,EAA+CG,OAA/C,CAAuD;kBAAEC,KAAK,EAAE;gBAAT,CAAvD,C;;;gBAAfC,M;;;;;;;gBAEAlB,OAAO,CAACC,KAAR;kDACO,E;;;kDAGFiB,MAAM,CAACC,OAAP,E;;;;;;;;;;;;;;;;IAGT;AACF;AACA;AACA;AACA;;;;oCACyBC,I,EAAM;MAC3B,IAAMC,KAAK,GAAG;QAAEC,KAAK,EAAE;UAAEC,OAAO,EAAEH;QAAX;MAAT,CAAd;MACA,IAAMI,UAAU,GAAG;QAAEC,KAAK,EAAE;MAAT,CAAnB;MACA,IAAMC,IAAI,GAAG,CAAC,CAAC,OAAD,EAAUF,UAAV,CAAD,CAAb;MACA,IAAMR,OAAO,GAAG;QAAEW,KAAK,EAAEH;MAAT,CAAhB;MAEA,OAAO;QAAEH,KAAK,EAALA,KAAF;QAASL,OAAO,EAAPA,OAAT;QAAkBU,IAAI,EAAJA;MAAlB,CAAP;IACD;IAED;AACF;AACA;AACA;AACA;;;;oCACyBE,I,EAAM;MAC3B,IAAMC,UAAU,GAAGC,KAAK,CAACC,OAAN,CAAcH,IAAd,IAAsBA,IAAtB,GAA6BA,IAAI,CAACI,KAAL,CAAW,IAAX,CAAhD;MAEA,IAAMX,KAAK,GAAG;QAAEO,IAAI,EAAE;UAAEb,GAAG,EAAEc;QAAP;MAAR,CAAd;MACA,IAAMb,OAAO,GAAG,EAAhB;MACA,IAAMU,IAAI,GAAGlC,YAAb;MAEA,OAAO;QAAE6B,KAAK,EAALA,KAAF;QAASL,OAAO,EAAPA,OAAT;QAAkBU,IAAI,EAAJA;MAAlB,CAAP;IACD;IAED;AACF;AACA;AACA;AACA;;;;qCAC0BO,K,EAAO;MAC7B;AACJ;AACA;AACA;AACA;MAGI,IAAMC,WAAW,GAAGJ,KAAK,CAACC,OAAN,CAAcE,KAAd,IAAuBA,KAAvB,GAA+BA,KAAK,CAACD,KAAN,CAAY,IAAZ,CAAnD,CAR6B,CAU7B;MACA;;MACA,IAAMX,KAAK,GAAG;QAAE,UAAU;UAAEN,GAAG,EAAEmB;QAAP;MAAZ,CAAd;MACA,IAAMlB,OAAO,GAAG,EAAhB;MACA,IAAMU,IAAI,GAAGlC,YAAb;MAEA,OAAO;QAAE6B,KAAK,EAALA,KAAF;QAASL,OAAO,EAAPA,OAAT;QAAkBU,IAAI,EAAJA;MAAlB,CAAP;IACD;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;kFAKM,E,sBAHFS,O,EAAAA,O,6BAAU,I,kCACVC,I,EAAAA,I,0BAAO,C,wCACPC,a,EAAAA,a,mCAAgB,E;;sBAEZ,CAACF,OAAD,IAAY,CAACA,OAAO,CAACP,I;;;;;sBACjB,IAAIU,KAAJ,CAAU,yCAAV,C;;;gBAEFC,U,GAAa;kBAAEC,MAAM,EAAEL;gBAAV,C;gBACbM,S,GAAY;kBAAEC,KAAK,EAAE;oBAAE,8BAA8B,CAAC;kBAAjC;gBAAT,C;gBACZC,gB,GAAmB,CAACJ,UAAD,EAAaE,SAAb,EAAwB;kBAAEG,MAAM,EAAE;gBAAV,CAAxB,C;gBACnBC,S,GAAY;kBAAEC,KAAK,EAAET,aAAa,GAAGD;gBAAzB,C;gBACZW,U,GAAa;kBAAEC,MAAM,EAAEX;gBAAV,C;gBACbY,U,GAAa;kBACjBC,MAAM,EAAE;oBACNC,OAAO,EAAE,CACP;sBACEC,OAAO,EAAE;wBACPC,OAAO,EAAE,UADF;wBAEPC,UAAU,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,GAAZ,EAAiB,GAAjB,CAFL;wBAGP,WAAS,OAHF;wBAIPC,MAAM,EAAE;0BACNC,KAAK,EAAE;4BAAEC,IAAI,EAAE;0BAAR;wBADD;sBAJD;oBADX,CADO,CADH;oBAaNC,MAAM,EAAE,CACN;sBACEN,OAAO,EAAE;wBACPC,OAAO,EAAE,aADF;wBAEPC,UAAU,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,GAAhB,CAFL;wBAGP,WAAS,OAHF;wBAIPC,MAAM,EAAE;0BACNC,KAAK,EAAE;4BAAEC,IAAI,EAAE;0BAAR;wBADD;sBAJD;oBADX,CADM,CAbF;oBAyBNnE,MAAM,EAAE,CACN;sBACEqE,UAAU,EAAE;wBACV1C,KAAK,EAAE;sBADG;oBADd,CADM;kBAzBF;gBADS,C;gBAoCnB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;gBAIU2C,a,GAAgB,CACpBrB,UADoB,EAEpBE,SAFoB,EAGpBI,SAHoB,EAIpBE,UAJoB,EAKpBE,UALoB,CAMpB;gBACA;gBAPoB,C;;;uBAWS3D,MAAM,CAACuE,SAAP,CAAiBD,aAAjB,C;;;;sCAAiCE,I;;;gBAAxDC,O;;uBACqBzE,MAAM,CAACuE,SAAP,CAAiBlB,gBAAjB,C;;;;sCAAoCmB,I;;;gBAAzDN,K;oEAEDO,O,MACAP,K;;;;;kDAGE;kBAAEvD,KAAK,EAAE;gBAAT,C;;;;;;;;;;;;;;;;IAIX;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mFAMM,E,wBAHFkC,O,EAAAA,O,8BAAU,I,qCACVC,I,EAAAA,I,2BAAO,C,2CACPC,a,EAAAA,a,oCAAgB,E;gBAEZ2B,W,GAAc,E;;gBAClB,IAAI7B,OAAJ,EAAa;kBACX,IAAI,UAAUA,OAAd,EAAuB;oBACrB6B,WAAW,GAAG,KAAKC,eAAL,CAAqB9B,OAAO,CAAC,MAAD,CAA5B,CAAd;kBACD,CAFD,MAEO,IAAI,UAAUA,OAAd,EAAuB;oBAC5B6B,WAAW,GAAG,KAAKE,eAAL,CAAqB/B,OAAO,CAAC,MAAD,CAA5B,CAAd;kBACD,CAFM,MAEA,IAAI,WAAWA,OAAf,EAAwB;oBAC7B6B,WAAW,GAAG,KAAKG,gBAAL,CAAsBhC,OAAO,CAAC,OAAD,CAA7B,CAAd;kBACD;gBACF;;+BAEuD6B,W,oCAAlD3C,K,EAAAA,K,mCAAQ,E,2DAAIL,O,EAAAA,O,qCAAU,E,0DAAIU,I,EAAAA,I,kCAAOlC,Y;;;uBAGtBF,MAAM,CAClBwB,IADY,CACPO,KADO,EAEZL,OAFY,CAEJA,OAFI,EAGZU,IAHY,CAGPA,IAHO,C;;;gBAAfR,M;;;;;;;gBAKAlB,OAAO,CAACC,KAAR;kDACO;kBAAEmE,UAAU,EAAE,EAAd;kBAAkBC,cAAc,EAAE;gBAAlC,C;;;gBAGT;AACJ;AACA;AACA;AACA;AACA;gBAII;gBACA;gBACMC,a,GAAgBpD,MAAM,CAACqD,KAAP,CAAalC,aAAb,EAA4BmC,IAA5B,CAAiCnC,aAAa,GAAGD,IAAjD,C;;;uBAGKkC,aAAa,CAACnD,OAAd,E;;;gBAAnBiD,U;;sBACiBhC,IAAI,KAAK,C;;;;;;uBAAU9C,MAAM,CAACmF,cAAP,CAAsBpD,KAAtB,C;;;;;;;;+BAA+B,C;;;gBAAnEgD,c;kDAEC;kBAAED,UAAU,EAAVA,UAAF;kBAAcC,cAAc,EAAdA;gBAAd,C;;;;;gBAEPrE,OAAO,CAACC,KAAR;kDAGO;kBAAEmE,UAAU,EAAE,EAAd;kBAAkBC,cAAc,EAAE;gBAAlC,C;;;;;;;;;;;;;;;;IAIX;AACF;AACA;AACA;AACA;;;;;0HAC4BK,E;;;;;;;;gBAEtB;AACN;AACA;AACA;AACA;AACA;AACA;gBAIM;gBACA;gBACMC,Q,GAAW,CACf;kBACEnC,MAAM,EAAE;oBACNoC,GAAG,EAAE,IAAAC,cAAA,EAASH,EAAT;kBADC;gBADV,CADe,EAMf;kBACE,WAAW;oBACT,QAAQ,UADC;oBAET,OAAO;sBAAE,MAAM;oBAAR,CAFE;oBAGT,YAAY,CAAC;sBAAE,UAAU;wBAAE,SAAS;0BAAE,OAAO,CAAC,WAAD,EAAc,MAAd;wBAAT;sBAAX;oBAAZ,CAAD,EAA8D;sBAAE,SAAS;wBAAE,QAAQ,CAAC;sBAAX;oBAAX,CAA9D,CAHH;oBAIT,MAAM;kBAJG;gBADb,CANe,C;;uBAeJpF,MAAM,CAACuE,SAAP,CAAiBc,QAAjB,EAA2Bb,IAA3B,E;;;;;;;;;gBAEb;AACN;AACA;AACA;AACA;gBAGM;gBACA;gBACA9D,OAAO,CAACC,KAAR;;;;;;;;;;;;;;;;;;;;AAMN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"
    },
    "sourceType": "script",
    "externalDependencies": {},
    "mtime": 1659972365009
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js\",\"filename\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api/comments.controller.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"syntax-dynamic-import\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-decorators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"legacy\":true},\"externalDependencies\":[]},{\"key\":\"proposal-function-sent\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"MetaProperty\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-throw-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"UnaryExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-export-default-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-pipeline-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"proposal\":\"minimal\"},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-do-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DoExpression\":{\"exit\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.18.10": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js",
      "filename": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api/comments.controller.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-decorators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "legacy": true
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-function-sent",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "MetaProperty": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-throw-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "UnaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-export-default-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-pipeline-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "proposal": "minimal"
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-do-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DoExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api/comments.controller.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "decorators-legacy",
          "functionSent",
          "exportNamespaceFrom",
          "numericSeparator",
          "throwExpressions",
          "exportDefaultFrom",
          "logicalAssignment",
          "optionalChaining",
          [
            "pipelineOperator",
            {
              "proposal": "minimal"
            }
          ],
          "nullishCoalescingOperator",
          "doExpressions",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api/comments.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api",
        "sourceFileName": "comments.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _usersDAO = _interopRequireDefault(require(\"../dao/usersDAO\"));\n\nvar _commentsDAO = _interopRequireDefault(require(\"../dao/commentsDAO\"));\n\nvar _moviesDAO = _interopRequireDefault(require(\"../dao/moviesDAO\"));\n\nvar _users = require(\"./users.controller\");\n\nvar _bson = require(\"bson\");\n\nvar CommentsController = /*#__PURE__*/function () {\n  function CommentsController() {\n    (0, _classCallCheck2[\"default\"])(this, CommentsController);\n  }\n\n  (0, _createClass2[\"default\"])(CommentsController, null, [{\n    key: \"apiPostComment\",\n    value: function () {\n      var _apiPostComment = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(req, res, next) {\n        var userJwt, user, error, movieId, comment, date, commentResponse, updatedComments;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                userJwt = req.get(\"Authorization\").slice(\"Bearer \".length);\n                _context.next = 4;\n                return _users.User.decoded(userJwt);\n\n              case 4:\n                user = _context.sent;\n                error = user.error;\n\n                if (!error) {\n                  _context.next = 9;\n                  break;\n                }\n\n                res.status(401).json({\n                  error: error\n                });\n                return _context.abrupt(\"return\");\n\n              case 9:\n                movieId = req.body.movie_id;\n                comment = req.body.comment;\n                date = new Date();\n                _context.next = 14;\n                return _commentsDAO[\"default\"].addComment((0, _bson.ObjectId)(movieId), user, comment, date);\n\n              case 14:\n                commentResponse = _context.sent;\n                _context.next = 17;\n                return _moviesDAO[\"default\"].getMovieByID(movieId);\n\n              case 17:\n                updatedComments = _context.sent;\n                res.json({\n                  status: \"success\",\n                  comments: updatedComments.comments\n                });\n                _context.next = 24;\n                break;\n\n              case 21:\n                _context.prev = 21;\n                _context.t0 = _context[\"catch\"](0);\n                res.status(500).json({\n                  e: _context.t0\n                });\n\n              case 24:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 21]]);\n      }));\n\n      function apiPostComment(_x, _x2, _x3) {\n        return _apiPostComment.apply(this, arguments);\n      }\n\n      return apiPostComment;\n    }()\n  }, {\n    key: \"apiUpdateComment\",\n    value: function () {\n      var _apiUpdateComment = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(req, res, next) {\n        var userJwt, user, error, commentId, text, date, commentResponse, movieId, updatedComments;\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                userJwt = req.get(\"Authorization\").slice(\"Bearer \".length);\n                _context2.next = 4;\n                return _users.User.decoded(userJwt);\n\n              case 4:\n                user = _context2.sent;\n                error = user.error;\n\n                if (!error) {\n                  _context2.next = 9;\n                  break;\n                }\n\n                res.status(401).json({\n                  error: error\n                });\n                return _context2.abrupt(\"return\");\n\n              case 9:\n                commentId = req.body.comment_id;\n                text = req.body.updated_comment;\n                date = new Date();\n                _context2.next = 14;\n                return _commentsDAO[\"default\"].updateComment((0, _bson.ObjectId)(commentId), user.email, text, date);\n\n              case 14:\n                commentResponse = _context2.sent;\n                error = commentResponse.error;\n\n                if (error) {\n                  res.status(400).json({\n                    error: error\n                  });\n                }\n\n                if (!(commentResponse.modifiedCount === 0)) {\n                  _context2.next = 19;\n                  break;\n                }\n\n                throw new Error(\"unable to update comment - user may not be original poster\");\n\n              case 19:\n                movieId = req.body.movie_id;\n                _context2.next = 22;\n                return _moviesDAO[\"default\"].getMovieByID(movieId);\n\n              case 22:\n                updatedComments = _context2.sent;\n                res.json({\n                  comments: updatedComments.comments\n                });\n                _context2.next = 29;\n                break;\n\n              case 26:\n                _context2.prev = 26;\n                _context2.t0 = _context2[\"catch\"](0);\n                res.status(500).json({\n                  e: _context2.t0\n                });\n\n              case 29:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 26]]);\n      }));\n\n      function apiUpdateComment(_x4, _x5, _x6) {\n        return _apiUpdateComment.apply(this, arguments);\n      }\n\n      return apiUpdateComment;\n    }()\n  }, {\n    key: \"apiDeleteComment\",\n    value: function () {\n      var _apiDeleteComment = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(req, res, next) {\n        var userJwt, user, error, commentId, userEmail, commentResponse, movieId, _yield$MoviesDAO$getM, comments;\n\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                userJwt = req.get(\"Authorization\").slice(\"Bearer \".length);\n                _context3.next = 4;\n                return _users.User.decoded(userJwt);\n\n              case 4:\n                user = _context3.sent;\n                error = user.error;\n\n                if (!error) {\n                  _context3.next = 9;\n                  break;\n                }\n\n                res.status(401).json({\n                  error: error\n                });\n                return _context3.abrupt(\"return\");\n\n              case 9:\n                commentId = req.body.comment_id;\n                userEmail = user.email;\n                _context3.next = 13;\n                return _commentsDAO[\"default\"].deleteComment((0, _bson.ObjectId)(commentId), userEmail);\n\n              case 13:\n                commentResponse = _context3.sent;\n                movieId = req.body.movie_id;\n                _context3.next = 17;\n                return _moviesDAO[\"default\"].getMovieByID(movieId);\n\n              case 17:\n                _yield$MoviesDAO$getM = _context3.sent;\n                comments = _yield$MoviesDAO$getM.comments;\n                res.json({\n                  comments: comments\n                });\n                _context3.next = 25;\n                break;\n\n              case 22:\n                _context3.prev = 22;\n                _context3.t0 = _context3[\"catch\"](0);\n                res.status(500).json({\n                  e: _context3.t0\n                });\n\n              case 25:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 22]]);\n      }));\n\n      function apiDeleteComment(_x7, _x8, _x9) {\n        return _apiDeleteComment.apply(this, arguments);\n      }\n\n      return apiDeleteComment;\n    }()\n  }, {\n    key: \"apiCommentReport\",\n    value: function () {\n      var _apiCommentReport = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(req, res, next) {\n        var userJwt, user, error, report;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                userJwt = req.get(\"Authorization\").slice(\"Bearer \".length);\n                _context4.next = 4;\n                return _users.User.decoded(userJwt);\n\n              case 4:\n                user = _context4.sent;\n                error = user.error;\n\n                if (!error) {\n                  _context4.next = 9;\n                  break;\n                }\n\n                res.status(401).json({\n                  error: error\n                });\n                return _context4.abrupt(\"return\");\n\n              case 9:\n                if (!_usersDAO[\"default\"].checkAdmin(user.email)) {\n                  _context4.next = 15;\n                  break;\n                }\n\n                _context4.next = 12;\n                return _commentsDAO[\"default\"].mostActiveCommenters();\n\n              case 12:\n                report = _context4.sent;\n                res.json({\n                  report: report\n                });\n                return _context4.abrupt(\"return\");\n\n              case 15:\n                res.status(401).json({\n                  status: \"fail\"\n                });\n                _context4.next = 21;\n                break;\n\n              case 18:\n                _context4.prev = 18;\n                _context4.t0 = _context4[\"catch\"](0);\n                res.status(500).json({\n                  e: _context4.t0\n                });\n\n              case 21:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[0, 18]]);\n      }));\n\n      function apiCommentReport(_x10, _x11, _x12) {\n        return _apiCommentReport.apply(this, arguments);\n      }\n\n      return apiCommentReport;\n    }()\n  }]);\n  return CommentsController;\n}();\n\nexports[\"default\"] = CommentsController;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "names": [
        "CommentsController",
        "req",
        "res",
        "next",
        "userJwt",
        "get",
        "slice",
        "length",
        "User",
        "decoded",
        "user",
        "error",
        "status",
        "json",
        "movieId",
        "body",
        "movie_id",
        "comment",
        "date",
        "Date",
        "CommentsDAO",
        "addComment",
        "ObjectId",
        "commentResponse",
        "MoviesDAO",
        "getMovieByID",
        "updatedComments",
        "comments",
        "e",
        "commentId",
        "comment_id",
        "text",
        "updated_comment",
        "updateComment",
        "email",
        "modifiedCount",
        "Error",
        "userEmail",
        "deleteComment",
        "UsersDAO",
        "checkAdmin",
        "mostActiveCommenters",
        "report"
      ],
      "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api",
      "sources": [
        "comments.controller.js"
      ],
      "sourcesContent": [
        "import UsersDAO from \"../dao/usersDAO\"\nimport CommentsDAO from \"../dao/commentsDAO\"\nimport MoviesDAO from \"../dao/moviesDAO\"\nimport { User } from \"./users.controller\"\nimport { ObjectId } from \"bson\"\n\nexport default class CommentsController {\n  static async apiPostComment(req, res, next) {\n    try {\n      const userJwt = req.get(\"Authorization\").slice(\"Bearer \".length)\n      const user = await User.decoded(userJwt)\n      var { error } = user\n      if (error) {\n        res.status(401).json({ error })\n        return\n      }\n\n      const movieId = req.body.movie_id\n      const comment = req.body.comment\n      const date = new Date()\n\n      const commentResponse = await CommentsDAO.addComment(\n        ObjectId(movieId),\n        user,\n        comment,\n        date,\n      )\n\n      const updatedComments = await MoviesDAO.getMovieByID(movieId)\n\n      res.json({ status: \"success\", comments: updatedComments.comments })\n    } catch (e) {\n      res.status(500).json({ e })\n    }\n  }\n\n  static async apiUpdateComment(req, res, next) {\n    try {\n      const userJwt = req.get(\"Authorization\").slice(\"Bearer \".length)\n      const user = await User.decoded(userJwt)\n      var { error } = user\n      if (error) {\n        res.status(401).json({ error })\n        return\n      }\n\n      const commentId = req.body.comment_id\n      const text = req.body.updated_comment\n      const date = new Date()\n\n      const commentResponse = await CommentsDAO.updateComment(\n        ObjectId(commentId),\n        user.email,\n        text,\n        date,\n      )\n\n      var { error } = commentResponse\n      if (error) {\n        res.status(400).json({ error })\n      }\n\n      if (commentResponse.modifiedCount === 0) {\n        throw new Error(\n          \"unable to update comment - user may not be original poster\",\n        )\n      }\n\n      const movieId = req.body.movie_id\n      const updatedComments = await MoviesDAO.getMovieByID(movieId)\n\n      res.json({ comments: updatedComments.comments })\n    } catch (e) {\n      res.status(500).json({ e })\n    }\n  }\n\n  static async apiDeleteComment(req, res, next) {\n    try {\n      const userJwt = req.get(\"Authorization\").slice(\"Bearer \".length)\n      const user = await User.decoded(userJwt)\n      var { error } = user\n      if (error) {\n        res.status(401).json({ error })\n        return\n      }\n\n      const commentId = req.body.comment_id\n      const userEmail = user.email\n      const commentResponse = await CommentsDAO.deleteComment(\n        ObjectId(commentId),\n        userEmail,\n      )\n\n      const movieId = req.body.movie_id\n\n      const { comments } = await MoviesDAO.getMovieByID(movieId)\n      res.json({ comments })\n    } catch (e) {\n      res.status(500).json({ e })\n    }\n  }\n\n  static async apiCommentReport(req, res, next) {\n    try {\n      const userJwt = req.get(\"Authorization\").slice(\"Bearer \".length)\n      const user = await User.decoded(userJwt)\n      var { error } = user\n      if (error) {\n        res.status(401).json({ error })\n        return\n      }\n\n      if (UsersDAO.checkAdmin(user.email)) {\n        const report = await CommentsDAO.mostActiveCommenters()\n        res.json({ report })\n        return\n      }\n\n      res.status(401).json({ status: \"fail\" })\n    } catch (e) {\n      res.status(500).json({ e })\n    }\n  }\n}\n"
      ],
      "mappings": "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"
    },
    "sourceType": "script",
    "externalDependencies": {},
    "mtime": 1641016800000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js\",\"filename\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao/usersDAO.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"syntax-dynamic-import\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-decorators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"legacy\":true},\"externalDependencies\":[]},{\"key\":\"proposal-function-sent\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"MetaProperty\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-throw-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"UnaryExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-export-default-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-pipeline-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"proposal\":\"minimal\"},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-do-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DoExpression\":{\"exit\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.18.10": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js",
      "filename": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao/usersDAO.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-decorators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "legacy": true
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-function-sent",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "MetaProperty": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-throw-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "UnaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-export-default-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-pipeline-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "proposal": "minimal"
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-do-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DoExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao/usersDAO.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "decorators-legacy",
          "functionSent",
          "exportNamespaceFrom",
          "numericSeparator",
          "throwExpressions",
          "exportDefaultFrom",
          "logicalAssignment",
          "optionalChaining",
          [
            "pipelineOperator",
            {
              "proposal": "minimal"
            }
          ],
          "nullishCoalescingOperator",
          "doExpressions",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao/usersDAO.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao",
        "sourceFileName": "usersDAO.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar users;\nvar sessions;\n\nvar UsersDAO = /*#__PURE__*/function () {\n  function UsersDAO() {\n    (0, _classCallCheck2[\"default\"])(this, UsersDAO);\n  }\n\n  (0, _createClass2[\"default\"])(UsersDAO, null, [{\n    key: \"injectDB\",\n    value: function () {\n      var _injectDB = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(conn) {\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(users && sessions)) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                _context.prev = 2;\n                _context.next = 5;\n                return conn.db(process.env.MFLIX_NS).collection(\"users\");\n\n              case 5:\n                users = _context.sent;\n                _context.next = 8;\n                return conn.db(process.env.MFLIX_NS).collection(\"sessions\");\n\n              case 8:\n                sessions = _context.sent;\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](2);\n                console.error(\"Unable to establish collection handles in userDAO: \".concat(_context.t0));\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 11]]);\n      }));\n\n      function injectDB(_x) {\n        return _injectDB.apply(this, arguments);\n      }\n\n      return injectDB;\n    }()\n    /**\n    Ticket: User Management\n     For this ticket, you will need to implement the following five methods:\n     - getUser\n    - addUser\n    - loginUser\n    - logoutUser\n    - getUserSession\n     You can find these methods below this comment. Make sure to read the comments\n    in each method to better understand the implementation.\n     The method deleteUser is already given to you.\n    */\n\n    /**\n     * Finds a user in the `users` collection\n     * @param {string} email - The email of the desired user\n     * @returns {Object | null} Returns either a single user or nothing\n     */\n\n  }, {\n    key: \"getUser\",\n    value: function () {\n      var _getUser = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(email) {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return users.findOne({\n                  email: email\n                });\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getUser(_x2) {\n        return _getUser.apply(this, arguments);\n      }\n\n      return getUser;\n    }()\n    /**\n     * Adds a user to the `users` collection\n     * @param {UserInfo} userInfo - The information of the user to add\n     * @returns {DAOResponse} Returns either a \"success\" or an \"error\" Object\n     */\n\n  }, {\n    key: \"addUser\",\n    value: function () {\n      var _addUser = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(userInfo) {\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return users.insertOne({\n                  name: userInfo.name,\n                  email: userInfo.email,\n                  password: userInfo.password\n                });\n\n              case 3:\n                return _context3.abrupt(\"return\", {\n                  success: true\n                });\n\n              case 6:\n                _context3.prev = 6;\n                _context3.t0 = _context3[\"catch\"](0);\n\n                if (!String(_context3.t0).startsWith(\"MongoError: E11000 duplicate key error\")) {\n                  _context3.next = 10;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", {\n                  error: \"A user with the given email already exists.\"\n                });\n\n              case 10:\n                console.error(\"Error occurred while adding new user, \".concat(_context3.t0, \".\"));\n                return _context3.abrupt(\"return\", {\n                  error: _context3.t0\n                });\n\n              case 12:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 6]]);\n      }));\n\n      function addUser(_x3) {\n        return _addUser.apply(this, arguments);\n      }\n\n      return addUser;\n    }()\n    /**\n     * Adds a user to the `sessions` collection\n     * @param {string} email - The email of the user to login\n     * @param {string} jwt - A JSON web token representing the user's claims\n     * @returns {DAOResponse} Returns either a \"success\" or an \"error\" Object\n     */\n\n  }, {\n    key: \"loginUser\",\n    value: function () {\n      var _loginUser = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(email, jwt) {\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return sessions.updateOne({\n                  email: email\n                }, {\n                  $set: {\n                    jwt: jwt\n                  }\n                }, {\n                  $upsert: true\n                });\n\n              case 3:\n                return _context4.abrupt(\"return\", {\n                  success: true\n                });\n\n              case 6:\n                _context4.prev = 6;\n                _context4.t0 = _context4[\"catch\"](0);\n                console.error(\"Error occurred while logging in user, \".concat(_context4.t0));\n                return _context4.abrupt(\"return\", {\n                  error: _context4.t0\n                });\n\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[0, 6]]);\n      }));\n\n      function loginUser(_x4, _x5) {\n        return _loginUser.apply(this, arguments);\n      }\n\n      return loginUser;\n    }()\n    /**\n     * Removes a user from the `sessons` collection\n     * @param {string} email - The email of the user to logout\n     * @returns {DAOResponse} Returns either a \"success\" or an \"error\" Object\n     */\n\n  }, {\n    key: \"logoutUser\",\n    value: function () {\n      var _logoutUser = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5(email) {\n        return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                _context5.next = 3;\n                return sessions.deleteOne({\n                  email: email\n                });\n\n              case 3:\n                return _context5.abrupt(\"return\", {\n                  success: true\n                });\n\n              case 6:\n                _context5.prev = 6;\n                _context5.t0 = _context5[\"catch\"](0);\n                console.error(\"Error occurred while logging out user, \".concat(_context5.t0));\n                return _context5.abrupt(\"return\", {\n                  error: _context5.t0\n                });\n\n              case 10:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[0, 6]]);\n      }));\n\n      function logoutUser(_x6) {\n        return _logoutUser.apply(this, arguments);\n      }\n\n      return logoutUser;\n    }()\n    /**\n     * Gets a user from the `sessions` collection\n     * @param {string} email - The email of the user to search for in `sessions`\n     * @returns {Object | null} Returns a user session Object, an \"error\" Object\n     * if something went wrong, or null if user was not found.\n     */\n\n  }, {\n    key: \"getUserSession\",\n    value: function () {\n      var _getUserSession = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6(email) {\n        return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.prev = 0;\n                return _context6.abrupt(\"return\", sessions.findOne({\n                  email: email\n                }));\n\n              case 4:\n                _context6.prev = 4;\n                _context6.t0 = _context6[\"catch\"](0);\n                console.error(\"Error occurred while retrieving user session, \".concat(_context6.t0));\n                return _context6.abrupt(\"return\", null);\n\n              case 8:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, null, [[0, 4]]);\n      }));\n\n      function getUserSession(_x7) {\n        return _getUserSession.apply(this, arguments);\n      }\n\n      return getUserSession;\n    }()\n    /**\n     * Removes a user from the `sessions` and `users` collections\n     * @param {string} email - The email of the user to delete\n     * @returns {DAOResponse} Returns either a \"success\" or an \"error\" Object\n     */\n\n  }, {\n    key: \"deleteUser\",\n    value: function () {\n      var _deleteUser = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee7(email) {\n        return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.prev = 0;\n                _context7.next = 3;\n                return users.deleteOne({\n                  email: email\n                });\n\n              case 3:\n                _context7.next = 5;\n                return sessions.deleteOne({\n                  user_id: email\n                });\n\n              case 5:\n                _context7.next = 7;\n                return this.getUser(email);\n\n              case 7:\n                _context7.t0 = !_context7.sent;\n\n                if (!_context7.t0) {\n                  _context7.next = 12;\n                  break;\n                }\n\n                _context7.next = 11;\n                return this.getUserSession(email);\n\n              case 11:\n                _context7.t0 = !_context7.sent;\n\n              case 12:\n                if (!_context7.t0) {\n                  _context7.next = 16;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\", {\n                  success: true\n                });\n\n              case 16:\n                console.error(\"Deletion unsuccessful\");\n                return _context7.abrupt(\"return\", {\n                  error: \"Deletion unsuccessful\"\n                });\n\n              case 18:\n                _context7.next = 24;\n                break;\n\n              case 20:\n                _context7.prev = 20;\n                _context7.t1 = _context7[\"catch\"](0);\n                console.error(\"Error occurred while deleting user, \".concat(_context7.t1));\n                return _context7.abrupt(\"return\", {\n                  error: _context7.t1\n                });\n\n              case 24:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this, [[0, 20]]);\n      }));\n\n      function deleteUser(_x8) {\n        return _deleteUser.apply(this, arguments);\n      }\n\n      return deleteUser;\n    }()\n    /**\n     * Given a user's email and an object of new preferences, update that user's\n     * data to include those preferences.\n     * @param {string} email - The email of the user to update.\n     * @param {Object} preferences - The preferences to include in the user's data.\n     * @returns {DAOResponse}\n     */\n\n  }, {\n    key: \"updatePreferences\",\n    value: function () {\n      var _updatePreferences = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee8(email, preferences) {\n        var updateResponse;\n        return _regenerator[\"default\"].wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.prev = 0;\n\n                /**\n                Ticket: User Preferences\n                 Update the \"preferences\" field in the corresponding user's document to\n                reflect the new information in preferences.\n                */\n                preferences = preferences || {}; // TODO Ticket: User Preferences\n                // Use the data in \"preferences\" to update the user's preferences.\n\n                _context8.next = 4;\n                return users.updateOne({\n                  email: email\n                }, {\n                  $set: {\n                    preferences: preferences\n                  }\n                });\n\n              case 4:\n                updateResponse = _context8.sent;\n\n                if (!(updateResponse.matchedCount === 0)) {\n                  _context8.next = 7;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\", {\n                  error: \"No user found with that email\"\n                });\n\n              case 7:\n                return _context8.abrupt(\"return\", updateResponse);\n\n              case 10:\n                _context8.prev = 10;\n                _context8.t0 = _context8[\"catch\"](0);\n                console.error(\"An error occurred while updating this user's preferences, \".concat(_context8.t0));\n                return _context8.abrupt(\"return\", {\n                  error: _context8.t0\n                });\n\n              case 14:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, null, [[0, 10]]);\n      }));\n\n      function updatePreferences(_x9, _x10) {\n        return _updatePreferences.apply(this, arguments);\n      }\n\n      return updatePreferences;\n    }()\n  }, {\n    key: \"checkAdmin\",\n    value: function () {\n      var _checkAdmin = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee9(email) {\n        var _yield$this$getUser, isAdmin;\n\n        return _regenerator[\"default\"].wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.prev = 0;\n                _context9.next = 3;\n                return this.getUser(email);\n\n              case 3:\n                _yield$this$getUser = _context9.sent;\n                isAdmin = _yield$this$getUser.isAdmin;\n                return _context9.abrupt(\"return\", isAdmin || false);\n\n              case 8:\n                _context9.prev = 8;\n                _context9.t0 = _context9[\"catch\"](0);\n                return _context9.abrupt(\"return\", {\n                  error: _context9.t0\n                });\n\n              case 11:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this, [[0, 8]]);\n      }));\n\n      function checkAdmin(_x11) {\n        return _checkAdmin.apply(this, arguments);\n      }\n\n      return checkAdmin;\n    }()\n  }, {\n    key: \"makeAdmin\",\n    value: function () {\n      var _makeAdmin = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee10(email) {\n        var updateResponse;\n        return _regenerator[\"default\"].wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.prev = 0;\n                updateResponse = users.updateOne({\n                  email: email\n                }, {\n                  $set: {\n                    isAdmin: true\n                  }\n                });\n                return _context10.abrupt(\"return\", updateResponse);\n\n              case 5:\n                _context10.prev = 5;\n                _context10.t0 = _context10[\"catch\"](0);\n                return _context10.abrupt(\"return\", {\n                  error: _context10.t0\n                });\n\n              case 8:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, null, [[0, 5]]);\n      }));\n\n      function makeAdmin(_x12) {\n        return _makeAdmin.apply(this, arguments);\n      }\n\n      return makeAdmin;\n    }()\n  }]);\n  return UsersDAO;\n}();\n/**\n * Parameter passed to addUser method\n * @typedef UserInfo\n * @property {string} name\n * @property {string} email\n * @property {string} password\n */\n\n/**\n * Success/Error return object\n * @typedef DAOResponse\n * @property {boolean} [success] - Success\n * @property {string} [error] - Error\n */\n\n\nexports[\"default\"] = UsersDAO;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "names": [
        "users",
        "sessions",
        "UsersDAO",
        "conn",
        "db",
        "process",
        "env",
        "MFLIX_NS",
        "collection",
        "console",
        "error",
        "email",
        "findOne",
        "userInfo",
        "insertOne",
        "name",
        "password",
        "success",
        "String",
        "startsWith",
        "jwt",
        "updateOne",
        "$set",
        "$upsert",
        "deleteOne",
        "user_id",
        "getUser",
        "getUserSession",
        "preferences",
        "updateResponse",
        "matchedCount",
        "isAdmin"
      ],
      "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao",
      "sources": [
        "usersDAO.js"
      ],
      "sourcesContent": [
        "let users\nlet sessions\n\nexport default class UsersDAO {\n  static async injectDB(conn) {\n    if (users && sessions) {\n      return\n    }\n    try {\n      users = await conn.db(process.env.MFLIX_NS).collection(\"users\")\n      sessions = await conn.db(process.env.MFLIX_NS).collection(\"sessions\")\n    } catch (e) {\n      console.error(`Unable to establish collection handles in userDAO: ${e}`)\n    }\n  }\n\n  /**\n  Ticket: User Management\n\n  For this ticket, you will need to implement the following five methods:\n\n  - getUser\n  - addUser\n  - loginUser\n  - logoutUser\n  - getUserSession\n\n  You can find these methods below this comment. Make sure to read the comments\n  in each method to better understand the implementation.\n\n  The method deleteUser is already given to you.\n  */\n\n  /**\n   * Finds a user in the `users` collection\n   * @param {string} email - The email of the desired user\n   * @returns {Object | null} Returns either a single user or nothing\n   */\n  static async getUser(email) {\n    // TODO Ticket: User Management\n    // Retrieve the user document corresponding with the user's email.\n    return await users.findOne({ email: email })\n  }\n\n  /**\n   * Adds a user to the `users` collection\n   * @param {UserInfo} userInfo - The information of the user to add\n   * @returns {DAOResponse} Returns either a \"success\" or an \"error\" Object\n   */\n  static async addUser(userInfo) {\n    /**\n    Ticket: Durable Writes\n\n    Please increase the durability of this method by using a non-default write\n    concern with ``insertOne``.\n    */\n\n    try {\n      // TODO Ticket: User Management\n      // Insert a user with the \"name\", \"email\", and \"password\" fields.\n      // TODO Ticket: Durable Writes\n      // Use a more durable Write Concern for this operation.\n      await users.insertOne({ name: userInfo.name, email: userInfo.email, password: userInfo.password })\n      return { success: true }\n    } catch (e) {\n      if (String(e).startsWith(\"MongoError: E11000 duplicate key error\")) {\n        return { error: \"A user with the given email already exists.\" }\n      }\n      console.error(`Error occurred while adding new user, ${e}.`)\n      return { error: e }\n    }\n  }\n\n  /**\n   * Adds a user to the `sessions` collection\n   * @param {string} email - The email of the user to login\n   * @param {string} jwt - A JSON web token representing the user's claims\n   * @returns {DAOResponse} Returns either a \"success\" or an \"error\" Object\n   */\n  static async loginUser(email, jwt) {\n    try {\n      // TODO Ticket: User Management\n      // Use an UPSERT statement to update the \"jwt\" field in the document,\n      // matching the \"user_id\" field with the email passed to this function.\n      await sessions.updateOne(\n        { email: email },\n        { $set: { jwt: jwt } },\n        { $upsert: true }\n      )\n      return { success: true }\n    } catch (e) {\n      console.error(`Error occurred while logging in user, ${e}`)\n      return { error: e }\n    }\n  }\n\n  /**\n   * Removes a user from the `sessons` collection\n   * @param {string} email - The email of the user to logout\n   * @returns {DAOResponse} Returns either a \"success\" or an \"error\" Object\n   */\n  static async logoutUser(email) {\n    try {\n      // TODO Ticket: User Management\n      // Delete the document in the `sessions` collection matching the email.\n      await sessions.deleteOne({ email: email })\n      return { success: true }\n    } catch (e) {\n      console.error(`Error occurred while logging out user, ${e}`)\n      return { error: e }\n    }\n  }\n\n  /**\n   * Gets a user from the `sessions` collection\n   * @param {string} email - The email of the user to search for in `sessions`\n   * @returns {Object | null} Returns a user session Object, an \"error\" Object\n   * if something went wrong, or null if user was not found.\n   */\n  static async getUserSession(email) {\n    try {\n      // TODO Ticket: User Management\n      // Retrieve the session document corresponding with the user's email.\n      return sessions.findOne({ email: email })\n    } catch (e) {\n      console.error(`Error occurred while retrieving user session, ${e}`)\n      return null\n    }\n  }\n\n  /**\n   * Removes a user from the `sessions` and `users` collections\n   * @param {string} email - The email of the user to delete\n   * @returns {DAOResponse} Returns either a \"success\" or an \"error\" Object\n   */\n  static async deleteUser(email) {\n    try {\n      await users.deleteOne({ email })\n      await sessions.deleteOne({ user_id: email })\n      if (!(await this.getUser(email)) && !(await this.getUserSession(email))) {\n        return { success: true }\n      } else {\n        console.error(`Deletion unsuccessful`)\n        return { error: `Deletion unsuccessful` }\n      }\n    } catch (e) {\n      console.error(`Error occurred while deleting user, ${e}`)\n      return { error: e }\n    }\n  }\n\n  /**\n   * Given a user's email and an object of new preferences, update that user's\n   * data to include those preferences.\n   * @param {string} email - The email of the user to update.\n   * @param {Object} preferences - The preferences to include in the user's data.\n   * @returns {DAOResponse}\n   */\n  static async updatePreferences(email, preferences) {\n    try {\n      /**\n      Ticket: User Preferences\n\n      Update the \"preferences\" field in the corresponding user's document to\n      reflect the new information in preferences.\n      */\n\n      preferences = preferences || {}\n\n      // TODO Ticket: User Preferences\n      // Use the data in \"preferences\" to update the user's preferences.\n      const updateResponse = await users.updateOne(\n        { email: email },\n        { $set: { preferences: preferences } },\n      )\n\n      if (updateResponse.matchedCount === 0) {\n        return { error: \"No user found with that email\" }\n      }\n      return updateResponse\n    } catch (e) {\n      console.error(\n        `An error occurred while updating this user's preferences, ${e}`,\n      )\n      return { error: e }\n    }\n  }\n\n  static async checkAdmin(email) {\n    try {\n      const { isAdmin } = await this.getUser(email)\n      return isAdmin || false\n    } catch (e) {\n      return { error: e }\n    }\n  }\n\n  static async makeAdmin(email) {\n    try {\n      const updateResponse = users.updateOne(\n        { email },\n        { $set: { isAdmin: true } },\n      )\n      return updateResponse\n    } catch (e) {\n      return { error: e }\n    }\n  }\n}\n\n/**\n * Parameter passed to addUser method\n * @typedef UserInfo\n * @property {string} name\n * @property {string} email\n * @property {string} password\n */\n\n/**\n * Success/Error return object\n * @typedef DAOResponse\n * @property {boolean} [success] - Success\n * @property {string} [error] - Error\n */\n"
      ],
      "mappings": "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"
    },
    "sourceType": "script",
    "externalDependencies": {},
    "mtime": 1659969739857
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js\",\"filename\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao/commentsDAO.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"syntax-dynamic-import\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-decorators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"legacy\":true},\"externalDependencies\":[]},{\"key\":\"proposal-function-sent\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"MetaProperty\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-throw-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"UnaryExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-export-default-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-pipeline-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"proposal\":\"minimal\"},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-do-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DoExpression\":{\"exit\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.18.10": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js",
      "filename": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao/commentsDAO.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-decorators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "legacy": true
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-function-sent",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "MetaProperty": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-throw-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "UnaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-export-default-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-pipeline-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "proposal": "minimal"
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-do-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DoExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao/commentsDAO.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "decorators-legacy",
          "functionSent",
          "exportNamespaceFrom",
          "numericSeparator",
          "throwExpressions",
          "exportDefaultFrom",
          "logicalAssignment",
          "optionalChaining",
          [
            "pipelineOperator",
            {
              "proposal": "minimal"
            }
          ],
          "nullishCoalescingOperator",
          "doExpressions",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao/commentsDAO.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao",
        "sourceFileName": "commentsDAO.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _bson = require(\"bson\");\n\nvar comments;\n\nvar CommentsDAO = /*#__PURE__*/function () {\n  function CommentsDAO() {\n    (0, _classCallCheck2[\"default\"])(this, CommentsDAO);\n  }\n\n  (0, _createClass2[\"default\"])(CommentsDAO, null, [{\n    key: \"injectDB\",\n    value: function () {\n      var _injectDB = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(conn) {\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!comments) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                _context.prev = 2;\n                _context.next = 5;\n                return conn.db(process.env.MFLIX_NS).collection(\"comments\");\n\n              case 5:\n                comments = _context.sent;\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](2);\n                console.error(\"Unable to establish collection handles in userDAO: \".concat(_context.t0));\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 8]]);\n      }));\n\n      function injectDB(_x) {\n        return _injectDB.apply(this, arguments);\n      }\n\n      return injectDB;\n    }()\n    /**\n    Ticket: Create/Update Comments\n     For this ticket, you will need to implement the following two methods:\n     - addComment\n    - updateComment\n     You can find these methods below this docstring. Make sure to read the comments\n    to better understand the task.\n    */\n\n    /**\n     * Inserts a comment into the `comments` collection, with the following fields:\n        - \"name\", the name of the user posting the comment\n       - \"email\", the email of the user posting the comment\n       - \"movie_id\", the _id of the movie pertaining to the comment\n       - \"text\", the text of the comment\n       - \"date\", the date when the comment was posted\n      * @param {string} movieId - The _id of the movie in the `movies` collection.\n     * @param {Object} user - An object containing the user's name and email.\n     * @param {string} comment - The text of the comment.\n     * @param {string} date - The date on which the comment was posted.\n     * @returns {DAOResponse} Returns an object with either DB response or \"error\"\n     */\n\n  }, {\n    key: \"addComment\",\n    value: function () {\n      var _addComment = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(movieId, user, comment, date) {\n        var commentDoc;\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                // TODO Ticket: Create/Update Comments\n                // Construct the comment document to be inserted into MongoDB.\n                commentDoc = {\n                  name: user.name,\n                  email: user.email,\n                  movie_id: movieId,\n                  text: comment,\n                  date: date\n                };\n                _context2.next = 4;\n                return comments.insertOne(commentDoc);\n\n              case 4:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.error(\"Unable to post comment: \".concat(_context2.t0));\n                return _context2.abrupt(\"return\", {\n                  error: _context2.t0\n                });\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 7]]);\n      }));\n\n      function addComment(_x2, _x3, _x4, _x5) {\n        return _addComment.apply(this, arguments);\n      }\n\n      return addComment;\n    }()\n    /**\n     * Updates the comment in the comment collection. Queries for the comment\n     * based by both comment _id field as well as the email field to doubly ensure\n     * the user has permission to edit this comment.\n     * @param {string} commentId - The _id of the comment to update.\n     * @param {string} userEmail - The email of the user who owns the comment.\n     * @param {string} text - The updated text of the comment.\n     * @param {string} date - The date on which the comment was updated.\n     * @returns {DAOResponse} Returns an object with either DB response or \"error\"\n     */\n\n  }, {\n    key: \"updateComment\",\n    value: function () {\n      var _updateComment = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(commentId, userEmail, text, date) {\n        var updateResponse;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return comments.updateOne({\n                  email: userEmail,\n                  _id: commentId\n                }, {\n                  $set: {\n                    text: text,\n                    date: date\n                  }\n                });\n\n              case 3:\n                updateResponse = _context3.sent;\n                return _context3.abrupt(\"return\", updateResponse);\n\n              case 7:\n                _context3.prev = 7;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.error(\"Unable to update comment: \".concat(_context3.t0));\n                return _context3.abrupt(\"return\", {\n                  error: _context3.t0\n                });\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 7]]);\n      }));\n\n      function updateComment(_x6, _x7, _x8, _x9) {\n        return _updateComment.apply(this, arguments);\n      }\n\n      return updateComment;\n    }()\n  }, {\n    key: \"deleteComment\",\n    value: function () {\n      var _deleteComment = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(commentId, userEmail) {\n        var deleteResponse;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return comments.deleteOne({\n                  _id: (0, _bson.ObjectId)(commentId),\n                  email: userEmail\n                });\n\n              case 3:\n                deleteResponse = _context4.sent;\n                return _context4.abrupt(\"return\", deleteResponse);\n\n              case 7:\n                _context4.prev = 7;\n                _context4.t0 = _context4[\"catch\"](0);\n                console.error(\"Unable to delete comment: \".concat(_context4.t0));\n                return _context4.abrupt(\"return\", {\n                  error: _context4.t0\n                });\n\n              case 11:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[0, 7]]);\n      }));\n\n      function deleteComment(_x10, _x11) {\n        return _deleteComment.apply(this, arguments);\n      }\n\n      return deleteComment;\n    }()\n  }, {\n    key: \"mostActiveCommenters\",\n    value: function () {\n      var _mostActiveCommenters = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5() {\n        var pipeline, readConcern, aggregateResult;\n        return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                // TODO Ticket: User Report\n                // Return the 20 users who have commented the most on MFlix.\n                pipeline = [{\n                  \"$sortByCount\": \"$email\"\n                }, {\n                  \"$limit\": 20\n                }]; // TODO Ticket: User Report\n                // Use a more durable Read Concern here to make sure this data is not stale.\n\n                readConcern = comments.readConcern;\n                _context5.next = 5;\n                return comments.aggregate(pipeline, {\n                  readConcern: readConcern\n                });\n\n              case 5:\n                aggregateResult = _context5.sent;\n                _context5.next = 8;\n                return aggregateResult.toArray();\n\n              case 8:\n                return _context5.abrupt(\"return\", _context5.sent);\n\n              case 11:\n                _context5.prev = 11;\n                _context5.t0 = _context5[\"catch\"](0);\n                console.error(\"Unable to retrieve most active commenters: \".concat(_context5.t0));\n                return _context5.abrupt(\"return\", {\n                  error: _context5.t0\n                });\n\n              case 15:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[0, 11]]);\n      }));\n\n      function mostActiveCommenters() {\n        return _mostActiveCommenters.apply(this, arguments);\n      }\n\n      return mostActiveCommenters;\n    }()\n  }]);\n  return CommentsDAO;\n}();\n/**\n * Success/Error return object\n * @typedef DAOResponse\n * @property {boolean} [success] - Success\n * @property {string} [error] - Error\n */\n\n\nexports[\"default\"] = CommentsDAO;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb21tZW50cyIsIkNvbW1lbnRzREFPIiwiY29ubiIsImRiIiwicHJvY2VzcyIsImVudiIsIk1GTElYX05TIiwiY29sbGVjdGlvbiIsImNvbnNvbGUiLCJlcnJvciIsIm1vdmllSWQiLCJ1c2VyIiwiY29tbWVudCIsImRhdGUiLCJjb21tZW50RG9jIiwibmFtZSIsImVtYWlsIiwibW92aWVfaWQiLCJ0ZXh0IiwiaW5zZXJ0T25lIiwiY29tbWVudElkIiwidXNlckVtYWlsIiwidXBkYXRlT25lIiwiX2lkIiwiJHNldCIsInVwZGF0ZVJlc3BvbnNlIiwiZGVsZXRlT25lIiwiT2JqZWN0SWQiLCJkZWxldGVSZXNwb25zZSIsInBpcGVsaW5lIiwicmVhZENvbmNlcm4iLCJhZ2dyZWdhdGUiLCJhZ2dyZWdhdGVSZXN1bHQiLCJ0b0FycmF5Il0sInNvdXJjZVJvb3QiOiIvVXNlcnMvZnVzaW9udGVjaC9Eb2N1bWVudHMvRnVzaW9uVGVjaC9NMjIwL21mbGl4LWpzL3NyYy9kYW8iLCJzb3VyY2VzIjpbImNvbW1lbnRzREFPLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9iamVjdElkIH0gZnJvbSBcImJzb25cIlxuXG5sZXQgY29tbWVudHNcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ29tbWVudHNEQU8ge1xuICBzdGF0aWMgYXN5bmMgaW5qZWN0REIoY29ubikge1xuICAgIGlmIChjb21tZW50cykge1xuICAgICAgcmV0dXJuXG4gICAgfVxuICAgIHRyeSB7XG4gICAgICBjb21tZW50cyA9IGF3YWl0IGNvbm4uZGIocHJvY2Vzcy5lbnYuTUZMSVhfTlMpLmNvbGxlY3Rpb24oXCJjb21tZW50c1wiKVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoYFVuYWJsZSB0byBlc3RhYmxpc2ggY29sbGVjdGlvbiBoYW5kbGVzIGluIHVzZXJEQU86ICR7ZX1gKVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICBUaWNrZXQ6IENyZWF0ZS9VcGRhdGUgQ29tbWVudHNcblxuICBGb3IgdGhpcyB0aWNrZXQsIHlvdSB3aWxsIG5lZWQgdG8gaW1wbGVtZW50IHRoZSBmb2xsb3dpbmcgdHdvIG1ldGhvZHM6XG5cbiAgLSBhZGRDb21tZW50XG4gIC0gdXBkYXRlQ29tbWVudFxuXG4gIFlvdSBjYW4gZmluZCB0aGVzZSBtZXRob2RzIGJlbG93IHRoaXMgZG9jc3RyaW5nLiBNYWtlIHN1cmUgdG8gcmVhZCB0aGUgY29tbWVudHNcbiAgdG8gYmV0dGVyIHVuZGVyc3RhbmQgdGhlIHRhc2suXG4gICovXG5cbiAgLyoqXG4gICAqIEluc2VydHMgYSBjb21tZW50IGludG8gdGhlIGBjb21tZW50c2AgY29sbGVjdGlvbiwgd2l0aCB0aGUgZm9sbG93aW5nIGZpZWxkczpcblxuICAgICAtIFwibmFtZVwiLCB0aGUgbmFtZSBvZiB0aGUgdXNlciBwb3N0aW5nIHRoZSBjb21tZW50XG4gICAgIC0gXCJlbWFpbFwiLCB0aGUgZW1haWwgb2YgdGhlIHVzZXIgcG9zdGluZyB0aGUgY29tbWVudFxuICAgICAtIFwibW92aWVfaWRcIiwgdGhlIF9pZCBvZiB0aGUgbW92aWUgcGVydGFpbmluZyB0byB0aGUgY29tbWVudFxuICAgICAtIFwidGV4dFwiLCB0aGUgdGV4dCBvZiB0aGUgY29tbWVudFxuICAgICAtIFwiZGF0ZVwiLCB0aGUgZGF0ZSB3aGVuIHRoZSBjb21tZW50IHdhcyBwb3N0ZWRcblxuICAgKiBAcGFyYW0ge3N0cmluZ30gbW92aWVJZCAtIFRoZSBfaWQgb2YgdGhlIG1vdmllIGluIHRoZSBgbW92aWVzYCBjb2xsZWN0aW9uLlxuICAgKiBAcGFyYW0ge09iamVjdH0gdXNlciAtIEFuIG9iamVjdCBjb250YWluaW5nIHRoZSB1c2VyJ3MgbmFtZSBhbmQgZW1haWwuXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBjb21tZW50IC0gVGhlIHRleHQgb2YgdGhlIGNvbW1lbnQuXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBkYXRlIC0gVGhlIGRhdGUgb24gd2hpY2ggdGhlIGNvbW1lbnQgd2FzIHBvc3RlZC5cbiAgICogQHJldHVybnMge0RBT1Jlc3BvbnNlfSBSZXR1cm5zIGFuIG9iamVjdCB3aXRoIGVpdGhlciBEQiByZXNwb25zZSBvciBcImVycm9yXCJcbiAgICovXG4gIHN0YXRpYyBhc3luYyBhZGRDb21tZW50KG1vdmllSWQsIHVzZXIsIGNvbW1lbnQsIGRhdGUpIHtcbiAgICB0cnkge1xuICAgICAgLy8gVE9ETyBUaWNrZXQ6IENyZWF0ZS9VcGRhdGUgQ29tbWVudHNcbiAgICAgIC8vIENvbnN0cnVjdCB0aGUgY29tbWVudCBkb2N1bWVudCB0byBiZSBpbnNlcnRlZCBpbnRvIE1vbmdvREIuXG4gICAgICBjb25zdCBjb21tZW50RG9jID0geyBuYW1lOiB1c2VyLm5hbWUsIGVtYWlsOiB1c2VyLmVtYWlsLCBtb3ZpZV9pZDogbW92aWVJZCwgdGV4dDogY29tbWVudCwgZGF0ZTogZGF0ZSB9XG5cbiAgICAgIHJldHVybiBhd2FpdCBjb21tZW50cy5pbnNlcnRPbmUoY29tbWVudERvYylcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBjb25zb2xlLmVycm9yKGBVbmFibGUgdG8gcG9zdCBjb21tZW50OiAke2V9YClcbiAgICAgIHJldHVybiB7IGVycm9yOiBlIH1cbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogVXBkYXRlcyB0aGUgY29tbWVudCBpbiB0aGUgY29tbWVudCBjb2xsZWN0aW9uLiBRdWVyaWVzIGZvciB0aGUgY29tbWVudFxuICAgKiBiYXNlZCBieSBib3RoIGNvbW1lbnQgX2lkIGZpZWxkIGFzIHdlbGwgYXMgdGhlIGVtYWlsIGZpZWxkIHRvIGRvdWJseSBlbnN1cmVcbiAgICogdGhlIHVzZXIgaGFzIHBlcm1pc3Npb24gdG8gZWRpdCB0aGlzIGNvbW1lbnQuXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBjb21tZW50SWQgLSBUaGUgX2lkIG9mIHRoZSBjb21tZW50IHRvIHVwZGF0ZS5cbiAgICogQHBhcmFtIHtzdHJpbmd9IHVzZXJFbWFpbCAtIFRoZSBlbWFpbCBvZiB0aGUgdXNlciB3aG8gb3ducyB0aGUgY29tbWVudC5cbiAgICogQHBhcmFtIHtzdHJpbmd9IHRleHQgLSBUaGUgdXBkYXRlZCB0ZXh0IG9mIHRoZSBjb21tZW50LlxuICAgKiBAcGFyYW0ge3N0cmluZ30gZGF0ZSAtIFRoZSBkYXRlIG9uIHdoaWNoIHRoZSBjb21tZW50IHdhcyB1cGRhdGVkLlxuICAgKiBAcmV0dXJucyB7REFPUmVzcG9uc2V9IFJldHVybnMgYW4gb2JqZWN0IHdpdGggZWl0aGVyIERCIHJlc3BvbnNlIG9yIFwiZXJyb3JcIlxuICAgKi9cbiAgc3RhdGljIGFzeW5jIHVwZGF0ZUNvbW1lbnQoY29tbWVudElkLCB1c2VyRW1haWwsIHRleHQsIGRhdGUpIHtcbiAgICB0cnkge1xuICAgICAgLy8gVE9ETyBUaWNrZXQ6IENyZWF0ZS9VcGRhdGUgQ29tbWVudHNcbiAgICAgIC8vIFVzZSB0aGUgY29tbWVudElkIGFuZCB1c2VyRW1haWwgdG8gc2VsZWN0IHRoZSBwcm9wZXIgY29tbWVudCwgdGhlblxuICAgICAgLy8gdXBkYXRlIHRoZSBcInRleHRcIiBhbmQgXCJkYXRlXCIgZmllbGRzIG9mIHRoZSBzZWxlY3RlZCBjb21tZW50LlxuICAgICAgY29uc3QgdXBkYXRlUmVzcG9uc2UgPSBhd2FpdCBjb21tZW50cy51cGRhdGVPbmUoXG4gICAgICAgIHsgZW1haWw6IHVzZXJFbWFpbCwgX2lkOiBjb21tZW50SWQgfSxcbiAgICAgICAgeyAkc2V0OiB7IHRleHQ6IHRleHQsIGRhdGU6IGRhdGUgfSB9LFxuICAgICAgKVxuXG4gICAgICByZXR1cm4gdXBkYXRlUmVzcG9uc2VcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBjb25zb2xlLmVycm9yKGBVbmFibGUgdG8gdXBkYXRlIGNvbW1lbnQ6ICR7ZX1gKVxuICAgICAgcmV0dXJuIHsgZXJyb3I6IGUgfVxuICAgIH1cbiAgfVxuXG4gIHN0YXRpYyBhc3luYyBkZWxldGVDb21tZW50KGNvbW1lbnRJZCwgdXNlckVtYWlsKSB7XG4gICAgLyoqXG4gICAgVGlja2V0OiBEZWxldGUgQ29tbWVudHNcblxuICAgIEltcGxlbWVudCB0aGUgZGVsZXRlT25lKCkgY2FsbCBpbiB0aGlzIG1ldGhvZC5cblxuICAgIEVuc3VyZSB0aGUgZGVsZXRlIG9wZXJhdGlvbiBpcyBsaW1pdGVkIHNvIG9ubHkgdGhlIHVzZXIgY2FuIGRlbGV0ZSB0aGVpciBvd25cbiAgICBjb21tZW50cywgYnV0IG5vdCBhbnlvbmUgZWxzZSdzIGNvbW1lbnRzLlxuICAgICovXG5cbiAgICB0cnkge1xuICAgICAgLy8gVE9ETyBUaWNrZXQ6IERlbGV0ZSBDb21tZW50c1xuICAgICAgLy8gVXNlIHRoZSB1c2VyRW1haWwgYW5kIGNvbW1lbnRJZCB0byBkZWxldGUgdGhlIHByb3BlciBjb21tZW50LlxuICAgICAgY29uc3QgZGVsZXRlUmVzcG9uc2UgPSBhd2FpdCBjb21tZW50cy5kZWxldGVPbmUoe1xuICAgICAgICBfaWQ6IE9iamVjdElkKGNvbW1lbnRJZCksIGVtYWlsOiB1c2VyRW1haWxcbiAgICAgIH0pXG5cbiAgICAgIHJldHVybiBkZWxldGVSZXNwb25zZVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoYFVuYWJsZSB0byBkZWxldGUgY29tbWVudDogJHtlfWApXG4gICAgICByZXR1cm4geyBlcnJvcjogZSB9XG4gICAgfVxuICB9XG5cbiAgc3RhdGljIGFzeW5jIG1vc3RBY3RpdmVDb21tZW50ZXJzKCkge1xuICAgIC8qKlxuICAgIFRpY2tldDogVXNlciBSZXBvcnRcblxuICAgIEJ1aWxkIGEgcGlwZWxpbmUgdGhhdCByZXR1cm5zIHRoZSAyMCBtb3N0IGZyZXF1ZW50IGNvbW1lbnRlcnMgb24gdGhlIE1GbGl4XG4gICAgc2l0ZS4gWW91IGNhbiBkbyB0aGlzIGJ5IGNvdW50aW5nIHRoZSBudW1iZXIgb2Ygb2NjdXJyZW5jZXMgb2YgYSB1c2VyJ3NcbiAgICBlbWFpbCBpbiB0aGUgYGNvbW1lbnRzYCBjb2xsZWN0aW9uLlxuICAgICovXG4gICAgdHJ5IHtcbiAgICAgIC8vIFRPRE8gVGlja2V0OiBVc2VyIFJlcG9ydFxuICAgICAgLy8gUmV0dXJuIHRoZSAyMCB1c2VycyB3aG8gaGF2ZSBjb21tZW50ZWQgdGhlIG1vc3Qgb24gTUZsaXguXG4gICAgICBjb25zdCBwaXBlbGluZSA9IFtcbiAgICAgICAge1xuICAgICAgICAgIFwiJHNvcnRCeUNvdW50XCI6IFwiJGVtYWlsXCJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIFwiJGxpbWl0XCI6IDIwXG4gICAgICAgIH1cbiAgICAgIF1cblxuICAgICAgLy8gVE9ETyBUaWNrZXQ6IFVzZXIgUmVwb3J0XG4gICAgICAvLyBVc2UgYSBtb3JlIGR1cmFibGUgUmVhZCBDb25jZXJuIGhlcmUgdG8gbWFrZSBzdXJlIHRoaXMgZGF0YSBpcyBub3Qgc3RhbGUuXG4gICAgICBjb25zdCByZWFkQ29uY2VybiA9IGNvbW1lbnRzLnJlYWRDb25jZXJuXG5cbiAgICAgIGNvbnN0IGFnZ3JlZ2F0ZVJlc3VsdCA9IGF3YWl0IGNvbW1lbnRzLmFnZ3JlZ2F0ZShwaXBlbGluZSwge1xuICAgICAgICByZWFkQ29uY2VybixcbiAgICAgIH0pXG5cbiAgICAgIHJldHVybiBhd2FpdCBhZ2dyZWdhdGVSZXN1bHQudG9BcnJheSgpXG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgY29uc29sZS5lcnJvcihgVW5hYmxlIHRvIHJldHJpZXZlIG1vc3QgYWN0aXZlIGNvbW1lbnRlcnM6ICR7ZX1gKVxuICAgICAgcmV0dXJuIHsgZXJyb3I6IGUgfVxuICAgIH1cbiAgfVxufVxuXG4vKipcbiAqIFN1Y2Nlc3MvRXJyb3IgcmV0dXJuIG9iamVjdFxuICogQHR5cGVkZWYgREFPUmVzcG9uc2VcbiAqIEBwcm9wZXJ0eSB7Ym9vbGVhbn0gW3N1Y2Nlc3NdIC0gU3VjY2Vzc1xuICogQHByb3BlcnR5IHtzdHJpbmd9IFtlcnJvcl0gLSBFcnJvclxuICovXG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7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",
    "map": {
      "version": 3,
      "names": [
        "comments",
        "CommentsDAO",
        "conn",
        "db",
        "process",
        "env",
        "MFLIX_NS",
        "collection",
        "console",
        "error",
        "movieId",
        "user",
        "comment",
        "date",
        "commentDoc",
        "name",
        "email",
        "movie_id",
        "text",
        "insertOne",
        "commentId",
        "userEmail",
        "updateOne",
        "_id",
        "$set",
        "updateResponse",
        "deleteOne",
        "ObjectId",
        "deleteResponse",
        "pipeline",
        "readConcern",
        "aggregate",
        "aggregateResult",
        "toArray"
      ],
      "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao",
      "sources": [
        "commentsDAO.js"
      ],
      "sourcesContent": [
        "import { ObjectId } from \"bson\"\n\nlet comments\n\nexport default class CommentsDAO {\n  static async injectDB(conn) {\n    if (comments) {\n      return\n    }\n    try {\n      comments = await conn.db(process.env.MFLIX_NS).collection(\"comments\")\n    } catch (e) {\n      console.error(`Unable to establish collection handles in userDAO: ${e}`)\n    }\n  }\n\n  /**\n  Ticket: Create/Update Comments\n\n  For this ticket, you will need to implement the following two methods:\n\n  - addComment\n  - updateComment\n\n  You can find these methods below this docstring. Make sure to read the comments\n  to better understand the task.\n  */\n\n  /**\n   * Inserts a comment into the `comments` collection, with the following fields:\n\n     - \"name\", the name of the user posting the comment\n     - \"email\", the email of the user posting the comment\n     - \"movie_id\", the _id of the movie pertaining to the comment\n     - \"text\", the text of the comment\n     - \"date\", the date when the comment was posted\n\n   * @param {string} movieId - The _id of the movie in the `movies` collection.\n   * @param {Object} user - An object containing the user's name and email.\n   * @param {string} comment - The text of the comment.\n   * @param {string} date - The date on which the comment was posted.\n   * @returns {DAOResponse} Returns an object with either DB response or \"error\"\n   */\n  static async addComment(movieId, user, comment, date) {\n    try {\n      // TODO Ticket: Create/Update Comments\n      // Construct the comment document to be inserted into MongoDB.\n      const commentDoc = { name: user.name, email: user.email, movie_id: movieId, text: comment, date: date }\n\n      return await comments.insertOne(commentDoc)\n    } catch (e) {\n      console.error(`Unable to post comment: ${e}`)\n      return { error: e }\n    }\n  }\n\n  /**\n   * Updates the comment in the comment collection. Queries for the comment\n   * based by both comment _id field as well as the email field to doubly ensure\n   * the user has permission to edit this comment.\n   * @param {string} commentId - The _id of the comment to update.\n   * @param {string} userEmail - The email of the user who owns the comment.\n   * @param {string} text - The updated text of the comment.\n   * @param {string} date - The date on which the comment was updated.\n   * @returns {DAOResponse} Returns an object with either DB response or \"error\"\n   */\n  static async updateComment(commentId, userEmail, text, date) {\n    try {\n      // TODO Ticket: Create/Update Comments\n      // Use the commentId and userEmail to select the proper comment, then\n      // update the \"text\" and \"date\" fields of the selected comment.\n      const updateResponse = await comments.updateOne(\n        { email: userEmail, _id: commentId },\n        { $set: { text: text, date: date } },\n      )\n\n      return updateResponse\n    } catch (e) {\n      console.error(`Unable to update comment: ${e}`)\n      return { error: e }\n    }\n  }\n\n  static async deleteComment(commentId, userEmail) {\n    /**\n    Ticket: Delete Comments\n\n    Implement the deleteOne() call in this method.\n\n    Ensure the delete operation is limited so only the user can delete their own\n    comments, but not anyone else's comments.\n    */\n\n    try {\n      // TODO Ticket: Delete Comments\n      // Use the userEmail and commentId to delete the proper comment.\n      const deleteResponse = await comments.deleteOne({\n        _id: ObjectId(commentId), email: userEmail\n      })\n\n      return deleteResponse\n    } catch (e) {\n      console.error(`Unable to delete comment: ${e}`)\n      return { error: e }\n    }\n  }\n\n  static async mostActiveCommenters() {\n    /**\n    Ticket: User Report\n\n    Build a pipeline that returns the 20 most frequent commenters on the MFlix\n    site. You can do this by counting the number of occurrences of a user's\n    email in the `comments` collection.\n    */\n    try {\n      // TODO Ticket: User Report\n      // Return the 20 users who have commented the most on MFlix.\n      const pipeline = [\n        {\n          \"$sortByCount\": \"$email\"\n        },\n        {\n          \"$limit\": 20\n        }\n      ]\n\n      // TODO Ticket: User Report\n      // Use a more durable Read Concern here to make sure this data is not stale.\n      const readConcern = comments.readConcern\n\n      const aggregateResult = await comments.aggregate(pipeline, {\n        readConcern,\n      })\n\n      return await aggregateResult.toArray()\n    } catch (e) {\n      console.error(`Unable to retrieve most active commenters: ${e}`)\n      return { error: e }\n    }\n  }\n}\n\n/**\n * Success/Error return object\n * @typedef DAOResponse\n * @property {boolean} [success] - Success\n * @property {string} [error] - Error\n */\n"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;AAAA;;AAEA,IAAIA,QAAJ;;IAEqBC,W;;;;;;;;qHACGC,I;;;;;qBAChBF,Q;;;;;;;;;;uBAIeE,IAAI,CAACC,EAAL,CAAQC,OAAO,CAACC,GAAR,CAAYC,QAApB,EAA8BC,UAA9B,CAAyC,UAAzC,C;;;gBAAjBP,Q;;;;;;;gBAEAQ,OAAO,CAACC,KAAR;;;;;;;;;;;;;;;;IAIJ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;IAKE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;wHAG0BC,O,EAASC,I,EAAMC,O,EAASC,I;;;;;;;gBAE5C;gBACA;gBACMC,U,GAAa;kBAAEC,IAAI,EAAEJ,IAAI,CAACI,IAAb;kBAAmBC,KAAK,EAAEL,IAAI,CAACK,KAA/B;kBAAsCC,QAAQ,EAAEP,OAAhD;kBAAyDQ,IAAI,EAAEN,OAA/D;kBAAwEC,IAAI,EAAEA;gBAA9E,C;;uBAENb,QAAQ,CAACmB,SAAT,CAAmBL,UAAnB,C;;;;;;;;gBAEbN,OAAO,CAACC,KAAR;kDACO;kBAAEA,KAAK;gBAAP,C;;;;;;;;;;;;;;;;IAIX;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;2HAC6BW,S,EAAWC,S,EAAWH,I,EAAML,I;;;;;;;;uBAKtBb,QAAQ,CAACsB,SAAT,CAC3B;kBAAEN,KAAK,EAAEK,SAAT;kBAAoBE,GAAG,EAAEH;gBAAzB,CAD2B,EAE3B;kBAAEI,IAAI,EAAE;oBAAEN,IAAI,EAAEA,IAAR;oBAAcL,IAAI,EAAEA;kBAApB;gBAAR,CAF2B,C;;;gBAAvBY,c;kDAKCA,c;;;;;gBAEPjB,OAAO,CAACC,KAAR;kDACO;kBAAEA,KAAK;gBAAP,C;;;;;;;;;;;;;;;;;;;2HAIgBW,S,EAAWC,S;;;;;;;;uBAaLrB,QAAQ,CAAC0B,SAAT,CAAmB;kBAC9CH,GAAG,EAAE,IAAAI,cAAA,EAASP,SAAT,CADyC;kBACpBJ,KAAK,EAAEK;gBADa,CAAnB,C;;;gBAAvBO,c;kDAICA,c;;;;;gBAEPpB,OAAO,CAACC,KAAR;kDACO;kBAAEA,KAAK;gBAAP,C;;;;;;;;;;;;;;;;;;;;;;;;;;gBAaP;gBACA;gBACMoB,Q,GAAW,CACf;kBACE,gBAAgB;gBADlB,CADe,EAIf;kBACE,UAAU;gBADZ,CAJe,C,EASjB;gBACA;;gBACMC,W,GAAc9B,QAAQ,CAAC8B,W;;uBAEC9B,QAAQ,CAAC+B,SAAT,CAAmBF,QAAnB,EAA6B;kBACzDC,WAAW,EAAXA;gBADyD,CAA7B,C;;;gBAAxBE,e;;uBAIOA,eAAe,CAACC,OAAhB,E;;;;;;;;gBAEbzB,OAAO,CAACC,KAAR;kDACO;kBAAEA,KAAK;gBAAP,C;;;;;;;;;;;;;;;;;;;AAKb;AACA;AACA;AACA;AACA;AACA"
    },
    "sourceType": "script",
    "externalDependencies": {},
    "mtime": 1659981541187
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js\",\"filename\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api/users.controller.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"syntax-dynamic-import\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-decorators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"legacy\":true},\"externalDependencies\":[]},{\"key\":\"proposal-function-sent\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"MetaProperty\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-throw-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"UnaryExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-export-default-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-pipeline-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"proposal\":\"minimal\"},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-do-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DoExpression\":{\"exit\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.18.10": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js",
      "filename": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api/users.controller.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-decorators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "legacy": true
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-function-sent",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "MetaProperty": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-throw-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "UnaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-export-default-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-pipeline-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "proposal": "minimal"
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-do-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DoExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api/users.controller.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "decorators-legacy",
          "functionSent",
          "exportNamespaceFrom",
          "numericSeparator",
          "throwExpressions",
          "exportDefaultFrom",
          "logicalAssignment",
          "optionalChaining",
          [
            "pipelineOperator",
            {
              "proposal": "minimal"
            }
          ],
          "nullishCoalescingOperator",
          "doExpressions",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api/users.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api",
        "sourceFileName": "users.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.User = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _bcryptjs = _interopRequireDefault(require(\"bcryptjs\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _usersDAO = _interopRequireDefault(require(\"../dao/usersDAO\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar hashPassword = /*#__PURE__*/function () {\n  var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(password) {\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _bcryptjs[\"default\"].hash(password, 10);\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function hashPassword(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar User = /*#__PURE__*/function () {\n  function User() {\n    var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        name = _ref2.name,\n        email = _ref2.email,\n        password = _ref2.password,\n        _ref2$preferences = _ref2.preferences,\n        preferences = _ref2$preferences === void 0 ? {} : _ref2$preferences;\n\n    (0, _classCallCheck2[\"default\"])(this, User);\n    this.name = name;\n    this.email = email;\n    this.password = password;\n    this.preferences = preferences;\n  }\n\n  (0, _createClass2[\"default\"])(User, [{\n    key: \"toJson\",\n    value: function toJson() {\n      return {\n        name: this.name,\n        email: this.email,\n        preferences: this.preferences\n      };\n    }\n  }, {\n    key: \"comparePassword\",\n    value: function () {\n      var _comparePassword = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(plainText) {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _bcryptjs[\"default\"].compare(plainText, this.password);\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function comparePassword(_x2) {\n        return _comparePassword.apply(this, arguments);\n      }\n\n      return comparePassword;\n    }()\n  }, {\n    key: \"encoded\",\n    value: function encoded() {\n      return _jsonwebtoken[\"default\"].sign(_objectSpread({\n        exp: Math.floor(Date.now() / 1000) + 60 * 60 * 4\n      }, this.toJson()), process.env.SECRET_KEY);\n    }\n  }], [{\n    key: \"decoded\",\n    value: function () {\n      var _decoded = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(userJwt) {\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", _jsonwebtoken[\"default\"].verify(userJwt, process.env.SECRET_KEY, function (error, res) {\n                  if (error) {\n                    return {\n                      error: error\n                    };\n                  }\n\n                  return new User(res);\n                }));\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function decoded(_x3) {\n        return _decoded.apply(this, arguments);\n      }\n\n      return decoded;\n    }()\n  }]);\n  return User;\n}();\n\nexports.User = User;\n\nvar UserController = /*#__PURE__*/function () {\n  function UserController() {\n    (0, _classCallCheck2[\"default\"])(this, UserController);\n  }\n\n  (0, _createClass2[\"default\"])(UserController, null, [{\n    key: \"register\",\n    value: function () {\n      var _register = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(req, res) {\n        var userFromBody, errors, userInfo, insertResult, userFromDB, user;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                userFromBody = req.body;\n                errors = {};\n\n                if (userFromBody && userFromBody.password.length < 8) {\n                  errors.password = \"Your password must be at least 8 characters.\";\n                }\n\n                if (userFromBody && userFromBody.name.length < 3) {\n                  errors.name = \"You must specify a name of at least 3 characters.\";\n                }\n\n                if (!(Object.keys(errors).length > 0)) {\n                  _context4.next = 8;\n                  break;\n                }\n\n                res.status(400).json(errors);\n                return _context4.abrupt(\"return\");\n\n              case 8:\n                _context4.t0 = _objectSpread;\n                _context4.t1 = {};\n                _context4.t2 = userFromBody;\n                _context4.next = 13;\n                return hashPassword(userFromBody.password);\n\n              case 13:\n                _context4.t3 = _context4.sent;\n                _context4.t4 = {\n                  password: _context4.t3\n                };\n                userInfo = (0, _context4.t0)(_context4.t1, _context4.t2, _context4.t4);\n                _context4.next = 18;\n                return _usersDAO[\"default\"].addUser(userInfo);\n\n              case 18:\n                insertResult = _context4.sent;\n\n                if (!insertResult.success) {\n                  errors.email = insertResult.error;\n                }\n\n                _context4.next = 22;\n                return _usersDAO[\"default\"].getUser(userFromBody.email);\n\n              case 22:\n                userFromDB = _context4.sent;\n\n                if (!userFromDB) {\n                  errors.general = \"Internal error, please try again later\";\n                }\n\n                if (!(Object.keys(errors).length > 0)) {\n                  _context4.next = 27;\n                  break;\n                }\n\n                res.status(400).json(errors);\n                return _context4.abrupt(\"return\");\n\n              case 27:\n                user = new User(userFromDB);\n                res.json({\n                  auth_token: user.encoded(),\n                  info: user.toJson()\n                });\n                _context4.next = 34;\n                break;\n\n              case 31:\n                _context4.prev = 31;\n                _context4.t5 = _context4[\"catch\"](0);\n                res.status(500).json({\n                  error: _context4.t5\n                });\n\n              case 34:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[0, 31]]);\n      }));\n\n      function register(_x4, _x5) {\n        return _register.apply(this, arguments);\n      }\n\n      return register;\n    }()\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5(req, res, next) {\n        var _req$body, email, password, userData, user, loginResponse;\n\n        return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                _req$body = req.body, email = _req$body.email, password = _req$body.password;\n\n                if (!(!email || typeof email !== \"string\")) {\n                  _context5.next = 5;\n                  break;\n                }\n\n                res.status(400).json({\n                  error: \"Bad email format, expected string.\"\n                });\n                return _context5.abrupt(\"return\");\n\n              case 5:\n                if (!(!password || typeof password !== \"string\")) {\n                  _context5.next = 8;\n                  break;\n                }\n\n                res.status(400).json({\n                  error: \"Bad password format, expected string.\"\n                });\n                return _context5.abrupt(\"return\");\n\n              case 8:\n                _context5.next = 10;\n                return _usersDAO[\"default\"].getUser(email);\n\n              case 10:\n                userData = _context5.sent;\n\n                if (userData) {\n                  _context5.next = 14;\n                  break;\n                }\n\n                res.status(401).json({\n                  error: \"Make sure your email is correct.\"\n                });\n                return _context5.abrupt(\"return\");\n\n              case 14:\n                user = new User(userData);\n                _context5.next = 17;\n                return user.comparePassword(password);\n\n              case 17:\n                if (_context5.sent) {\n                  _context5.next = 20;\n                  break;\n                }\n\n                res.status(401).json({\n                  error: \"Make sure your password is correct.\"\n                });\n                return _context5.abrupt(\"return\");\n\n              case 20:\n                _context5.next = 22;\n                return _usersDAO[\"default\"].loginUser(user.email, user.encoded());\n\n              case 22:\n                loginResponse = _context5.sent;\n\n                if (loginResponse.success) {\n                  _context5.next = 26;\n                  break;\n                }\n\n                res.status(500).json({\n                  error: loginResponse.error\n                });\n                return _context5.abrupt(\"return\");\n\n              case 26:\n                res.json({\n                  auth_token: user.encoded(),\n                  info: user.toJson()\n                });\n                _context5.next = 33;\n                break;\n\n              case 29:\n                _context5.prev = 29;\n                _context5.t0 = _context5[\"catch\"](0);\n                res.status(400).json({\n                  error: _context5.t0\n                });\n                return _context5.abrupt(\"return\");\n\n              case 33:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[0, 29]]);\n      }));\n\n      function login(_x6, _x7, _x8) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n  }, {\n    key: \"logout\",\n    value: function () {\n      var _logout = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6(req, res) {\n        var userJwt, userObj, error, logoutResult;\n        return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.prev = 0;\n                userJwt = req.get(\"Authorization\").slice(\"Bearer \".length);\n                _context6.next = 4;\n                return User.decoded(userJwt);\n\n              case 4:\n                userObj = _context6.sent;\n                error = userObj.error;\n\n                if (!error) {\n                  _context6.next = 9;\n                  break;\n                }\n\n                res.status(401).json({\n                  error: error\n                });\n                return _context6.abrupt(\"return\");\n\n              case 9:\n                _context6.next = 11;\n                return _usersDAO[\"default\"].logoutUser(userObj.email);\n\n              case 11:\n                logoutResult = _context6.sent;\n                error = logoutResult.error;\n\n                if (!error) {\n                  _context6.next = 16;\n                  break;\n                }\n\n                res.status(500).json({\n                  error: error\n                });\n                return _context6.abrupt(\"return\");\n\n              case 16:\n                res.json(logoutResult);\n                _context6.next = 22;\n                break;\n\n              case 19:\n                _context6.prev = 19;\n                _context6.t0 = _context6[\"catch\"](0);\n                res.status(500).json(_context6.t0);\n\n              case 22:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, null, [[0, 19]]);\n      }));\n\n      function logout(_x9, _x10) {\n        return _logout.apply(this, arguments);\n      }\n\n      return logout;\n    }()\n  }, {\n    key: \"delete\",\n    value: function () {\n      var _delete2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee7(req, res) {\n        var password, userJwt, userClaim, error, user, deleteResult;\n        return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.prev = 0;\n                password = req.body.password;\n\n                if (!(!password || typeof password !== \"string\")) {\n                  _context7.next = 5;\n                  break;\n                }\n\n                res.status(400).json({\n                  error: \"Bad password format, expected string.\"\n                });\n                return _context7.abrupt(\"return\");\n\n              case 5:\n                userJwt = req.get(\"Authorization\").slice(\"Bearer \".length);\n                _context7.next = 8;\n                return User.decoded(userJwt);\n\n              case 8:\n                userClaim = _context7.sent;\n                error = userClaim.error;\n\n                if (!error) {\n                  _context7.next = 13;\n                  break;\n                }\n\n                res.status(401).json({\n                  error: error\n                });\n                return _context7.abrupt(\"return\");\n\n              case 13:\n                _context7.t0 = User;\n                _context7.next = 16;\n                return _usersDAO[\"default\"].getUser(userClaim.email);\n\n              case 16:\n                _context7.t1 = _context7.sent;\n                user = new _context7.t0(_context7.t1);\n                _context7.next = 20;\n                return user.comparePassword(password);\n\n              case 20:\n                if (_context7.sent) {\n                  _context7.next = 23;\n                  break;\n                }\n\n                res.status(401).json({\n                  error: \"Make sure your password is correct.\"\n                });\n                return _context7.abrupt(\"return\");\n\n              case 23:\n                _context7.next = 25;\n                return _usersDAO[\"default\"].deleteUser(userClaim.email);\n\n              case 25:\n                deleteResult = _context7.sent;\n                error = deleteResult.error;\n\n                if (!error) {\n                  _context7.next = 30;\n                  break;\n                }\n\n                res.status(500).json({\n                  error: error\n                });\n                return _context7.abrupt(\"return\");\n\n              case 30:\n                res.json(deleteResult);\n                _context7.next = 36;\n                break;\n\n              case 33:\n                _context7.prev = 33;\n                _context7.t2 = _context7[\"catch\"](0);\n                res.status(500).json(_context7.t2);\n\n              case 36:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, null, [[0, 33]]);\n      }));\n\n      function _delete(_x11, _x12) {\n        return _delete2.apply(this, arguments);\n      }\n\n      return _delete;\n    }()\n  }, {\n    key: \"save\",\n    value: function () {\n      var _save = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee8(req, res) {\n        var userJwt, userFromHeader, error, userFromDB, updatedUser;\n        return _regenerator[\"default\"].wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.prev = 0;\n                userJwt = req.get(\"Authorization\").slice(\"Bearer \".length);\n                _context8.next = 4;\n                return User.decoded(userJwt);\n\n              case 4:\n                userFromHeader = _context8.sent;\n                error = userFromHeader.error;\n\n                if (!error) {\n                  _context8.next = 9;\n                  break;\n                }\n\n                res.status(401).json({\n                  error: error\n                });\n                return _context8.abrupt(\"return\");\n\n              case 9:\n                _context8.next = 11;\n                return _usersDAO[\"default\"].updatePreferences(userFromHeader.email, req.body.preferences);\n\n              case 11:\n                _context8.next = 13;\n                return _usersDAO[\"default\"].getUser(userFromHeader.email);\n\n              case 13:\n                userFromDB = _context8.sent;\n                updatedUser = new User(userFromDB);\n                res.json({\n                  auth_token: updatedUser.encoded(),\n                  info: updatedUser.toJson()\n                });\n                _context8.next = 21;\n                break;\n\n              case 18:\n                _context8.prev = 18;\n                _context8.t0 = _context8[\"catch\"](0);\n                res.status(500).json(_context8.t0);\n\n              case 21:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, null, [[0, 18]]);\n      }));\n\n      function save(_x13, _x14) {\n        return _save.apply(this, arguments);\n      }\n\n      return save;\n    }() // for internal use only\n\n  }, {\n    key: \"createAdminUser\",\n    value: function () {\n      var _createAdminUser = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee9(req, res) {\n        var userFromBody, errors, userInfo, insertResult, makeAdminResponse, userFromDB, user, _jwt, loginResponse;\n\n        return _regenerator[\"default\"].wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.prev = 0;\n                userFromBody = req.body;\n                errors = {};\n\n                if (userFromBody && userFromBody.password.length < 8) {\n                  errors.password = \"Your password must be at least 8 characters.\";\n                }\n\n                if (userFromBody && userFromBody.name.length < 3) {\n                  errors.name = \"You must specify a name of at least 3 characters.\";\n                }\n\n                if (!(Object.keys(errors).length > 0)) {\n                  _context9.next = 8;\n                  break;\n                }\n\n                res.status(400).json(errors);\n                return _context9.abrupt(\"return\");\n\n              case 8:\n                _context9.t0 = _objectSpread;\n                _context9.t1 = {};\n                _context9.t2 = userFromBody;\n                _context9.next = 13;\n                return hashPassword(userFromBody.password);\n\n              case 13:\n                _context9.t3 = _context9.sent;\n                _context9.t4 = {\n                  password: _context9.t3\n                };\n                userInfo = (0, _context9.t0)(_context9.t1, _context9.t2, _context9.t4);\n                _context9.next = 18;\n                return _usersDAO[\"default\"].addUser(userInfo);\n\n              case 18:\n                insertResult = _context9.sent;\n\n                if (!insertResult.success) {\n                  errors.email = insertResult.error;\n                }\n\n                if (!(Object.keys(errors).length > 0)) {\n                  _context9.next = 23;\n                  break;\n                }\n\n                res.status(400).json(errors);\n                return _context9.abrupt(\"return\");\n\n              case 23:\n                _context9.next = 25;\n                return _usersDAO[\"default\"].makeAdmin(userFromBody.email);\n\n              case 25:\n                makeAdminResponse = _context9.sent;\n                _context9.next = 28;\n                return _usersDAO[\"default\"].getUser(userFromBody.email);\n\n              case 28:\n                userFromDB = _context9.sent;\n\n                if (!userFromDB) {\n                  errors.general = \"Internal error, please try again later\";\n                }\n\n                if (!(Object.keys(errors).length > 0)) {\n                  _context9.next = 33;\n                  break;\n                }\n\n                res.status(400).json(errors);\n                return _context9.abrupt(\"return\");\n\n              case 33:\n                user = new User(userFromDB);\n                _jwt = user.encoded();\n                _context9.next = 37;\n                return _usersDAO[\"default\"].loginUser(user.email, _jwt);\n\n              case 37:\n                loginResponse = _context9.sent;\n                res.json({\n                  auth_token: _jwt,\n                  info: user.toJson()\n                });\n                _context9.next = 44;\n                break;\n\n              case 41:\n                _context9.prev = 41;\n                _context9.t5 = _context9[\"catch\"](0);\n                res.status(500).json(_context9.t5);\n\n              case 44:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, null, [[0, 41]]);\n      }));\n\n      function createAdminUser(_x15, _x16) {\n        return _createAdminUser.apply(this, arguments);\n      }\n\n      return createAdminUser;\n    }()\n  }]);\n  return UserController;\n}();\n\nexports[\"default\"] = UserController;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "names": [
        "hashPassword",
        "password",
        "bcrypt",
        "hash",
        "User",
        "name",
        "email",
        "preferences",
        "plainText",
        "compare",
        "jwt",
        "sign",
        "exp",
        "Math",
        "floor",
        "Date",
        "now",
        "toJson",
        "process",
        "env",
        "SECRET_KEY",
        "userJwt",
        "verify",
        "error",
        "res",
        "UserController",
        "req",
        "userFromBody",
        "body",
        "errors",
        "length",
        "Object",
        "keys",
        "status",
        "json",
        "userInfo",
        "UsersDAO",
        "addUser",
        "insertResult",
        "success",
        "getUser",
        "userFromDB",
        "general",
        "user",
        "auth_token",
        "encoded",
        "info",
        "next",
        "userData",
        "comparePassword",
        "loginUser",
        "loginResponse",
        "get",
        "slice",
        "decoded",
        "userObj",
        "logoutUser",
        "logoutResult",
        "userClaim",
        "deleteUser",
        "deleteResult",
        "userFromHeader",
        "updatePreferences",
        "updatedUser",
        "makeAdmin",
        "makeAdminResponse"
      ],
      "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api",
      "sources": [
        "users.controller.js"
      ],
      "sourcesContent": [
        "import bcrypt from \"bcryptjs\"\nimport jwt from \"jsonwebtoken\"\nimport UsersDAO from \"../dao/usersDAO\"\n\nconst hashPassword = async password => await bcrypt.hash(password, 10)\n\nexport class User {\n  constructor({ name, email, password, preferences = {} } = {}) {\n    this.name = name\n    this.email = email\n    this.password = password\n    this.preferences = preferences\n  }\n  toJson() {\n    return { name: this.name, email: this.email, preferences: this.preferences }\n  }\n  async comparePassword(plainText) {\n    return await bcrypt.compare(plainText, this.password)\n  }\n  encoded() {\n    return jwt.sign(\n      {\n        exp: Math.floor(Date.now() / 1000) + 60 * 60 * 4,\n        ...this.toJson(),\n      },\n      process.env.SECRET_KEY,\n    )\n  }\n  static async decoded(userJwt) {\n    return jwt.verify(userJwt, process.env.SECRET_KEY, (error, res) => {\n      if (error) {\n        return { error }\n      }\n      return new User(res)\n    })\n  }\n}\n\nexport default class UserController {\n  static async register(req, res) {\n    try {\n      const userFromBody = req.body\n      let errors = {}\n      if (userFromBody && userFromBody.password.length < 8) {\n        errors.password = \"Your password must be at least 8 characters.\"\n      }\n      if (userFromBody && userFromBody.name.length < 3) {\n        errors.name = \"You must specify a name of at least 3 characters.\"\n      }\n\n      if (Object.keys(errors).length > 0) {\n        res.status(400).json(errors)\n        return\n      }\n\n      const userInfo = {\n        ...userFromBody,\n        password: await hashPassword(userFromBody.password),\n      }\n\n      const insertResult = await UsersDAO.addUser(userInfo)\n      if (!insertResult.success) {\n        errors.email = insertResult.error\n      }\n      const userFromDB = await UsersDAO.getUser(userFromBody.email)\n      if (!userFromDB) {\n        errors.general = \"Internal error, please try again later\"\n      }\n\n      if (Object.keys(errors).length > 0) {\n        res.status(400).json(errors)\n        return\n      }\n\n      const user = new User(userFromDB)\n\n      res.json({\n        auth_token: user.encoded(),\n        info: user.toJson(),\n      })\n    } catch (e) {\n      res.status(500).json({ error: e })\n    }\n  }\n\n  static async login(req, res, next) {\n    try {\n      const { email, password } = req.body\n      if (!email || typeof email !== \"string\") {\n        res.status(400).json({ error: \"Bad email format, expected string.\" })\n        return\n      }\n      if (!password || typeof password !== \"string\") {\n        res.status(400).json({ error: \"Bad password format, expected string.\" })\n        return\n      }\n      let userData = await UsersDAO.getUser(email)\n      if (!userData) {\n        res.status(401).json({ error: \"Make sure your email is correct.\" })\n        return\n      }\n      const user = new User(userData)\n\n      if (!(await user.comparePassword(password))) {\n        res.status(401).json({ error: \"Make sure your password is correct.\" })\n        return\n      }\n\n      const loginResponse = await UsersDAO.loginUser(user.email, user.encoded())\n      if (!loginResponse.success) {\n        res.status(500).json({ error: loginResponse.error })\n        return\n      }\n      res.json({ auth_token: user.encoded(), info: user.toJson() })\n    } catch (e) {\n      res.status(400).json({ error: e })\n      return\n    }\n  }\n\n  static async logout(req, res) {\n    try {\n      const userJwt = req.get(\"Authorization\").slice(\"Bearer \".length)\n      const userObj = await User.decoded(userJwt)\n      var { error } = userObj\n      if (error) {\n        res.status(401).json({ error })\n        return\n      }\n      const logoutResult = await UsersDAO.logoutUser(userObj.email)\n      var { error } = logoutResult\n      if (error) {\n        res.status(500).json({ error })\n        return\n      }\n      res.json(logoutResult)\n    } catch (e) {\n      res.status(500).json(e)\n    }\n  }\n\n  static async delete(req, res) {\n    try {\n      let { password } = req.body\n      if (!password || typeof password !== \"string\") {\n        res.status(400).json({ error: \"Bad password format, expected string.\" })\n        return\n      }\n      const userJwt = req.get(\"Authorization\").slice(\"Bearer \".length)\n      const userClaim = await User.decoded(userJwt)\n      var { error } = userClaim\n      if (error) {\n        res.status(401).json({ error })\n        return\n      }\n      const user = new User(await UsersDAO.getUser(userClaim.email))\n      if (!(await user.comparePassword(password))) {\n        res.status(401).json({ error: \"Make sure your password is correct.\" })\n        return\n      }\n      const deleteResult = await UsersDAO.deleteUser(userClaim.email)\n      var { error } = deleteResult\n      if (error) {\n        res.status(500).json({ error })\n        return\n      }\n      res.json(deleteResult)\n    } catch (e) {\n      res.status(500).json(e)\n    }\n  }\n\n  static async save(req, res) {\n    try {\n      const userJwt = req.get(\"Authorization\").slice(\"Bearer \".length)\n      const userFromHeader = await User.decoded(userJwt)\n      var { error } = userFromHeader\n      if (error) {\n        res.status(401).json({ error })\n        return\n      }\n\n      await UsersDAO.updatePreferences(\n        userFromHeader.email,\n        req.body.preferences,\n      )\n      const userFromDB = await UsersDAO.getUser(userFromHeader.email)\n      const updatedUser = new User(userFromDB)\n\n      res.json({\n        auth_token: updatedUser.encoded(),\n        info: updatedUser.toJson(),\n      })\n    } catch (e) {\n      res.status(500).json(e)\n    }\n  }\n\n  // for internal use only\n  static async createAdminUser(req, res) {\n    try {\n      const userFromBody = req.body\n      let errors = {}\n      if (userFromBody && userFromBody.password.length < 8) {\n        errors.password = \"Your password must be at least 8 characters.\"\n      }\n      if (userFromBody && userFromBody.name.length < 3) {\n        errors.name = \"You must specify a name of at least 3 characters.\"\n      }\n\n      if (Object.keys(errors).length > 0) {\n        res.status(400).json(errors)\n        return\n      }\n\n      const userInfo = {\n        ...userFromBody,\n        password: await hashPassword(userFromBody.password),\n      }\n\n      const insertResult = await UsersDAO.addUser(userInfo)\n      if (!insertResult.success) {\n        errors.email = insertResult.error\n      }\n\n      if (Object.keys(errors).length > 0) {\n        res.status(400).json(errors)\n        return\n      }\n\n      const makeAdminResponse = await UsersDAO.makeAdmin(userFromBody.email)\n\n      const userFromDB = await UsersDAO.getUser(userFromBody.email)\n      if (!userFromDB) {\n        errors.general = \"Internal error, please try again later\"\n      }\n\n      if (Object.keys(errors).length > 0) {\n        res.status(400).json(errors)\n        return\n      }\n\n      const user = new User(userFromDB)\n      const jwt = user.encoded()\n      const loginResponse = await UsersDAO.loginUser(user.email, jwt)\n\n      res.json({\n        auth_token: jwt,\n        info: user.toJson(),\n      })\n    } catch (e) {\n      res.status(500).json(e)\n    }\n  }\n}\n"
      ],
      "mappings": "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"
    },
    "sourceType": "script",
    "externalDependencies": {},
    "mtime": 1641016800000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js\",\"filename\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api/users.route.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"syntax-dynamic-import\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-decorators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"legacy\":true},\"externalDependencies\":[]},{\"key\":\"proposal-function-sent\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"MetaProperty\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-throw-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"UnaryExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-export-default-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-pipeline-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"proposal\":\"minimal\"},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-do-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DoExpression\":{\"exit\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.18.10": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js",
      "filename": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api/users.route.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-decorators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "legacy": true
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-function-sent",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "MetaProperty": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-throw-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "UnaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-export-default-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-pipeline-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "proposal": "minimal"
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-do-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DoExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api/users.route.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "decorators-legacy",
          "functionSent",
          "exportNamespaceFrom",
          "numericSeparator",
          "throwExpressions",
          "exportDefaultFrom",
          "logicalAssignment",
          "optionalChaining",
          [
            "pipelineOperator",
            {
              "proposal": "minimal"
            }
          ],
          "nullishCoalescingOperator",
          "doExpressions",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api/users.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api",
        "sourceFileName": "users.route.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _users = _interopRequireDefault(require(\"./users.controller\"));\n\nvar _comments = _interopRequireDefault(require(\"./comments.controller\"));\n\nvar router = new _express.Router(); // associate put, delete, and get(id)\n\nrouter.route(\"/register\").post(_users[\"default\"].register);\nrouter.route(\"/login\").post(_users[\"default\"].login);\nrouter.route(\"/logout\").post(_users[\"default\"].logout);\nrouter.route(\"/delete\")[\"delete\"](_users[\"default\"][\"delete\"]);\nrouter.route(\"/update-preferences\").put(_users[\"default\"].save);\nrouter.route(\"/comment-report\").get(_comments[\"default\"].apiCommentReport);\nrouter.route(\"/make-admin\").post(_users[\"default\"].createAdminUser);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyb3V0ZXIiLCJSb3V0ZXIiLCJyb3V0ZSIsInBvc3QiLCJ1c2Vyc0N0cmwiLCJyZWdpc3RlciIsImxvZ2luIiwibG9nb3V0IiwicHV0Iiwic2F2ZSIsImdldCIsImNvbW1lbnRzQ3RybCIsImFwaUNvbW1lbnRSZXBvcnQiLCJjcmVhdGVBZG1pblVzZXIiXSwic291cmNlUm9vdCI6Ii9Vc2Vycy9mdXNpb250ZWNoL0RvY3VtZW50cy9GdXNpb25UZWNoL00yMjAvbWZsaXgtanMvc3JjL2FwaSIsInNvdXJjZXMiOlsidXNlcnMucm91dGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVyIH0gZnJvbSBcImV4cHJlc3NcIlxuaW1wb3J0IHVzZXJzQ3RybCBmcm9tIFwiLi91c2Vycy5jb250cm9sbGVyXCJcbmltcG9ydCBjb21tZW50c0N0cmwgZnJvbSBcIi4vY29tbWVudHMuY29udHJvbGxlclwiXG5cbmNvbnN0IHJvdXRlciA9IG5ldyBSb3V0ZXIoKVxuXG4vLyBhc3NvY2lhdGUgcHV0LCBkZWxldGUsIGFuZCBnZXQoaWQpXG5yb3V0ZXIucm91dGUoXCIvcmVnaXN0ZXJcIikucG9zdCh1c2Vyc0N0cmwucmVnaXN0ZXIpXG5yb3V0ZXIucm91dGUoXCIvbG9naW5cIikucG9zdCh1c2Vyc0N0cmwubG9naW4pXG5yb3V0ZXIucm91dGUoXCIvbG9nb3V0XCIpLnBvc3QodXNlcnNDdHJsLmxvZ291dClcbnJvdXRlci5yb3V0ZShcIi9kZWxldGVcIikuZGVsZXRlKHVzZXJzQ3RybC5kZWxldGUpXG5yb3V0ZXIucm91dGUoXCIvdXBkYXRlLXByZWZlcmVuY2VzXCIpLnB1dCh1c2Vyc0N0cmwuc2F2ZSlcbnJvdXRlci5yb3V0ZShcIi9jb21tZW50LXJlcG9ydFwiKS5nZXQoY29tbWVudHNDdHJsLmFwaUNvbW1lbnRSZXBvcnQpXG5yb3V0ZXIucm91dGUoXCIvbWFrZS1hZG1pblwiKS5wb3N0KHVzZXJzQ3RybC5jcmVhdGVBZG1pblVzZXIpXG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlclxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFFQSxJQUFNQSxNQUFNLEdBQUcsSUFBSUMsZUFBSixFQUFmLEMsQ0FFQTs7QUFDQUQsTUFBTSxDQUFDRSxLQUFQLENBQWEsV0FBYixFQUEwQkMsSUFBMUIsQ0FBK0JDLGlCQUFBLENBQVVDLFFBQXpDO0FBQ0FMLE1BQU0sQ0FBQ0UsS0FBUCxDQUFhLFFBQWIsRUFBdUJDLElBQXZCLENBQTRCQyxpQkFBQSxDQUFVRSxLQUF0QztBQUNBTixNQUFNLENBQUNFLEtBQVAsQ0FBYSxTQUFiLEVBQXdCQyxJQUF4QixDQUE2QkMsaUJBQUEsQ0FBVUcsTUFBdkM7QUFDQVAsTUFBTSxDQUFDRSxLQUFQLENBQWEsU0FBYixZQUErQkUsaUJBQUEsVUFBL0I7QUFDQUosTUFBTSxDQUFDRSxLQUFQLENBQWEscUJBQWIsRUFBb0NNLEdBQXBDLENBQXdDSixpQkFBQSxDQUFVSyxJQUFsRDtBQUNBVCxNQUFNLENBQUNFLEtBQVAsQ0FBYSxpQkFBYixFQUFnQ1EsR0FBaEMsQ0FBb0NDLG9CQUFBLENBQWFDLGdCQUFqRDtBQUNBWixNQUFNLENBQUNFLEtBQVAsQ0FBYSxhQUFiLEVBQTRCQyxJQUE1QixDQUFpQ0MsaUJBQUEsQ0FBVVMsZUFBM0M7ZUFFZWIsTSJ9",
    "map": {
      "version": 3,
      "names": [
        "router",
        "Router",
        "route",
        "post",
        "usersCtrl",
        "register",
        "login",
        "logout",
        "put",
        "save",
        "get",
        "commentsCtrl",
        "apiCommentReport",
        "createAdminUser"
      ],
      "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api",
      "sources": [
        "users.route.js"
      ],
      "sourcesContent": [
        "import { Router } from \"express\"\nimport usersCtrl from \"./users.controller\"\nimport commentsCtrl from \"./comments.controller\"\n\nconst router = new Router()\n\n// associate put, delete, and get(id)\nrouter.route(\"/register\").post(usersCtrl.register)\nrouter.route(\"/login\").post(usersCtrl.login)\nrouter.route(\"/logout\").post(usersCtrl.logout)\nrouter.route(\"/delete\").delete(usersCtrl.delete)\nrouter.route(\"/update-preferences\").put(usersCtrl.save)\nrouter.route(\"/comment-report\").get(commentsCtrl.apiCommentReport)\nrouter.route(\"/make-admin\").post(usersCtrl.createAdminUser)\n\nexport default router\n"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;AACA;;AAEA,IAAMA,MAAM,GAAG,IAAIC,eAAJ,EAAf,C,CAEA;;AACAD,MAAM,CAACE,KAAP,CAAa,WAAb,EAA0BC,IAA1B,CAA+BC,iBAAA,CAAUC,QAAzC;AACAL,MAAM,CAACE,KAAP,CAAa,QAAb,EAAuBC,IAAvB,CAA4BC,iBAAA,CAAUE,KAAtC;AACAN,MAAM,CAACE,KAAP,CAAa,SAAb,EAAwBC,IAAxB,CAA6BC,iBAAA,CAAUG,MAAvC;AACAP,MAAM,CAACE,KAAP,CAAa,SAAb,YAA+BE,iBAAA,UAA/B;AACAJ,MAAM,CAACE,KAAP,CAAa,qBAAb,EAAoCM,GAApC,CAAwCJ,iBAAA,CAAUK,IAAlD;AACAT,MAAM,CAACE,KAAP,CAAa,iBAAb,EAAgCQ,GAAhC,CAAoCC,oBAAA,CAAaC,gBAAjD;AACAZ,MAAM,CAACE,KAAP,CAAa,aAAb,EAA4BC,IAA5B,CAAiCC,iBAAA,CAAUS,eAA3C;eAEeb,M"
    },
    "sourceType": "script",
    "externalDependencies": {},
    "mtime": 1641016800000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js\",\"filename\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"syntax-dynamic-import\",\"visitor\":{},\"options\":{},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-decorators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"legacy\":true},\"externalDependencies\":[]},{\"key\":\"proposal-function-sent\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"MetaProperty\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-throw-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"UnaryExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-export-default-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-pipeline-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"proposal\":\"minimal\"},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-do-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DoExpression\":{\"exit\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.18.10": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js",
      "filename": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/server.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-decorators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "legacy": true
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-function-sent",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "MetaProperty": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-throw-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "UnaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-export-default-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-pipeline-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "proposal": "minimal"
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-do-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DoExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/server.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "decorators-legacy",
          "functionSent",
          "exportNamespaceFrom",
          "numericSeparator",
          "throwExpressions",
          "exportDefaultFrom",
          "logicalAssignment",
          "optionalChaining",
          [
            "pipelineOperator",
            {
              "proposal": "minimal"
            }
          ],
          "nullishCoalescingOperator",
          "doExpressions",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _morgan = _interopRequireDefault(require(\"morgan\"));\n\nvar _movies = _interopRequireDefault(require(\"../src/api/movies.route\"));\n\nvar _users = _interopRequireDefault(require(\"../src/api/users.route\"));\n\nvar app = (0, _express[\"default\"])();\napp.use((0, _cors[\"default\"])());\nprocess.env.NODE_ENV !== \"prod\" && app.use((0, _morgan[\"default\"])(\"dev\"));\napp.use(_bodyParser[\"default\"].json());\napp.use(_bodyParser[\"default\"].urlencoded({\n  extended: true\n})); // Register api routes\n\napp.use(\"/api/v1/movies\", _movies[\"default\"]);\napp.use(\"/api/v1/user\", _users[\"default\"]);\napp.use(\"/status\", _express[\"default\"][\"static\"](\"build\"));\napp.use(\"/\", _express[\"default\"][\"static\"](\"build\"));\napp.use(\"*\", function (req, res) {\n  return res.status(404).json({\n    error: \"not found\"\n  });\n});\nvar _default = app;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhcHAiLCJleHByZXNzIiwidXNlIiwiY29ycyIsInByb2Nlc3MiLCJlbnYiLCJOT0RFX0VOViIsIm1vcmdhbiIsImJvZHlQYXJzZXIiLCJqc29uIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwibW92aWVzIiwidXNlcnMiLCJyZXEiLCJyZXMiLCJzdGF0dXMiLCJlcnJvciJdLCJzb3VyY2VSb290IjoiL1VzZXJzL2Z1c2lvbnRlY2gvRG9jdW1lbnRzL0Z1c2lvblRlY2gvTTIyMC9tZmxpeC1qcy9zcmMiLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tIFwiZXhwcmVzc1wiXG5pbXBvcnQgYm9keVBhcnNlciBmcm9tIFwiYm9keS1wYXJzZXJcIlxuaW1wb3J0IGNvcnMgZnJvbSBcImNvcnNcIlxuaW1wb3J0IG1vcmdhbiBmcm9tIFwibW9yZ2FuXCJcbmltcG9ydCBtb3ZpZXMgZnJvbSBcIi4uL3NyYy9hcGkvbW92aWVzLnJvdXRlXCJcbmltcG9ydCB1c2VycyBmcm9tIFwiLi4vc3JjL2FwaS91c2Vycy5yb3V0ZVwiXG5cbmNvbnN0IGFwcCA9IGV4cHJlc3MoKVxuXG5hcHAudXNlKGNvcnMoKSlcbnByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2RcIiAmJiBhcHAudXNlKG1vcmdhbihcImRldlwiKSlcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpXG5hcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiB0cnVlIH0pKVxuXG4vLyBSZWdpc3RlciBhcGkgcm91dGVzXG5hcHAudXNlKFwiL2FwaS92MS9tb3ZpZXNcIiwgbW92aWVzKVxuYXBwLnVzZShcIi9hcGkvdjEvdXNlclwiLCB1c2VycylcbmFwcC51c2UoXCIvc3RhdHVzXCIsIGV4cHJlc3Muc3RhdGljKFwiYnVpbGRcIikpXG5hcHAudXNlKFwiL1wiLCBleHByZXNzLnN0YXRpYyhcImJ1aWxkXCIpKVxuYXBwLnVzZShcIipcIiwgKHJlcSwgcmVzKSA9PiByZXMuc3RhdHVzKDQwNCkuanNvbih7IGVycm9yOiBcIm5vdCBmb3VuZFwiIH0pKVxuXG5leHBvcnQgZGVmYXVsdCBhcHBcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBRUEsSUFBTUEsR0FBRyxHQUFHLElBQUFDLG1CQUFBLEdBQVo7QUFFQUQsR0FBRyxDQUFDRSxHQUFKLENBQVEsSUFBQUMsZ0JBQUEsR0FBUjtBQUNBQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsUUFBWixLQUF5QixNQUF6QixJQUFtQ04sR0FBRyxDQUFDRSxHQUFKLENBQVEsSUFBQUssa0JBQUEsRUFBTyxLQUFQLENBQVIsQ0FBbkM7QUFDQVAsR0FBRyxDQUFDRSxHQUFKLENBQVFNLHNCQUFBLENBQVdDLElBQVgsRUFBUjtBQUNBVCxHQUFHLENBQUNFLEdBQUosQ0FBUU0sc0JBQUEsQ0FBV0UsVUFBWCxDQUFzQjtFQUFFQyxRQUFRLEVBQUU7QUFBWixDQUF0QixDQUFSLEUsQ0FFQTs7QUFDQVgsR0FBRyxDQUFDRSxHQUFKLENBQVEsZ0JBQVIsRUFBMEJVLGtCQUExQjtBQUNBWixHQUFHLENBQUNFLEdBQUosQ0FBUSxjQUFSLEVBQXdCVyxpQkFBeEI7QUFDQWIsR0FBRyxDQUFDRSxHQUFKLENBQVEsU0FBUixFQUFtQkQsbUJBQUEsV0FBZSxPQUFmLENBQW5CO0FBQ0FELEdBQUcsQ0FBQ0UsR0FBSixDQUFRLEdBQVIsRUFBYUQsbUJBQUEsV0FBZSxPQUFmLENBQWI7QUFDQUQsR0FBRyxDQUFDRSxHQUFKLENBQVEsR0FBUixFQUFhLFVBQUNZLEdBQUQsRUFBTUMsR0FBTjtFQUFBLE9BQWNBLEdBQUcsQ0FBQ0MsTUFBSixDQUFXLEdBQVgsRUFBZ0JQLElBQWhCLENBQXFCO0lBQUVRLEtBQUssRUFBRTtFQUFULENBQXJCLENBQWQ7QUFBQSxDQUFiO2VBRWVqQixHIn0=",
    "map": {
      "version": 3,
      "names": [
        "app",
        "express",
        "use",
        "cors",
        "process",
        "env",
        "NODE_ENV",
        "morgan",
        "bodyParser",
        "json",
        "urlencoded",
        "extended",
        "movies",
        "users",
        "req",
        "res",
        "status",
        "error"
      ],
      "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src",
      "sources": [
        "server.js"
      ],
      "sourcesContent": [
        "import express from \"express\"\nimport bodyParser from \"body-parser\"\nimport cors from \"cors\"\nimport morgan from \"morgan\"\nimport movies from \"../src/api/movies.route\"\nimport users from \"../src/api/users.route\"\n\nconst app = express()\n\napp.use(cors())\nprocess.env.NODE_ENV !== \"prod\" && app.use(morgan(\"dev\"))\napp.use(bodyParser.json())\napp.use(bodyParser.urlencoded({ extended: true }))\n\n// Register api routes\napp.use(\"/api/v1/movies\", movies)\napp.use(\"/api/v1/user\", users)\napp.use(\"/status\", express.static(\"build\"))\napp.use(\"/\", express.static(\"build\"))\napp.use(\"*\", (req, res) => res.status(404).json({ error: \"not found\" }))\n\nexport default app\n"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,GAAG,GAAG,IAAAC,mBAAA,GAAZ;AAEAD,GAAG,CAACE,GAAJ,CAAQ,IAAAC,gBAAA,GAAR;AACAC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,MAAzB,IAAmCN,GAAG,CAACE,GAAJ,CAAQ,IAAAK,kBAAA,EAAO,KAAP,CAAR,CAAnC;AACAP,GAAG,CAACE,GAAJ,CAAQM,sBAAA,CAAWC,IAAX,EAAR;AACAT,GAAG,CAACE,GAAJ,CAAQM,sBAAA,CAAWE,UAAX,CAAsB;EAAEC,QAAQ,EAAE;AAAZ,CAAtB,CAAR,E,CAEA;;AACAX,GAAG,CAACE,GAAJ,CAAQ,gBAAR,EAA0BU,kBAA1B;AACAZ,GAAG,CAACE,GAAJ,CAAQ,cAAR,EAAwBW,iBAAxB;AACAb,GAAG,CAACE,GAAJ,CAAQ,SAAR,EAAmBD,mBAAA,WAAe,OAAf,CAAnB;AACAD,GAAG,CAACE,GAAJ,CAAQ,GAAR,EAAaD,mBAAA,WAAe,OAAf,CAAb;AACAD,GAAG,CAACE,GAAJ,CAAQ,GAAR,EAAa,UAACY,GAAD,EAAMC,GAAN;EAAA,OAAcA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBP,IAAhB,CAAqB;IAAEQ,KAAK,EAAE;EAAT,CAArB,CAAd;AAAA,CAAb;eAEejB,G"
    },
    "sourceType": "script",
    "externalDependencies": {},
    "mtime": 1641016800000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js\",\"filename\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api/movies.route.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"syntax-dynamic-import\",\"visitor\":{},\"options\":{},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-decorators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"legacy\":true},\"externalDependencies\":[]},{\"key\":\"proposal-function-sent\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"MetaProperty\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-throw-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"UnaryExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-export-default-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-pipeline-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"proposal\":\"minimal\"},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-do-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DoExpression\":{\"exit\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.18.10": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js",
      "filename": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api/movies.route.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-decorators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "legacy": true
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-function-sent",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "MetaProperty": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-throw-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "UnaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-export-default-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-pipeline-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "proposal": "minimal"
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-do-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DoExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api/movies.route.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "decorators-legacy",
          "functionSent",
          "exportNamespaceFrom",
          "numericSeparator",
          "throwExpressions",
          "exportDefaultFrom",
          "logicalAssignment",
          "optionalChaining",
          [
            "pipelineOperator",
            {
              "proposal": "minimal"
            }
          ],
          "nullishCoalescingOperator",
          "doExpressions",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api/movies.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api",
        "sourceFileName": "movies.route.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _movies = _interopRequireDefault(require(\"./movies.controller\"));\n\nvar _comments = _interopRequireDefault(require(\"./comments.controller\"));\n\nvar router = new _express.Router(); // associate put, delete, and get(id)\n\nrouter.route(\"/\").get(_movies[\"default\"].apiGetMovies);\nrouter.route(\"/search\").get(_movies[\"default\"].apiSearchMovies);\nrouter.route(\"/countries\").get(_movies[\"default\"].apiGetMoviesByCountry);\nrouter.route(\"/facet-search\").get(_movies[\"default\"].apiFacetedSearch);\nrouter.route(\"/id/:id\").get(_movies[\"default\"].apiGetMovieById);\nrouter.route(\"/config-options\").get(_movies[\"default\"].getConfig);\nrouter.route(\"/comment\").post(_comments[\"default\"].apiPostComment).put(_comments[\"default\"].apiUpdateComment)[\"delete\"](_comments[\"default\"].apiDeleteComment);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyb3V0ZXIiLCJSb3V0ZXIiLCJyb3V0ZSIsImdldCIsIk1vdmllc0N0cmwiLCJhcGlHZXRNb3ZpZXMiLCJhcGlTZWFyY2hNb3ZpZXMiLCJhcGlHZXRNb3ZpZXNCeUNvdW50cnkiLCJhcGlGYWNldGVkU2VhcmNoIiwiYXBpR2V0TW92aWVCeUlkIiwiZ2V0Q29uZmlnIiwicG9zdCIsIkNvbW1lbnRzQ3RybCIsImFwaVBvc3RDb21tZW50IiwicHV0IiwiYXBpVXBkYXRlQ29tbWVudCIsImFwaURlbGV0ZUNvbW1lbnQiXSwic291cmNlUm9vdCI6Ii9Vc2Vycy9mdXNpb250ZWNoL0RvY3VtZW50cy9GdXNpb25UZWNoL00yMjAvbWZsaXgtanMvc3JjL2FwaSIsInNvdXJjZXMiOlsibW92aWVzLnJvdXRlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gXCJleHByZXNzXCJcbmltcG9ydCBNb3ZpZXNDdHJsIGZyb20gXCIuL21vdmllcy5jb250cm9sbGVyXCJcbmltcG9ydCBDb21tZW50c0N0cmwgZnJvbSBcIi4vY29tbWVudHMuY29udHJvbGxlclwiXG5cbmNvbnN0IHJvdXRlciA9IG5ldyBSb3V0ZXIoKVxuXG4vLyBhc3NvY2lhdGUgcHV0LCBkZWxldGUsIGFuZCBnZXQoaWQpXG5yb3V0ZXIucm91dGUoXCIvXCIpLmdldChNb3ZpZXNDdHJsLmFwaUdldE1vdmllcylcbnJvdXRlci5yb3V0ZShcIi9zZWFyY2hcIikuZ2V0KE1vdmllc0N0cmwuYXBpU2VhcmNoTW92aWVzKVxucm91dGVyLnJvdXRlKFwiL2NvdW50cmllc1wiKS5nZXQoTW92aWVzQ3RybC5hcGlHZXRNb3ZpZXNCeUNvdW50cnkpXG5yb3V0ZXIucm91dGUoXCIvZmFjZXQtc2VhcmNoXCIpLmdldChNb3ZpZXNDdHJsLmFwaUZhY2V0ZWRTZWFyY2gpXG5yb3V0ZXIucm91dGUoXCIvaWQvOmlkXCIpLmdldChNb3ZpZXNDdHJsLmFwaUdldE1vdmllQnlJZClcbnJvdXRlci5yb3V0ZShcIi9jb25maWctb3B0aW9uc1wiKS5nZXQoTW92aWVzQ3RybC5nZXRDb25maWcpXG5cbnJvdXRlclxuICAucm91dGUoXCIvY29tbWVudFwiKVxuICAucG9zdChDb21tZW50c0N0cmwuYXBpUG9zdENvbW1lbnQpXG4gIC5wdXQoQ29tbWVudHNDdHJsLmFwaVVwZGF0ZUNvbW1lbnQpXG4gIC5kZWxldGUoQ29tbWVudHNDdHJsLmFwaURlbGV0ZUNvbW1lbnQpXG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlclxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFFQSxJQUFNQSxNQUFNLEdBQUcsSUFBSUMsZUFBSixFQUFmLEMsQ0FFQTs7QUFDQUQsTUFBTSxDQUFDRSxLQUFQLENBQWEsR0FBYixFQUFrQkMsR0FBbEIsQ0FBc0JDLGtCQUFBLENBQVdDLFlBQWpDO0FBQ0FMLE1BQU0sQ0FBQ0UsS0FBUCxDQUFhLFNBQWIsRUFBd0JDLEdBQXhCLENBQTRCQyxrQkFBQSxDQUFXRSxlQUF2QztBQUNBTixNQUFNLENBQUNFLEtBQVAsQ0FBYSxZQUFiLEVBQTJCQyxHQUEzQixDQUErQkMsa0JBQUEsQ0FBV0cscUJBQTFDO0FBQ0FQLE1BQU0sQ0FBQ0UsS0FBUCxDQUFhLGVBQWIsRUFBOEJDLEdBQTlCLENBQWtDQyxrQkFBQSxDQUFXSSxnQkFBN0M7QUFDQVIsTUFBTSxDQUFDRSxLQUFQLENBQWEsU0FBYixFQUF3QkMsR0FBeEIsQ0FBNEJDLGtCQUFBLENBQVdLLGVBQXZDO0FBQ0FULE1BQU0sQ0FBQ0UsS0FBUCxDQUFhLGlCQUFiLEVBQWdDQyxHQUFoQyxDQUFvQ0Msa0JBQUEsQ0FBV00sU0FBL0M7QUFFQVYsTUFBTSxDQUNIRSxLQURILENBQ1MsVUFEVCxFQUVHUyxJQUZILENBRVFDLG9CQUFBLENBQWFDLGNBRnJCLEVBR0dDLEdBSEgsQ0FHT0Ysb0JBQUEsQ0FBYUcsZ0JBSHBCLFlBSVVILG9CQUFBLENBQWFJLGdCQUp2QjtlQU1laEIsTSJ9",
    "map": {
      "version": 3,
      "names": [
        "router",
        "Router",
        "route",
        "get",
        "MoviesCtrl",
        "apiGetMovies",
        "apiSearchMovies",
        "apiGetMoviesByCountry",
        "apiFacetedSearch",
        "apiGetMovieById",
        "getConfig",
        "post",
        "CommentsCtrl",
        "apiPostComment",
        "put",
        "apiUpdateComment",
        "apiDeleteComment"
      ],
      "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api",
      "sources": [
        "movies.route.js"
      ],
      "sourcesContent": [
        "import { Router } from \"express\"\nimport MoviesCtrl from \"./movies.controller\"\nimport CommentsCtrl from \"./comments.controller\"\n\nconst router = new Router()\n\n// associate put, delete, and get(id)\nrouter.route(\"/\").get(MoviesCtrl.apiGetMovies)\nrouter.route(\"/search\").get(MoviesCtrl.apiSearchMovies)\nrouter.route(\"/countries\").get(MoviesCtrl.apiGetMoviesByCountry)\nrouter.route(\"/facet-search\").get(MoviesCtrl.apiFacetedSearch)\nrouter.route(\"/id/:id\").get(MoviesCtrl.apiGetMovieById)\nrouter.route(\"/config-options\").get(MoviesCtrl.getConfig)\n\nrouter\n  .route(\"/comment\")\n  .post(CommentsCtrl.apiPostComment)\n  .put(CommentsCtrl.apiUpdateComment)\n  .delete(CommentsCtrl.apiDeleteComment)\n\nexport default router\n"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;AACA;;AAEA,IAAMA,MAAM,GAAG,IAAIC,eAAJ,EAAf,C,CAEA;;AACAD,MAAM,CAACE,KAAP,CAAa,GAAb,EAAkBC,GAAlB,CAAsBC,kBAAA,CAAWC,YAAjC;AACAL,MAAM,CAACE,KAAP,CAAa,SAAb,EAAwBC,GAAxB,CAA4BC,kBAAA,CAAWE,eAAvC;AACAN,MAAM,CAACE,KAAP,CAAa,YAAb,EAA2BC,GAA3B,CAA+BC,kBAAA,CAAWG,qBAA1C;AACAP,MAAM,CAACE,KAAP,CAAa,eAAb,EAA8BC,GAA9B,CAAkCC,kBAAA,CAAWI,gBAA7C;AACAR,MAAM,CAACE,KAAP,CAAa,SAAb,EAAwBC,GAAxB,CAA4BC,kBAAA,CAAWK,eAAvC;AACAT,MAAM,CAACE,KAAP,CAAa,iBAAb,EAAgCC,GAAhC,CAAoCC,kBAAA,CAAWM,SAA/C;AAEAV,MAAM,CACHE,KADH,CACS,UADT,EAEGS,IAFH,CAEQC,oBAAA,CAAaC,cAFrB,EAGGC,GAHH,CAGOF,oBAAA,CAAaG,gBAHpB,YAIUH,oBAAA,CAAaI,gBAJvB;eAMehB,M"
    },
    "sourceType": "script",
    "externalDependencies": {},
    "mtime": 1641016800000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js\",\"filename\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api/movies.controller.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"syntax-dynamic-import\",\"visitor\":{},\"options\":{},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-decorators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"legacy\":true},\"externalDependencies\":[]},{\"key\":\"proposal-function-sent\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"MetaProperty\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-throw-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"UnaryExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-export-default-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-pipeline-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"proposal\":\"minimal\"},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-do-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DoExpression\":{\"exit\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.18.10": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js",
      "filename": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api/movies.controller.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-decorators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "legacy": true
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-function-sent",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "MetaProperty": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-throw-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "UnaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-export-default-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-pipeline-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "proposal": "minimal"
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-do-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DoExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api/movies.controller.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "decorators-legacy",
          "functionSent",
          "exportNamespaceFrom",
          "numericSeparator",
          "throwExpressions",
          "exportDefaultFrom",
          "logicalAssignment",
          "optionalChaining",
          [
            "pipelineOperator",
            {
              "proposal": "minimal"
            }
          ],
          "nullishCoalescingOperator",
          "doExpressions",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api/movies.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api",
        "sourceFileName": "movies.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _moviesDAO = _interopRequireDefault(require(\"../dao/moviesDAO\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar MoviesController = /*#__PURE__*/function () {\n  function MoviesController() {\n    (0, _classCallCheck2[\"default\"])(this, MoviesController);\n  }\n\n  (0, _createClass2[\"default\"])(MoviesController, null, [{\n    key: \"apiGetMovies\",\n    value: function () {\n      var _apiGetMovies = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(req, res, next) {\n        var MOVIES_PER_PAGE, _yield$MoviesDAO$getM, moviesList, totalNumMovies, response;\n\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                MOVIES_PER_PAGE = 20;\n                _context.next = 3;\n                return _moviesDAO[\"default\"].getMovies();\n\n              case 3:\n                _yield$MoviesDAO$getM = _context.sent;\n                moviesList = _yield$MoviesDAO$getM.moviesList;\n                totalNumMovies = _yield$MoviesDAO$getM.totalNumMovies;\n                response = {\n                  movies: moviesList,\n                  page: 0,\n                  filters: {},\n                  entries_per_page: MOVIES_PER_PAGE,\n                  total_results: totalNumMovies\n                };\n                res.json(response);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function apiGetMovies(_x, _x2, _x3) {\n        return _apiGetMovies.apply(this, arguments);\n      }\n\n      return apiGetMovies;\n    }()\n  }, {\n    key: \"apiGetMoviesByCountry\",\n    value: function () {\n      var _apiGetMoviesByCountry = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(req, res, next) {\n        var countries, countryList, moviesList, response;\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                countries = req.query.countries == \"\" ? \"USA\" : req.query.countries;\n                countryList = Array.isArray(countries) ? countries : Array(countries);\n                _context2.next = 4;\n                return _moviesDAO[\"default\"].getMoviesByCountry(countryList);\n\n              case 4:\n                moviesList = _context2.sent;\n                response = {\n                  titles: moviesList\n                };\n                res.json(response);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function apiGetMoviesByCountry(_x4, _x5, _x6) {\n        return _apiGetMoviesByCountry.apply(this, arguments);\n      }\n\n      return apiGetMoviesByCountry;\n    }()\n  }, {\n    key: \"apiGetMovieById\",\n    value: function () {\n      var _apiGetMovieById = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(req, res, next) {\n        var id, movie, updated_type;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                id = req.params.id || {};\n                _context3.next = 4;\n                return _moviesDAO[\"default\"].getMovieByID(id);\n\n              case 4:\n                movie = _context3.sent;\n\n                if (movie) {\n                  _context3.next = 8;\n                  break;\n                }\n\n                res.status(404).json({\n                  error: \"Not found\"\n                });\n                return _context3.abrupt(\"return\");\n\n              case 8:\n                updated_type = movie.lastupdated instanceof Date ? \"Date\" : \"other\";\n                res.json({\n                  movie: movie,\n                  updated_type: updated_type\n                });\n                _context3.next = 16;\n                break;\n\n              case 12:\n                _context3.prev = 12;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.log(\"api, \".concat(_context3.t0));\n                res.status(500).json({\n                  error: _context3.t0\n                });\n\n              case 16:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 12]]);\n      }));\n\n      function apiGetMovieById(_x7, _x8, _x9) {\n        return _apiGetMovieById.apply(this, arguments);\n      }\n\n      return apiGetMovieById;\n    }()\n  }, {\n    key: \"apiSearchMovies\",\n    value: function () {\n      var _apiSearchMovies = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(req, res, next) {\n        var MOVIES_PER_PAGE, page, searchType, filters, _yield$MoviesDAO$getM2, moviesList, totalNumMovies, response;\n\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                MOVIES_PER_PAGE = 20;\n\n                try {\n                  page = req.query.page ? parseInt(req.query.page, 10) : 0;\n                } catch (e) {\n                  console.error(\"Got bad value for page:, \".concat(e));\n                  page = 0;\n                }\n\n                try {\n                  searchType = Object.keys(req.query)[0];\n                } catch (e) {\n                  console.error(\"No search keys specified: \".concat(e));\n                }\n\n                filters = {};\n                _context4.t0 = searchType;\n                _context4.next = _context4.t0 === \"genre\" ? 7 : _context4.t0 === \"cast\" ? 9 : _context4.t0 === \"text\" ? 11 : 13;\n                break;\n\n              case 7:\n                if (req.query.genre !== \"\") {\n                  filters.genre = req.query.genre;\n                }\n\n                return _context4.abrupt(\"break\", 13);\n\n              case 9:\n                if (req.query.cast !== \"\") {\n                  filters.cast = req.query.cast;\n                }\n\n                return _context4.abrupt(\"break\", 13);\n\n              case 11:\n                if (req.query.text !== \"\") {\n                  filters.text = req.query.text;\n                }\n\n                return _context4.abrupt(\"break\", 13);\n\n              case 13:\n                _context4.next = 15;\n                return _moviesDAO[\"default\"].getMovies({\n                  filters: filters,\n                  page: page,\n                  MOVIES_PER_PAGE: MOVIES_PER_PAGE\n                });\n\n              case 15:\n                _yield$MoviesDAO$getM2 = _context4.sent;\n                moviesList = _yield$MoviesDAO$getM2.moviesList;\n                totalNumMovies = _yield$MoviesDAO$getM2.totalNumMovies;\n                response = {\n                  movies: moviesList,\n                  page: page,\n                  filters: filters,\n                  entries_per_page: MOVIES_PER_PAGE,\n                  total_results: totalNumMovies\n                };\n                res.json(response);\n\n              case 20:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function apiSearchMovies(_x10, _x11, _x12) {\n        return _apiSearchMovies.apply(this, arguments);\n      }\n\n      return apiSearchMovies;\n    }()\n  }, {\n    key: \"apiFacetedSearch\",\n    value: function () {\n      var _apiFacetedSearch = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5(req, res, next) {\n        var MOVIES_PER_PAGE, page, filters, facetedSearchResult, response;\n        return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                MOVIES_PER_PAGE = 20;\n\n                try {\n                  page = req.query.page ? parseInt(req.query.page, 10) : 0;\n                } catch (e) {\n                  console.error(\"Got bad value for page, defaulting to 0: \".concat(e));\n                  page = 0;\n                }\n\n                filters = {};\n                filters = req.query.cast !== \"\" ? {\n                  cast: new RegExp(req.query.cast, \"i\")\n                } : {\n                  cast: \"Tom Hanks\"\n                };\n                _context5.next = 6;\n                return _moviesDAO[\"default\"].facetedSearch({\n                  filters: filters,\n                  page: page,\n                  MOVIES_PER_PAGE: MOVIES_PER_PAGE\n                });\n\n              case 6:\n                facetedSearchResult = _context5.sent;\n                response = {\n                  movies: facetedSearchResult.movies,\n                  facets: {\n                    runtime: facetedSearchResult.runtime,\n                    rating: facetedSearchResult.rating\n                  },\n                  page: page,\n                  filters: filters,\n                  entries_per_page: MOVIES_PER_PAGE,\n                  total_results: facetedSearchResult.count\n                };\n                res.json(response);\n\n              case 9:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function apiFacetedSearch(_x13, _x14, _x15) {\n        return _apiFacetedSearch.apply(this, arguments);\n      }\n\n      return apiFacetedSearch;\n    }()\n  }, {\n    key: \"getConfig\",\n    value: function () {\n      var _getConfig = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6(req, res, next) {\n        var _yield$MoviesDAO$getC, poolSize, wtimeout, authInfo, response;\n\n        return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return _moviesDAO[\"default\"].getConfiguration();\n\n              case 2:\n                _yield$MoviesDAO$getC = _context6.sent;\n                poolSize = _yield$MoviesDAO$getC.poolSize;\n                wtimeout = _yield$MoviesDAO$getC.wtimeout;\n                authInfo = _yield$MoviesDAO$getC.authInfo;\n\n                try {\n                  response = _objectSpread({\n                    pool_size: poolSize,\n                    wtimeout: wtimeout\n                  }, authInfo);\n                  res.json(response);\n                } catch (e) {\n                  res.status(500).json({\n                    error: e\n                  });\n                }\n\n              case 7:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function getConfig(_x16, _x17, _x18) {\n        return _getConfig.apply(this, arguments);\n      }\n\n      return getConfig;\n    }()\n  }]);\n  return MoviesController;\n}();\n\nexports[\"default\"] = MoviesController;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "names": [
        "MoviesController",
        "req",
        "res",
        "next",
        "MOVIES_PER_PAGE",
        "MoviesDAO",
        "getMovies",
        "moviesList",
        "totalNumMovies",
        "response",
        "movies",
        "page",
        "filters",
        "entries_per_page",
        "total_results",
        "json",
        "countries",
        "query",
        "countryList",
        "Array",
        "isArray",
        "getMoviesByCountry",
        "titles",
        "id",
        "params",
        "getMovieByID",
        "movie",
        "status",
        "error",
        "updated_type",
        "lastupdated",
        "Date",
        "console",
        "log",
        "parseInt",
        "e",
        "searchType",
        "Object",
        "keys",
        "genre",
        "cast",
        "text",
        "RegExp",
        "facetedSearch",
        "facetedSearchResult",
        "facets",
        "runtime",
        "rating",
        "count",
        "getConfiguration",
        "poolSize",
        "wtimeout",
        "authInfo",
        "pool_size"
      ],
      "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api",
      "sources": [
        "movies.controller.js"
      ],
      "sourcesContent": [
        "import MoviesDAO from \"../dao/moviesDAO\"\n\nexport default class MoviesController {\n  static async apiGetMovies(req, res, next) {\n    const MOVIES_PER_PAGE = 20\n    const { moviesList, totalNumMovies } = await MoviesDAO.getMovies()\n    let response = {\n      movies: moviesList,\n      page: 0,\n      filters: {},\n      entries_per_page: MOVIES_PER_PAGE,\n      total_results: totalNumMovies,\n    }\n    res.json(response)\n  }\n\n  static async apiGetMoviesByCountry(req, res, next) {\n    let countries = req.query.countries == \"\" ? \"USA\" : req.query.countries\n    let countryList = Array.isArray(countries) ? countries : Array(countries)\n    let moviesList = await MoviesDAO.getMoviesByCountry(countryList)\n    let response = {\n      titles: moviesList,\n    }\n    res.json(response)\n  }\n\n  static async apiGetMovieById(req, res, next) {\n    try {\n      let id = req.params.id || {}\n      let movie = await MoviesDAO.getMovieByID(id)\n      if (!movie) {\n        res.status(404).json({ error: \"Not found\" })\n        return\n      }\n      let updated_type = movie.lastupdated instanceof Date ? \"Date\" : \"other\"\n      res.json({ movie, updated_type })\n    } catch (e) {\n      console.log(`api, ${e}`)\n      res.status(500).json({ error: e })\n    }\n  }\n\n  static async apiSearchMovies(req, res, next) {\n    const MOVIES_PER_PAGE = 20\n    let page\n    try {\n      page = req.query.page ? parseInt(req.query.page, 10) : 0\n    } catch (e) {\n      console.error(`Got bad value for page:, ${e}`)\n      page = 0\n    }\n    let searchType\n    try {\n      searchType = Object.keys(req.query)[0]\n    } catch (e) {\n      console.error(`No search keys specified: ${e}`)\n    }\n\n    let filters = {}\n\n    switch (searchType) {\n      case \"genre\":\n        if (req.query.genre !== \"\") {\n          filters.genre = req.query.genre\n        }\n        break\n      case \"cast\":\n        if (req.query.cast !== \"\") {\n          filters.cast = req.query.cast\n        }\n        break\n      case \"text\":\n        if (req.query.text !== \"\") {\n          filters.text = req.query.text\n        }\n        break\n      default:\n      // nothing to do\n    }\n\n    const { moviesList, totalNumMovies } = await MoviesDAO.getMovies({\n      filters,\n      page,\n      MOVIES_PER_PAGE,\n    })\n\n    let response = {\n      movies: moviesList,\n      page: page,\n      filters,\n      entries_per_page: MOVIES_PER_PAGE,\n      total_results: totalNumMovies,\n    }\n\n    res.json(response)\n  }\n\n  static async apiFacetedSearch(req, res, next) {\n    const MOVIES_PER_PAGE = 20\n\n    let page\n    try {\n      page = req.query.page ? parseInt(req.query.page, 10) : 0\n    } catch (e) {\n      console.error(`Got bad value for page, defaulting to 0: ${e}`)\n      page = 0\n    }\n\n    let filters = {}\n\n    filters =\n      req.query.cast !== \"\"\n        ? { cast: new RegExp(req.query.cast, \"i\") }\n        : { cast: \"Tom Hanks\" }\n\n    const facetedSearchResult = await MoviesDAO.facetedSearch({\n      filters,\n      page,\n      MOVIES_PER_PAGE,\n    })\n\n    let response = {\n      movies: facetedSearchResult.movies,\n      facets: {\n        runtime: facetedSearchResult.runtime,\n        rating: facetedSearchResult.rating,\n      },\n      page: page,\n      filters,\n      entries_per_page: MOVIES_PER_PAGE,\n      total_results: facetedSearchResult.count,\n    }\n\n    res.json(response)\n  }\n\n  static async getConfig(req, res, next) {\n    const { poolSize, wtimeout, authInfo } = await MoviesDAO.getConfiguration()\n    try {\n      let response = {\n        pool_size: poolSize,\n        wtimeout,\n        ...authInfo,\n      }\n      res.json(response)\n    } catch (e) {\n      res.status(500).json({ error: e })\n    }\n  }\n}\n"
      ],
      "mappings": "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"
    },
    "sourceType": "script",
    "externalDependencies": {},
    "mtime": 1641016800000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js\",\"filename\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao/moviesDAO.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"syntax-dynamic-import\",\"visitor\":{},\"options\":{},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-decorators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"legacy\":true},\"externalDependencies\":[]},{\"key\":\"proposal-function-sent\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"MetaProperty\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-throw-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"UnaryExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-export-default-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-pipeline-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"proposal\":\"minimal\"},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-do-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DoExpression\":{\"exit\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.18.10": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js",
      "filename": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao/moviesDAO.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-decorators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "legacy": true
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-function-sent",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "MetaProperty": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-throw-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "UnaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-export-default-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-pipeline-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "proposal": "minimal"
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-do-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DoExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao/moviesDAO.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "decorators-legacy",
          "functionSent",
          "exportNamespaceFrom",
          "numericSeparator",
          "throwExpressions",
          "exportDefaultFrom",
          "logicalAssignment",
          "optionalChaining",
          [
            "pipelineOperator",
            {
              "proposal": "minimal"
            }
          ],
          "nullishCoalescingOperator",
          "doExpressions",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao/moviesDAO.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao",
        "sourceFileName": "moviesDAO.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _bson = require(\"bson\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar movies;\nvar mflix;\nvar DEFAULT_SORT = [[\"tomatoes.viewer.numReviews\", -1]];\n\nvar MoviesDAO = /*#__PURE__*/function () {\n  function MoviesDAO() {\n    (0, _classCallCheck2[\"default\"])(this, MoviesDAO);\n  }\n\n  (0, _createClass2[\"default\"])(MoviesDAO, null, [{\n    key: \"injectDB\",\n    value: function () {\n      var _injectDB = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(conn) {\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!movies) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                _context.prev = 2;\n                _context.next = 5;\n                return conn.db(process.env.MFLIX_NS);\n\n              case 5:\n                mflix = _context.sent;\n                _context.next = 8;\n                return conn.db(process.env.MFLIX_NS).collection(\"movies\");\n\n              case 8:\n                movies = _context.sent;\n                this.movies = movies; // this is only for testing\n\n                _context.next = 15;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](2);\n                console.error(\"Unable to establish a collection handle in moviesDAO: \".concat(_context.t0));\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 12]]);\n      }));\n\n      function injectDB(_x) {\n        return _injectDB.apply(this, arguments);\n      }\n\n      return injectDB;\n    }()\n    /**\n     * Retrieves the connection pool size, write concern and user roles on the\n     * current client.\n     * @returns {Promise<ConfigurationResult>} An object with configuration details.\n     */\n\n  }, {\n    key: \"getConfiguration\",\n    value: function () {\n      var _getConfiguration = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        var roleInfo, authInfo, _movies$s$db$serverCo, poolSize, wtimeout, response;\n\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return mflix.command({\n                  connectionStatus: 1\n                });\n\n              case 2:\n                roleInfo = _context2.sent;\n                authInfo = roleInfo.authInfo.authenticatedUserRoles[0];\n                _movies$s$db$serverCo = movies.s.db.serverConfig.s.options, poolSize = _movies$s$db$serverCo.poolSize, wtimeout = _movies$s$db$serverCo.wtimeout;\n                response = {\n                  poolSize: poolSize,\n                  wtimeout: wtimeout,\n                  authInfo: authInfo\n                };\n                return _context2.abrupt(\"return\", response);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getConfiguration() {\n        return _getConfiguration.apply(this, arguments);\n      }\n\n      return getConfiguration;\n    }()\n    /**\n     * Finds and returns movies originating from one or more countries.\n     * Returns a list of objects, each object contains a title and an _id.\n     * @param {string[]} countries - The list of countries.\n     * @returns {Promise<CountryResult>} A promise that will resolve to a list of CountryResults.\n     */\n\n  }, {\n    key: \"getMoviesByCountry\",\n    value: function () {\n      var _getMoviesByCountry = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(countries) {\n        var cursor;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return movies.find({\n                  countries: {\n                    $in: countries\n                  }\n                }).project({\n                  title: 1\n                });\n\n              case 3:\n                cursor = _context3.sent;\n                _context3.next = 10;\n                break;\n\n              case 6:\n                _context3.prev = 6;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.error(\"Unable to issue find command, \".concat(_context3.t0));\n                return _context3.abrupt(\"return\", []);\n\n              case 10:\n                return _context3.abrupt(\"return\", cursor.toArray());\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 6]]);\n      }));\n\n      function getMoviesByCountry(_x2) {\n        return _getMoviesByCountry.apply(this, arguments);\n      }\n\n      return getMoviesByCountry;\n    }()\n    /**\n     * Finds and returns movies matching a given text in their title or description.\n     * @param {string} text - The text to match with.\n     * @returns {QueryParams} The QueryParams for text search\n     */\n\n  }, {\n    key: \"textSearchQuery\",\n    value: function textSearchQuery(text) {\n      var query = {\n        $text: {\n          $search: text\n        }\n      };\n      var meta_score = {\n        $meta: \"textScore\"\n      };\n      var sort = [[\"score\", meta_score]];\n      var project = {\n        score: meta_score\n      };\n      return {\n        query: query,\n        project: project,\n        sort: sort\n      };\n    }\n    /**\n     * Finds and returns movies including one or more cast members.\n     * @param {string[]} cast - The cast members to match with.\n     * @returns {QueryParams} The QueryParams for cast search\n     */\n\n  }, {\n    key: \"castSearchQuery\",\n    value: function castSearchQuery(cast) {\n      var searchCast = Array.isArray(cast) ? cast : cast.split(\", \");\n      var query = {\n        cast: {\n          $in: searchCast\n        }\n      };\n      var project = {};\n      var sort = DEFAULT_SORT;\n      return {\n        query: query,\n        project: project,\n        sort: sort\n      };\n    }\n    /**\n     * Finds and returns movies matching a one or more genres.\n     * @param {string[]} genre - The genres to match with.\n     * @returns {QueryParams} The QueryParams for genre search\n     */\n\n  }, {\n    key: \"genreSearchQuery\",\n    value: function genreSearchQuery(genre) {\n      /**\n      Ticket: Text and Subfield Search\n         Given an array of one or more genres, construct a query that searches\n      MongoDB for movies with that genre.\n      */\n      var searchGenre = Array.isArray(genre) ? genre : genre.split(\", \"); // TODO Ticket: Text and Subfield Search\n      // Construct a query that will search for the chosen genre.\n\n      var query = {\n        'genres': {\n          $in: searchGenre\n        }\n      };\n      var project = {};\n      var sort = DEFAULT_SORT;\n      return {\n        query: query,\n        project: project,\n        sort: sort\n      };\n    }\n    /**\n     *\n     * @param {Object} filters - The search parameter to use in the query. Comes\n     * in the form of `{cast: { $in: [...castMembers]}}`\n     * @param {number} page - The page of movies to retrieve.\n     * @param {number} moviesPerPage - The number of movies to display per page.\n     * @returns {FacetedSearchReturn} FacetedSearchReturn\n     */\n\n  }, {\n    key: \"facetedSearch\",\n    value: function () {\n      var _facetedSearch = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4() {\n        var _ref,\n            _ref$filters,\n            filters,\n            _ref$page,\n            page,\n            _ref$moviesPerPage,\n            moviesPerPage,\n            matchStage,\n            sortStage,\n            countingPipeline,\n            skipStage,\n            limitStage,\n            facetStage,\n            queryPipeline,\n            results,\n            count,\n            _args4 = arguments;\n\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _ref = _args4.length > 0 && _args4[0] !== undefined ? _args4[0] : {}, _ref$filters = _ref.filters, filters = _ref$filters === void 0 ? null : _ref$filters, _ref$page = _ref.page, page = _ref$page === void 0 ? 0 : _ref$page, _ref$moviesPerPage = _ref.moviesPerPage, moviesPerPage = _ref$moviesPerPage === void 0 ? 20 : _ref$moviesPerPage;\n\n                if (!(!filters || !filters.cast)) {\n                  _context4.next = 3;\n                  break;\n                }\n\n                throw new Error(\"Must specify cast members to filter by.\");\n\n              case 3:\n                matchStage = {\n                  $match: filters\n                };\n                sortStage = {\n                  $sort: {\n                    \"tomatoes.viewer.numReviews\": -1\n                  }\n                };\n                countingPipeline = [matchStage, sortStage, {\n                  $count: \"count\"\n                }];\n                skipStage = {\n                  $skip: moviesPerPage * page\n                };\n                limitStage = {\n                  $limit: moviesPerPage\n                };\n                facetStage = {\n                  $facet: {\n                    runtime: [{\n                      $bucket: {\n                        groupBy: \"$runtime\",\n                        boundaries: [0, 60, 90, 120, 180],\n                        \"default\": \"other\",\n                        output: {\n                          count: {\n                            $sum: 1\n                          }\n                        }\n                      }\n                    }],\n                    rating: [{\n                      $bucket: {\n                        groupBy: \"$metacritic\",\n                        boundaries: [0, 50, 70, 90, 100],\n                        \"default\": \"other\",\n                        output: {\n                          count: {\n                            $sum: 1\n                          }\n                        }\n                      }\n                    }],\n                    movies: [{\n                      $addFields: {\n                        title: \"$title\"\n                      }\n                    }]\n                  }\n                };\n                /**\n                Ticket: Faceted Search\n                   Please append the skipStage, limitStage, and facetStage to the queryPipeline\n                (in that order). You can accomplish this by adding the stages directly to\n                the queryPipeline.\n                   The queryPipeline is a Javascript array, so you can use push() or concat()\n                to complete this task, but you might have to do something about `const`.\n                */\n\n                queryPipeline = [matchStage, sortStage, skipStage, limitStage, facetStage // TODO Ticket: Faceted Search\n                // Add the stages to queryPipeline in the correct order.\n                ];\n                _context4.prev = 10;\n                _context4.next = 13;\n                return movies.aggregate(queryPipeline);\n\n              case 13:\n                _context4.next = 15;\n                return _context4.sent.next();\n\n              case 15:\n                results = _context4.sent;\n                _context4.next = 18;\n                return movies.aggregate(countingPipeline);\n\n              case 18:\n                _context4.next = 20;\n                return _context4.sent.next();\n\n              case 20:\n                count = _context4.sent;\n                return _context4.abrupt(\"return\", _objectSpread({}, results, {}, count));\n\n              case 24:\n                _context4.prev = 24;\n                _context4.t0 = _context4[\"catch\"](10);\n                return _context4.abrupt(\"return\", {\n                  error: \"Results too large, be more restrictive in filter\"\n                });\n\n              case 27:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[10, 24]]);\n      }));\n\n      function facetedSearch() {\n        return _facetedSearch.apply(this, arguments);\n      }\n\n      return facetedSearch;\n    }()\n    /**\n     * Finds and returns movies by country.\n     * Returns a list of objects, each object contains a title and an _id.\n     * @param {Object} filters - The search parameters to use in the query.\n     * @param {number} page - The page of movies to retrieve.\n     * @param {number} moviesPerPage - The number of movies to display per page.\n     * @returns {GetMoviesResult} An object with movie results and total results\n     * that would match this query\n     */\n\n  }, {\n    key: \"getMovies\",\n    value: function () {\n      var _getMovies = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5() {\n        var _ref2,\n            _ref2$filters,\n            filters,\n            _ref2$page,\n            page,\n            _ref2$moviesPerPage,\n            moviesPerPage,\n            queryParams,\n            _queryParams,\n            _queryParams$query,\n            query,\n            _queryParams$project,\n            project,\n            _queryParams$sort,\n            sort,\n            cursor,\n            displayCursor,\n            moviesList,\n            totalNumMovies,\n            _args5 = arguments;\n\n        return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _ref2 = _args5.length > 0 && _args5[0] !== undefined ? _args5[0] : {}, _ref2$filters = _ref2.filters, filters = _ref2$filters === void 0 ? null : _ref2$filters, _ref2$page = _ref2.page, page = _ref2$page === void 0 ? 0 : _ref2$page, _ref2$moviesPerPage = _ref2.moviesPerPage, moviesPerPage = _ref2$moviesPerPage === void 0 ? 20 : _ref2$moviesPerPage;\n                queryParams = {};\n\n                if (filters) {\n                  if (\"text\" in filters) {\n                    queryParams = this.textSearchQuery(filters[\"text\"]);\n                  } else if (\"cast\" in filters) {\n                    queryParams = this.castSearchQuery(filters[\"cast\"]);\n                  } else if (\"genre\" in filters) {\n                    queryParams = this.genreSearchQuery(filters[\"genre\"]);\n                  }\n                }\n\n                _queryParams = queryParams, _queryParams$query = _queryParams.query, query = _queryParams$query === void 0 ? {} : _queryParams$query, _queryParams$project = _queryParams.project, project = _queryParams$project === void 0 ? {} : _queryParams$project, _queryParams$sort = _queryParams.sort, sort = _queryParams$sort === void 0 ? DEFAULT_SORT : _queryParams$sort;\n                _context5.prev = 4;\n                _context5.next = 7;\n                return movies.find(query).project(project).sort(sort);\n\n              case 7:\n                cursor = _context5.sent;\n                _context5.next = 14;\n                break;\n\n              case 10:\n                _context5.prev = 10;\n                _context5.t0 = _context5[\"catch\"](4);\n                console.error(\"Unable to issue find command, \".concat(_context5.t0));\n                return _context5.abrupt(\"return\", {\n                  moviesList: [],\n                  totalNumMovies: 0\n                });\n\n              case 14:\n                /**\n                Ticket: Paging\n                   Before this method returns back to the API, use the \"moviesPerPage\" and\n                \"page\" arguments to decide the movies to display.\n                   Paging can be implemented by using the skip() and limit() cursor methods.\n                */\n                // TODO Ticket: Paging\n                // Use the cursor to only return the movies that belong on the current page\n                displayCursor = cursor.limit(moviesPerPage).skip(moviesPerPage * page);\n                _context5.prev = 15;\n                _context5.next = 18;\n                return displayCursor.toArray();\n\n              case 18:\n                moviesList = _context5.sent;\n\n                if (!(page === 0)) {\n                  _context5.next = 25;\n                  break;\n                }\n\n                _context5.next = 22;\n                return movies.countDocuments(query);\n\n              case 22:\n                _context5.t1 = _context5.sent;\n                _context5.next = 26;\n                break;\n\n              case 25:\n                _context5.t1 = 0;\n\n              case 26:\n                totalNumMovies = _context5.t1;\n                return _context5.abrupt(\"return\", {\n                  moviesList: moviesList,\n                  totalNumMovies: totalNumMovies\n                });\n\n              case 30:\n                _context5.prev = 30;\n                _context5.t2 = _context5[\"catch\"](15);\n                console.error(\"Unable to convert cursor to array or problem counting documents, \".concat(_context5.t2));\n                return _context5.abrupt(\"return\", {\n                  moviesList: [],\n                  totalNumMovies: 0\n                });\n\n              case 34:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[4, 10], [15, 30]]);\n      }));\n\n      function getMovies() {\n        return _getMovies.apply(this, arguments);\n      }\n\n      return getMovies;\n    }()\n    /**\n     * Gets a movie by its id\n     * @param {string} id - The desired movie id, the _id in Mongo\n     * @returns {MflixMovie | null} Returns either a single movie or nothing\n     */\n\n  }, {\n    key: \"getMovieByID\",\n    value: function () {\n      var _getMovieByID = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6(id) {\n        var pipeline;\n        return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.prev = 0;\n\n                /**\n                Ticket: Get Comments\n                   Given a movie ID, build an Aggregation Pipeline to retrieve the comments\n                matching that movie's ID.\n                   The $match stage is already completed. You will need to add a $lookup\n                stage that searches the `comments` collection for the correct comments.\n                */\n                // TODO Ticket: Get Comments\n                // Implement the required pipeline.\n                pipeline = [{\n                  $match: {\n                    _id: (0, _bson.ObjectId)(id)\n                  }\n                }, {\n                  \"$lookup\": {\n                    \"from\": \"comments\",\n                    \"let\": {\n                      \"id\": \"$_id\"\n                    },\n                    \"pipeline\": [{\n                      \"$match\": {\n                        \"$expr\": {\n                          \"$eq\": [\"$movie_id\", \"$$id\"]\n                        }\n                      }\n                    }, {\n                      \"$sort\": {\n                        \"date\": -1\n                      }\n                    }],\n                    \"as\": \"comments\"\n                  }\n                }];\n                _context6.next = 4;\n                return movies.aggregate(pipeline).next();\n\n              case 4:\n                return _context6.abrupt(\"return\", _context6.sent);\n\n              case 7:\n                _context6.prev = 7;\n                _context6.t0 = _context6[\"catch\"](0);\n\n                /**\n                Ticket: Error Handling\n                      Handle the error that occurs when an invalid ID is passed to this method.\n                When this specific error is thrown, the method should return `null`.\n                */\n                // TODO Ticket: Error Handling\n                // Catch the InvalidId error by string matching, and then handle it.\n                console.error(\"Something went wrong in getMovieByID: \".concat(_context6.t0));\n\n                if (!_context6.t0.Error) {\n                  _context6.next = 12;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", null);\n\n              case 12:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, null, [[0, 7]]);\n      }));\n\n      function getMovieByID(_x3) {\n        return _getMovieByID.apply(this, arguments);\n      }\n\n      return getMovieByID;\n    }()\n  }]);\n  return MoviesDAO;\n}();\n/**\n * This is a parsed query, sort, and project bundle.\n * @typedef QueryParams\n * @property {Object} query - The specified query, transformed accordingly\n * @property {any[]} sort - The specified sort\n * @property {Object} project - The specified project, if any\n */\n\n/**\n * Represents a single country result\n * @typedef CountryResult\n * @property {string} ObjectID - The ObjectID of the movie\n * @property {string} title - The title of the movie\n */\n\n/**\n * A Movie from mflix\n * @typedef MflixMovie\n * @property {string} _id\n * @property {string} title\n * @property {number} year\n * @property {number} runtime\n * @property {Date} released\n * @property {string[]} cast\n * @property {number} metacriticd\n * @property {string} poster\n * @property {string} plot\n * @property {string} fullplot\n * @property {string|Date} lastupdated\n * @property {string} type\n * @property {string[]} languages\n * @property {string[]} directors\n * @property {string[]} writers\n * @property {IMDB} imdb\n * @property {string[]} countries\n * @property {string[]} rated\n * @property {string[]} genres\n * @property {string[]} comments\n */\n\n/**\n * IMDB subdocument\n * @typedef IMDB\n * @property {number} rating\n * @property {number} votes\n * @property {number} id\n */\n\n/**\n * Result set for getMovies method\n * @typedef GetMoviesResult\n * @property {MflixMovies[]} moviesList\n * @property {number} totalNumResults\n */\n\n/**\n * Faceted Search Return\n *\n * The type of return from faceted search. It will be a single document with\n * 3 fields: rating, runtime, and movies.\n * @typedef FacetedSearchReturn\n * @property {object} rating\n * @property {object} runtime\n * @property {MFlixMovie[]}movies\n */\n\n\nexports[\"default\"] = MoviesDAO;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "names": [
        "movies",
        "mflix",
        "DEFAULT_SORT",
        "MoviesDAO",
        "conn",
        "db",
        "process",
        "env",
        "MFLIX_NS",
        "collection",
        "console",
        "error",
        "command",
        "connectionStatus",
        "roleInfo",
        "authInfo",
        "authenticatedUserRoles",
        "s",
        "serverConfig",
        "options",
        "poolSize",
        "wtimeout",
        "response",
        "countries",
        "find",
        "$in",
        "project",
        "title",
        "cursor",
        "toArray",
        "text",
        "query",
        "$text",
        "$search",
        "meta_score",
        "$meta",
        "sort",
        "score",
        "cast",
        "searchCast",
        "Array",
        "isArray",
        "split",
        "genre",
        "searchGenre",
        "filters",
        "page",
        "moviesPerPage",
        "Error",
        "matchStage",
        "$match",
        "sortStage",
        "$sort",
        "countingPipeline",
        "$count",
        "skipStage",
        "$skip",
        "limitStage",
        "$limit",
        "facetStage",
        "$facet",
        "runtime",
        "$bucket",
        "groupBy",
        "boundaries",
        "output",
        "count",
        "$sum",
        "rating",
        "$addFields",
        "queryPipeline",
        "aggregate",
        "next",
        "results",
        "queryParams",
        "textSearchQuery",
        "castSearchQuery",
        "genreSearchQuery",
        "moviesList",
        "totalNumMovies",
        "displayCursor",
        "limit",
        "skip",
        "countDocuments",
        "id",
        "pipeline",
        "_id",
        "ObjectId"
      ],
      "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao",
      "sources": [
        "moviesDAO.js"
      ],
      "sourcesContent": [
        "import { ObjectId } from \"bson\"\n\nlet movies\nlet mflix\nconst DEFAULT_SORT = [[\"tomatoes.viewer.numReviews\", -1]]\n\nexport default class MoviesDAO {\n  static async injectDB(conn) {\n    if (movies) {\n      return\n    }\n    try {\n      mflix = await conn.db(process.env.MFLIX_NS)\n      movies = await conn.db(process.env.MFLIX_NS).collection(\"movies\")\n      this.movies = movies // this is only for testing\n    } catch (e) {\n      console.error(\n        `Unable to establish a collection handle in moviesDAO: ${e}`,\n      )\n    }\n  }\n\n  /**\n   * Retrieves the connection pool size, write concern and user roles on the\n   * current client.\n   * @returns {Promise<ConfigurationResult>} An object with configuration details.\n   */\n  static async getConfiguration() {\n    const roleInfo = await mflix.command({ connectionStatus: 1 })\n    const authInfo = roleInfo.authInfo.authenticatedUserRoles[0]\n    const { poolSize, wtimeout } = movies.s.db.serverConfig.s.options\n    let response = {\n      poolSize,\n      wtimeout,\n      authInfo,\n    }\n    return response\n  }\n\n  /**\n   * Finds and returns movies originating from one or more countries.\n   * Returns a list of objects, each object contains a title and an _id.\n   * @param {string[]} countries - The list of countries.\n   * @returns {Promise<CountryResult>} A promise that will resolve to a list of CountryResults.\n   */\n  static async getMoviesByCountry(countries) {\n    /**\n    Ticket: Projection\n\n    Write a query that matches movies with the countries in the \"countries\"\n    list, but only returns the title and _id of each movie.\n\n    Remember that in MongoDB, the $in operator can be used with a list to\n    match one or more values of a specific field.\n    */\n\n    let cursor\n    try {\n      // TODO Ticket: Projection\n      // Find movies matching the \"countries\" list, but only return the title\n      // and _id. Do not put a limit in your own implementation, the limit\n      // here is only included to avoid sending 46000 documents down the\n      // wire.\n      cursor = await movies.find({ countries: { $in: countries } }).project({ title: 1 })\n    } catch (e) {\n      console.error(`Unable to issue find command, ${e}`)\n      return []\n    }\n\n    return cursor.toArray()\n  }\n\n  /**\n   * Finds and returns movies matching a given text in their title or description.\n   * @param {string} text - The text to match with.\n   * @returns {QueryParams} The QueryParams for text search\n   */\n  static textSearchQuery(text) {\n    const query = { $text: { $search: text } }\n    const meta_score = { $meta: \"textScore\" }\n    const sort = [[\"score\", meta_score]]\n    const project = { score: meta_score }\n\n    return { query, project, sort }\n  }\n\n  /**\n   * Finds and returns movies including one or more cast members.\n   * @param {string[]} cast - The cast members to match with.\n   * @returns {QueryParams} The QueryParams for cast search\n   */\n  static castSearchQuery(cast) {\n    const searchCast = Array.isArray(cast) ? cast : cast.split(\", \")\n\n    const query = { cast: { $in: searchCast } }\n    const project = {}\n    const sort = DEFAULT_SORT\n\n    return { query, project, sort }\n  }\n\n  /**\n   * Finds and returns movies matching a one or more genres.\n   * @param {string[]} genre - The genres to match with.\n   * @returns {QueryParams} The QueryParams for genre search\n   */\n  static genreSearchQuery(genre) {\n    /**\n    Ticket: Text and Subfield Search\n  \n    Given an array of one or more genres, construct a query that searches\n    MongoDB for movies with that genre.\n    */\n\n    const searchGenre = Array.isArray(genre) ? genre : genre.split(\", \")\n\n    // TODO Ticket: Text and Subfield Search\n    // Construct a query that will search for the chosen genre.\n    const query = { 'genres': { $in: searchGenre } }\n    const project = {}\n    const sort = DEFAULT_SORT\n\n    return { query, project, sort }\n  }\n\n  /**\n   *\n   * @param {Object} filters - The search parameter to use in the query. Comes\n   * in the form of `{cast: { $in: [...castMembers]}}`\n   * @param {number} page - The page of movies to retrieve.\n   * @param {number} moviesPerPage - The number of movies to display per page.\n   * @returns {FacetedSearchReturn} FacetedSearchReturn\n   */\n  static async facetedSearch({\n    filters = null,\n    page = 0,\n    moviesPerPage = 20,\n  } = {}) {\n    if (!filters || !filters.cast) {\n      throw new Error(\"Must specify cast members to filter by.\")\n    }\n    const matchStage = { $match: filters }\n    const sortStage = { $sort: { \"tomatoes.viewer.numReviews\": -1 } }\n    const countingPipeline = [matchStage, sortStage, { $count: \"count\" }]\n    const skipStage = { $skip: moviesPerPage * page }\n    const limitStage = { $limit: moviesPerPage }\n    const facetStage = {\n      $facet: {\n        runtime: [\n          {\n            $bucket: {\n              groupBy: \"$runtime\",\n              boundaries: [0, 60, 90, 120, 180],\n              default: \"other\",\n              output: {\n                count: { $sum: 1 },\n              },\n            },\n          },\n        ],\n        rating: [\n          {\n            $bucket: {\n              groupBy: \"$metacritic\",\n              boundaries: [0, 50, 70, 90, 100],\n              default: \"other\",\n              output: {\n                count: { $sum: 1 },\n              },\n            },\n          },\n        ],\n        movies: [\n          {\n            $addFields: {\n              title: \"$title\",\n            },\n          },\n        ],\n      },\n    }\n\n    /**\n    Ticket: Faceted Search\n  \n    Please append the skipStage, limitStage, and facetStage to the queryPipeline\n    (in that order). You can accomplish this by adding the stages directly to\n    the queryPipeline.\n  \n    The queryPipeline is a Javascript array, so you can use push() or concat()\n    to complete this task, but you might have to do something about `const`.\n    */\n\n    const queryPipeline = [\n      matchStage,\n      sortStage,\n      skipStage,\n      limitStage,\n      facetStage\n      // TODO Ticket: Faceted Search\n      // Add the stages to queryPipeline in the correct order.\n    ]\n\n    try {\n      const results = await (await movies.aggregate(queryPipeline)).next()\n      const count = await (await movies.aggregate(countingPipeline)).next()\n      return {\n        ...results,\n        ...count,\n      }\n    } catch (e) {\n      return { error: \"Results too large, be more restrictive in filter\" }\n    }\n  }\n\n  /**\n   * Finds and returns movies by country.\n   * Returns a list of objects, each object contains a title and an _id.\n   * @param {Object} filters - The search parameters to use in the query.\n   * @param {number} page - The page of movies to retrieve.\n   * @param {number} moviesPerPage - The number of movies to display per page.\n   * @returns {GetMoviesResult} An object with movie results and total results\n   * that would match this query\n   */\n  static async getMovies({\n    // here's where the default parameters are set for the getMovies method\n    filters = null,\n    page = 0,\n    moviesPerPage = 20,\n  } = {}) {\n    let queryParams = {}\n    if (filters) {\n      if (\"text\" in filters) {\n        queryParams = this.textSearchQuery(filters[\"text\"])\n      } else if (\"cast\" in filters) {\n        queryParams = this.castSearchQuery(filters[\"cast\"])\n      } else if (\"genre\" in filters) {\n        queryParams = this.genreSearchQuery(filters[\"genre\"])\n      }\n    }\n\n    let { query = {}, project = {}, sort = DEFAULT_SORT } = queryParams\n    let cursor\n    try {\n      cursor = await movies\n        .find(query)\n        .project(project)\n        .sort(sort)\n    } catch (e) {\n      console.error(`Unable to issue find command, ${e}`)\n      return { moviesList: [], totalNumMovies: 0 }\n    }\n\n    /**\n    Ticket: Paging\n  \n    Before this method returns back to the API, use the \"moviesPerPage\" and\n    \"page\" arguments to decide the movies to display.\n  \n    Paging can be implemented by using the skip() and limit() cursor methods.\n    */\n\n    // TODO Ticket: Paging\n    // Use the cursor to only return the movies that belong on the current page\n    const displayCursor = cursor.limit(moviesPerPage).skip(moviesPerPage * page)\n\n    try {\n      const moviesList = await displayCursor.toArray()\n      const totalNumMovies = page === 0 ? await movies.countDocuments(query) : 0\n\n      return { moviesList, totalNumMovies }\n    } catch (e) {\n      console.error(\n        `Unable to convert cursor to array or problem counting documents, ${e}`,\n      )\n      return { moviesList: [], totalNumMovies: 0 }\n    }\n  }\n\n  /**\n   * Gets a movie by its id\n   * @param {string} id - The desired movie id, the _id in Mongo\n   * @returns {MflixMovie | null} Returns either a single movie or nothing\n   */\n  static async getMovieByID(id) {\n    try {\n      /**\n      Ticket: Get Comments\n  \n      Given a movie ID, build an Aggregation Pipeline to retrieve the comments\n      matching that movie's ID.\n  \n      The $match stage is already completed. You will need to add a $lookup\n      stage that searches the `comments` collection for the correct comments.\n      */\n\n      // TODO Ticket: Get Comments\n      // Implement the required pipeline.\n      const pipeline = [\n        {\n          $match: {\n            _id: ObjectId(id)\n          },\n        },\n        {\n          \"$lookup\": {\n            \"from\": \"comments\",\n            \"let\": { \"id\": \"$_id\" },\n            \"pipeline\": [{ \"$match\": { \"$expr\": { \"$eq\": [\"$movie_id\", \"$$id\"] } } }, { \"$sort\": { \"date\": -1 } }],\n            \"as\": \"comments\"\n          }\n        }\n      ]\n      return await movies.aggregate(pipeline).next()\n    } catch (e) {\n      /**\n      Ticket: Error Handling\n     \n      Handle the error that occurs when an invalid ID is passed to this method.\n      When this specific error is thrown, the method should return `null`.\n      */\n\n      // TODO Ticket: Error Handling\n      // Catch the InvalidId error by string matching, and then handle it.\n\n      console.error(`Something went wrong in getMovieByID: ${e}`)\n\n      if (e.Error) {\n        return null;\n      }\n\n    }\n  }\n}\n\n/**\n * This is a parsed query, sort, and project bundle.\n * @typedef QueryParams\n * @property {Object} query - The specified query, transformed accordingly\n * @property {any[]} sort - The specified sort\n * @property {Object} project - The specified project, if any\n */\n\n/**\n * Represents a single country result\n * @typedef CountryResult\n * @property {string} ObjectID - The ObjectID of the movie\n * @property {string} title - The title of the movie\n */\n\n/**\n * A Movie from mflix\n * @typedef MflixMovie\n * @property {string} _id\n * @property {string} title\n * @property {number} year\n * @property {number} runtime\n * @property {Date} released\n * @property {string[]} cast\n * @property {number} metacriticd\n * @property {string} poster\n * @property {string} plot\n * @property {string} fullplot\n * @property {string|Date} lastupdated\n * @property {string} type\n * @property {string[]} languages\n * @property {string[]} directors\n * @property {string[]} writers\n * @property {IMDB} imdb\n * @property {string[]} countries\n * @property {string[]} rated\n * @property {string[]} genres\n * @property {string[]} comments\n */\n\n/**\n * IMDB subdocument\n * @typedef IMDB\n * @property {number} rating\n * @property {number} votes\n * @property {number} id\n */\n\n/**\n * Result set for getMovies method\n * @typedef GetMoviesResult\n * @property {MflixMovies[]} moviesList\n * @property {number} totalNumResults\n */\n\n/**\n * Faceted Search Return\n *\n * The type of return from faceted search. It will be a single document with\n * 3 fields: rating, runtime, and movies.\n * @typedef FacetedSearchReturn\n * @property {object} rating\n * @property {object} runtime\n * @property {MFlixMovie[]}movies\n */\n"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAEA,IAAIA,MAAJ;AACA,IAAIC,KAAJ;AACA,IAAMC,YAAY,GAAG,CAAC,CAAC,4BAAD,EAA+B,CAAC,CAAhC,CAAD,CAArB;;IAEqBC,S;;;;;;;;qHACGC,I;;;;;qBAChBJ,M;;;;;;;;;;uBAIYI,IAAI,CAACC,EAAL,CAAQC,OAAO,CAACC,GAAR,CAAYC,QAApB,C;;;gBAAdP,K;;uBACeG,IAAI,CAACC,EAAL,CAAQC,OAAO,CAACC,GAAR,CAAYC,QAApB,EAA8BC,UAA9B,CAAyC,QAAzC,C;;;gBAAfT,M;gBACA,KAAKA,MAAL,GAAcA,MAAd,C,CAAqB;;;;;;;;gBAErBU,OAAO,CAACC,KAAR;;;;;;;;;;;;;;;;IAMJ;AACF;AACA;AACA;AACA;;;;;;;;;;;;;uBAE2BV,KAAK,CAACW,OAAN,CAAc;kBAAEC,gBAAgB,EAAE;gBAApB,CAAd,C;;;gBAAjBC,Q;gBACAC,Q,GAAWD,QAAQ,CAACC,QAAT,CAAkBC,sBAAlB,CAAyC,CAAzC,C;wCACchB,MAAM,CAACiB,CAAP,CAASZ,EAAT,CAAYa,YAAZ,CAAyBD,CAAzB,CAA2BE,O,EAAlDC,Q,yBAAAA,Q,EAAUC,Q,yBAAAA,Q;gBACdC,Q,GAAW;kBACbF,QAAQ,EAARA,QADa;kBAEbC,QAAQ,EAARA,QAFa;kBAGbN,QAAQ,EAARA;gBAHa,C;kDAKRO,Q;;;;;;;;;;;;;;;;IAGT;AACF;AACA;AACA;AACA;AACA;;;;;gIACkCC,S;;;;;;;;uBAkBbvB,MAAM,CAACwB,IAAP,CAAY;kBAAED,SAAS,EAAE;oBAAEE,GAAG,EAAEF;kBAAP;gBAAb,CAAZ,EAA+CG,OAA/C,CAAuD;kBAAEC,KAAK,EAAE;gBAAT,CAAvD,C;;;gBAAfC,M;;;;;;;gBAEAlB,OAAO,CAACC,KAAR;kDACO,E;;;kDAGFiB,MAAM,CAACC,OAAP,E;;;;;;;;;;;;;;;;IAGT;AACF;AACA;AACA;AACA;;;;oCACyBC,I,EAAM;MAC3B,IAAMC,KAAK,GAAG;QAAEC,KAAK,EAAE;UAAEC,OAAO,EAAEH;QAAX;MAAT,CAAd;MACA,IAAMI,UAAU,GAAG;QAAEC,KAAK,EAAE;MAAT,CAAnB;MACA,IAAMC,IAAI,GAAG,CAAC,CAAC,OAAD,EAAUF,UAAV,CAAD,CAAb;MACA,IAAMR,OAAO,GAAG;QAAEW,KAAK,EAAEH;MAAT,CAAhB;MAEA,OAAO;QAAEH,KAAK,EAALA,KAAF;QAASL,OAAO,EAAPA,OAAT;QAAkBU,IAAI,EAAJA;MAAlB,CAAP;IACD;IAED;AACF;AACA;AACA;AACA;;;;oCACyBE,I,EAAM;MAC3B,IAAMC,UAAU,GAAGC,KAAK,CAACC,OAAN,CAAcH,IAAd,IAAsBA,IAAtB,GAA6BA,IAAI,CAACI,KAAL,CAAW,IAAX,CAAhD;MAEA,IAAMX,KAAK,GAAG;QAAEO,IAAI,EAAE;UAAEb,GAAG,EAAEc;QAAP;MAAR,CAAd;MACA,IAAMb,OAAO,GAAG,EAAhB;MACA,IAAMU,IAAI,GAAGlC,YAAb;MAEA,OAAO;QAAE6B,KAAK,EAALA,KAAF;QAASL,OAAO,EAAPA,OAAT;QAAkBU,IAAI,EAAJA;MAAlB,CAAP;IACD;IAED;AACF;AACA;AACA;AACA;;;;qCAC0BO,K,EAAO;MAC7B;AACJ;AACA;AACA;AACA;MAGI,IAAMC,WAAW,GAAGJ,KAAK,CAACC,OAAN,CAAcE,KAAd,IAAuBA,KAAvB,GAA+BA,KAAK,CAACD,KAAN,CAAY,IAAZ,CAAnD,CAR6B,CAU7B;MACA;;MACA,IAAMX,KAAK,GAAG;QAAE,UAAU;UAAEN,GAAG,EAAEmB;QAAP;MAAZ,CAAd;MACA,IAAMlB,OAAO,GAAG,EAAhB;MACA,IAAMU,IAAI,GAAGlC,YAAb;MAEA,OAAO;QAAE6B,KAAK,EAALA,KAAF;QAASL,OAAO,EAAPA,OAAT;QAAkBU,IAAI,EAAJA;MAAlB,CAAP;IACD;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;kFAKM,E,sBAHFS,O,EAAAA,O,6BAAU,I,kCACVC,I,EAAAA,I,0BAAO,C,wCACPC,a,EAAAA,a,mCAAgB,E;;sBAEZ,CAACF,OAAD,IAAY,CAACA,OAAO,CAACP,I;;;;;sBACjB,IAAIU,KAAJ,CAAU,yCAAV,C;;;gBAEFC,U,GAAa;kBAAEC,MAAM,EAAEL;gBAAV,C;gBACbM,S,GAAY;kBAAEC,KAAK,EAAE;oBAAE,8BAA8B,CAAC;kBAAjC;gBAAT,C;gBACZC,gB,GAAmB,CAACJ,UAAD,EAAaE,SAAb,EAAwB;kBAAEG,MAAM,EAAE;gBAAV,CAAxB,C;gBACnBC,S,GAAY;kBAAEC,KAAK,EAAET,aAAa,GAAGD;gBAAzB,C;gBACZW,U,GAAa;kBAAEC,MAAM,EAAEX;gBAAV,C;gBACbY,U,GAAa;kBACjBC,MAAM,EAAE;oBACNC,OAAO,EAAE,CACP;sBACEC,OAAO,EAAE;wBACPC,OAAO,EAAE,UADF;wBAEPC,UAAU,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,GAAZ,EAAiB,GAAjB,CAFL;wBAGP,WAAS,OAHF;wBAIPC,MAAM,EAAE;0BACNC,KAAK,EAAE;4BAAEC,IAAI,EAAE;0BAAR;wBADD;sBAJD;oBADX,CADO,CADH;oBAaNC,MAAM,EAAE,CACN;sBACEN,OAAO,EAAE;wBACPC,OAAO,EAAE,aADF;wBAEPC,UAAU,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,GAAhB,CAFL;wBAGP,WAAS,OAHF;wBAIPC,MAAM,EAAE;0BACNC,KAAK,EAAE;4BAAEC,IAAI,EAAE;0BAAR;wBADD;sBAJD;oBADX,CADM,CAbF;oBAyBNnE,MAAM,EAAE,CACN;sBACEqE,UAAU,EAAE;wBACV1C,KAAK,EAAE;sBADG;oBADd,CADM;kBAzBF;gBADS,C;gBAoCnB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;gBAIU2C,a,GAAgB,CACpBrB,UADoB,EAEpBE,SAFoB,EAGpBI,SAHoB,EAIpBE,UAJoB,EAKpBE,UALoB,CAMpB;gBACA;gBAPoB,C;;;uBAWS3D,MAAM,CAACuE,SAAP,CAAiBD,aAAjB,C;;;;sCAAiCE,I;;;gBAAxDC,O;;uBACqBzE,MAAM,CAACuE,SAAP,CAAiBlB,gBAAjB,C;;;;sCAAoCmB,I;;;gBAAzDN,K;oEAEDO,O,MACAP,K;;;;;kDAGE;kBAAEvD,KAAK,EAAE;gBAAT,C;;;;;;;;;;;;;;;;IAIX;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mFAMM,E,wBAHFkC,O,EAAAA,O,8BAAU,I,qCACVC,I,EAAAA,I,2BAAO,C,2CACPC,a,EAAAA,a,oCAAgB,E;gBAEZ2B,W,GAAc,E;;gBAClB,IAAI7B,OAAJ,EAAa;kBACX,IAAI,UAAUA,OAAd,EAAuB;oBACrB6B,WAAW,GAAG,KAAKC,eAAL,CAAqB9B,OAAO,CAAC,MAAD,CAA5B,CAAd;kBACD,CAFD,MAEO,IAAI,UAAUA,OAAd,EAAuB;oBAC5B6B,WAAW,GAAG,KAAKE,eAAL,CAAqB/B,OAAO,CAAC,MAAD,CAA5B,CAAd;kBACD,CAFM,MAEA,IAAI,WAAWA,OAAf,EAAwB;oBAC7B6B,WAAW,GAAG,KAAKG,gBAAL,CAAsBhC,OAAO,CAAC,OAAD,CAA7B,CAAd;kBACD;gBACF;;+BAEuD6B,W,oCAAlD3C,K,EAAAA,K,mCAAQ,E,2DAAIL,O,EAAAA,O,qCAAU,E,0DAAIU,I,EAAAA,I,kCAAOlC,Y;;;uBAGtBF,MAAM,CAClBwB,IADY,CACPO,KADO,EAEZL,OAFY,CAEJA,OAFI,EAGZU,IAHY,CAGPA,IAHO,C;;;gBAAfR,M;;;;;;;gBAKAlB,OAAO,CAACC,KAAR;kDACO;kBAAEmE,UAAU,EAAE,EAAd;kBAAkBC,cAAc,EAAE;gBAAlC,C;;;gBAGT;AACJ;AACA;AACA;AACA;AACA;gBAII;gBACA;gBACMC,a,GAAgBpD,MAAM,CAACqD,KAAP,CAAalC,aAAb,EAA4BmC,IAA5B,CAAiCnC,aAAa,GAAGD,IAAjD,C;;;uBAGKkC,aAAa,CAACnD,OAAd,E;;;gBAAnBiD,U;;sBACiBhC,IAAI,KAAK,C;;;;;;uBAAU9C,MAAM,CAACmF,cAAP,CAAsBpD,KAAtB,C;;;;;;;;+BAA+B,C;;;gBAAnEgD,c;kDAEC;kBAAED,UAAU,EAAVA,UAAF;kBAAcC,cAAc,EAAdA;gBAAd,C;;;;;gBAEPrE,OAAO,CAACC,KAAR;kDAGO;kBAAEmE,UAAU,EAAE,EAAd;kBAAkBC,cAAc,EAAE;gBAAlC,C;;;;;;;;;;;;;;;;IAIX;AACF;AACA;AACA;AACA;;;;;0HAC4BK,E;;;;;;;;gBAEtB;AACN;AACA;AACA;AACA;AACA;AACA;gBAIM;gBACA;gBACMC,Q,GAAW,CACf;kBACEnC,MAAM,EAAE;oBACNoC,GAAG,EAAE,IAAAC,cAAA,EAASH,EAAT;kBADC;gBADV,CADe,EAMf;kBACE,WAAW;oBACT,QAAQ,UADC;oBAET,OAAO;sBAAE,MAAM;oBAAR,CAFE;oBAGT,YAAY,CAAC;sBAAE,UAAU;wBAAE,SAAS;0BAAE,OAAO,CAAC,WAAD,EAAc,MAAd;wBAAT;sBAAX;oBAAZ,CAAD,EAA8D;sBAAE,SAAS;wBAAE,QAAQ,CAAC;sBAAX;oBAAX,CAA9D,CAHH;oBAIT,MAAM;kBAJG;gBADb,CANe,C;;uBAeJpF,MAAM,CAACuE,SAAP,CAAiBc,QAAjB,EAA2Bb,IAA3B,E;;;;;;;;;gBAEb;AACN;AACA;AACA;AACA;gBAGM;gBACA;gBAEA9D,OAAO,CAACC,KAAR;;qBAEI,aAAEqC,K;;;;;kDACG,I;;;;;;;;;;;;;;;;;;;AAOf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"
    },
    "sourceType": "script",
    "externalDependencies": {},
    "mtime": 1659998125299
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js\",\"filename\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api/comments.controller.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"syntax-dynamic-import\",\"visitor\":{},\"options\":{},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-decorators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"legacy\":true},\"externalDependencies\":[]},{\"key\":\"proposal-function-sent\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"MetaProperty\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-throw-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"UnaryExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-export-default-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-pipeline-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"proposal\":\"minimal\"},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-do-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DoExpression\":{\"exit\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.18.10": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js",
      "filename": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api/comments.controller.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-decorators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "legacy": true
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-function-sent",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "MetaProperty": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-throw-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "UnaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-export-default-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-pipeline-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "proposal": "minimal"
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-do-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DoExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api/comments.controller.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "decorators-legacy",
          "functionSent",
          "exportNamespaceFrom",
          "numericSeparator",
          "throwExpressions",
          "exportDefaultFrom",
          "logicalAssignment",
          "optionalChaining",
          [
            "pipelineOperator",
            {
              "proposal": "minimal"
            }
          ],
          "nullishCoalescingOperator",
          "doExpressions",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api/comments.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api",
        "sourceFileName": "comments.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _usersDAO = _interopRequireDefault(require(\"../dao/usersDAO\"));\n\nvar _commentsDAO = _interopRequireDefault(require(\"../dao/commentsDAO\"));\n\nvar _moviesDAO = _interopRequireDefault(require(\"../dao/moviesDAO\"));\n\nvar _users = require(\"./users.controller\");\n\nvar _bson = require(\"bson\");\n\nvar CommentsController = /*#__PURE__*/function () {\n  function CommentsController() {\n    (0, _classCallCheck2[\"default\"])(this, CommentsController);\n  }\n\n  (0, _createClass2[\"default\"])(CommentsController, null, [{\n    key: \"apiPostComment\",\n    value: function () {\n      var _apiPostComment = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(req, res, next) {\n        var userJwt, user, error, movieId, comment, date, commentResponse, updatedComments;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                userJwt = req.get(\"Authorization\").slice(\"Bearer \".length);\n                _context.next = 4;\n                return _users.User.decoded(userJwt);\n\n              case 4:\n                user = _context.sent;\n                error = user.error;\n\n                if (!error) {\n                  _context.next = 9;\n                  break;\n                }\n\n                res.status(401).json({\n                  error: error\n                });\n                return _context.abrupt(\"return\");\n\n              case 9:\n                movieId = req.body.movie_id;\n                comment = req.body.comment;\n                date = new Date();\n                _context.next = 14;\n                return _commentsDAO[\"default\"].addComment((0, _bson.ObjectId)(movieId), user, comment, date);\n\n              case 14:\n                commentResponse = _context.sent;\n                _context.next = 17;\n                return _moviesDAO[\"default\"].getMovieByID(movieId);\n\n              case 17:\n                updatedComments = _context.sent;\n                res.json({\n                  status: \"success\",\n                  comments: updatedComments.comments\n                });\n                _context.next = 24;\n                break;\n\n              case 21:\n                _context.prev = 21;\n                _context.t0 = _context[\"catch\"](0);\n                res.status(500).json({\n                  e: _context.t0\n                });\n\n              case 24:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 21]]);\n      }));\n\n      function apiPostComment(_x, _x2, _x3) {\n        return _apiPostComment.apply(this, arguments);\n      }\n\n      return apiPostComment;\n    }()\n  }, {\n    key: \"apiUpdateComment\",\n    value: function () {\n      var _apiUpdateComment = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(req, res, next) {\n        var userJwt, user, error, commentId, text, date, commentResponse, movieId, updatedComments;\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                userJwt = req.get(\"Authorization\").slice(\"Bearer \".length);\n                _context2.next = 4;\n                return _users.User.decoded(userJwt);\n\n              case 4:\n                user = _context2.sent;\n                error = user.error;\n\n                if (!error) {\n                  _context2.next = 9;\n                  break;\n                }\n\n                res.status(401).json({\n                  error: error\n                });\n                return _context2.abrupt(\"return\");\n\n              case 9:\n                commentId = req.body.comment_id;\n                text = req.body.updated_comment;\n                date = new Date();\n                _context2.next = 14;\n                return _commentsDAO[\"default\"].updateComment((0, _bson.ObjectId)(commentId), user.email, text, date);\n\n              case 14:\n                commentResponse = _context2.sent;\n                error = commentResponse.error;\n\n                if (error) {\n                  res.status(400).json({\n                    error: error\n                  });\n                }\n\n                if (!(commentResponse.modifiedCount === 0)) {\n                  _context2.next = 19;\n                  break;\n                }\n\n                throw new Error(\"unable to update comment - user may not be original poster\");\n\n              case 19:\n                movieId = req.body.movie_id;\n                _context2.next = 22;\n                return _moviesDAO[\"default\"].getMovieByID(movieId);\n\n              case 22:\n                updatedComments = _context2.sent;\n                res.json({\n                  comments: updatedComments.comments\n                });\n                _context2.next = 29;\n                break;\n\n              case 26:\n                _context2.prev = 26;\n                _context2.t0 = _context2[\"catch\"](0);\n                res.status(500).json({\n                  e: _context2.t0\n                });\n\n              case 29:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 26]]);\n      }));\n\n      function apiUpdateComment(_x4, _x5, _x6) {\n        return _apiUpdateComment.apply(this, arguments);\n      }\n\n      return apiUpdateComment;\n    }()\n  }, {\n    key: \"apiDeleteComment\",\n    value: function () {\n      var _apiDeleteComment = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(req, res, next) {\n        var userJwt, user, error, commentId, userEmail, commentResponse, movieId, _yield$MoviesDAO$getM, comments;\n\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                userJwt = req.get(\"Authorization\").slice(\"Bearer \".length);\n                _context3.next = 4;\n                return _users.User.decoded(userJwt);\n\n              case 4:\n                user = _context3.sent;\n                error = user.error;\n\n                if (!error) {\n                  _context3.next = 9;\n                  break;\n                }\n\n                res.status(401).json({\n                  error: error\n                });\n                return _context3.abrupt(\"return\");\n\n              case 9:\n                commentId = req.body.comment_id;\n                userEmail = user.email;\n                _context3.next = 13;\n                return _commentsDAO[\"default\"].deleteComment((0, _bson.ObjectId)(commentId), userEmail);\n\n              case 13:\n                commentResponse = _context3.sent;\n                movieId = req.body.movie_id;\n                _context3.next = 17;\n                return _moviesDAO[\"default\"].getMovieByID(movieId);\n\n              case 17:\n                _yield$MoviesDAO$getM = _context3.sent;\n                comments = _yield$MoviesDAO$getM.comments;\n                res.json({\n                  comments: comments\n                });\n                _context3.next = 25;\n                break;\n\n              case 22:\n                _context3.prev = 22;\n                _context3.t0 = _context3[\"catch\"](0);\n                res.status(500).json({\n                  e: _context3.t0\n                });\n\n              case 25:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 22]]);\n      }));\n\n      function apiDeleteComment(_x7, _x8, _x9) {\n        return _apiDeleteComment.apply(this, arguments);\n      }\n\n      return apiDeleteComment;\n    }()\n  }, {\n    key: \"apiCommentReport\",\n    value: function () {\n      var _apiCommentReport = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(req, res, next) {\n        var userJwt, user, error, report;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                userJwt = req.get(\"Authorization\").slice(\"Bearer \".length);\n                _context4.next = 4;\n                return _users.User.decoded(userJwt);\n\n              case 4:\n                user = _context4.sent;\n                error = user.error;\n\n                if (!error) {\n                  _context4.next = 9;\n                  break;\n                }\n\n                res.status(401).json({\n                  error: error\n                });\n                return _context4.abrupt(\"return\");\n\n              case 9:\n                if (!_usersDAO[\"default\"].checkAdmin(user.email)) {\n                  _context4.next = 15;\n                  break;\n                }\n\n                _context4.next = 12;\n                return _commentsDAO[\"default\"].mostActiveCommenters();\n\n              case 12:\n                report = _context4.sent;\n                res.json({\n                  report: report\n                });\n                return _context4.abrupt(\"return\");\n\n              case 15:\n                res.status(401).json({\n                  status: \"fail\"\n                });\n                _context4.next = 21;\n                break;\n\n              case 18:\n                _context4.prev = 18;\n                _context4.t0 = _context4[\"catch\"](0);\n                res.status(500).json({\n                  e: _context4.t0\n                });\n\n              case 21:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[0, 18]]);\n      }));\n\n      function apiCommentReport(_x10, _x11, _x12) {\n        return _apiCommentReport.apply(this, arguments);\n      }\n\n      return apiCommentReport;\n    }()\n  }]);\n  return CommentsController;\n}();\n\nexports[\"default\"] = CommentsController;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "names": [
        "CommentsController",
        "req",
        "res",
        "next",
        "userJwt",
        "get",
        "slice",
        "length",
        "User",
        "decoded",
        "user",
        "error",
        "status",
        "json",
        "movieId",
        "body",
        "movie_id",
        "comment",
        "date",
        "Date",
        "CommentsDAO",
        "addComment",
        "ObjectId",
        "commentResponse",
        "MoviesDAO",
        "getMovieByID",
        "updatedComments",
        "comments",
        "e",
        "commentId",
        "comment_id",
        "text",
        "updated_comment",
        "updateComment",
        "email",
        "modifiedCount",
        "Error",
        "userEmail",
        "deleteComment",
        "UsersDAO",
        "checkAdmin",
        "mostActiveCommenters",
        "report"
      ],
      "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api",
      "sources": [
        "comments.controller.js"
      ],
      "sourcesContent": [
        "import UsersDAO from \"../dao/usersDAO\"\nimport CommentsDAO from \"../dao/commentsDAO\"\nimport MoviesDAO from \"../dao/moviesDAO\"\nimport { User } from \"./users.controller\"\nimport { ObjectId } from \"bson\"\n\nexport default class CommentsController {\n  static async apiPostComment(req, res, next) {\n    try {\n      const userJwt = req.get(\"Authorization\").slice(\"Bearer \".length)\n      const user = await User.decoded(userJwt)\n      var { error } = user\n      if (error) {\n        res.status(401).json({ error })\n        return\n      }\n\n      const movieId = req.body.movie_id\n      const comment = req.body.comment\n      const date = new Date()\n\n      const commentResponse = await CommentsDAO.addComment(\n        ObjectId(movieId),\n        user,\n        comment,\n        date,\n      )\n\n      const updatedComments = await MoviesDAO.getMovieByID(movieId)\n\n      res.json({ status: \"success\", comments: updatedComments.comments })\n    } catch (e) {\n      res.status(500).json({ e })\n    }\n  }\n\n  static async apiUpdateComment(req, res, next) {\n    try {\n      const userJwt = req.get(\"Authorization\").slice(\"Bearer \".length)\n      const user = await User.decoded(userJwt)\n      var { error } = user\n      if (error) {\n        res.status(401).json({ error })\n        return\n      }\n\n      const commentId = req.body.comment_id\n      const text = req.body.updated_comment\n      const date = new Date()\n\n      const commentResponse = await CommentsDAO.updateComment(\n        ObjectId(commentId),\n        user.email,\n        text,\n        date,\n      )\n\n      var { error } = commentResponse\n      if (error) {\n        res.status(400).json({ error })\n      }\n\n      if (commentResponse.modifiedCount === 0) {\n        throw new Error(\n          \"unable to update comment - user may not be original poster\",\n        )\n      }\n\n      const movieId = req.body.movie_id\n      const updatedComments = await MoviesDAO.getMovieByID(movieId)\n\n      res.json({ comments: updatedComments.comments })\n    } catch (e) {\n      res.status(500).json({ e })\n    }\n  }\n\n  static async apiDeleteComment(req, res, next) {\n    try {\n      const userJwt = req.get(\"Authorization\").slice(\"Bearer \".length)\n      const user = await User.decoded(userJwt)\n      var { error } = user\n      if (error) {\n        res.status(401).json({ error })\n        return\n      }\n\n      const commentId = req.body.comment_id\n      const userEmail = user.email\n      const commentResponse = await CommentsDAO.deleteComment(\n        ObjectId(commentId),\n        userEmail,\n      )\n\n      const movieId = req.body.movie_id\n\n      const { comments } = await MoviesDAO.getMovieByID(movieId)\n      res.json({ comments })\n    } catch (e) {\n      res.status(500).json({ e })\n    }\n  }\n\n  static async apiCommentReport(req, res, next) {\n    try {\n      const userJwt = req.get(\"Authorization\").slice(\"Bearer \".length)\n      const user = await User.decoded(userJwt)\n      var { error } = user\n      if (error) {\n        res.status(401).json({ error })\n        return\n      }\n\n      if (UsersDAO.checkAdmin(user.email)) {\n        const report = await CommentsDAO.mostActiveCommenters()\n        res.json({ report })\n        return\n      }\n\n      res.status(401).json({ status: \"fail\" })\n    } catch (e) {\n      res.status(500).json({ e })\n    }\n  }\n}\n"
      ],
      "mappings": "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"
    },
    "sourceType": "script",
    "externalDependencies": {},
    "mtime": 1641016800000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js\",\"filename\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao/usersDAO.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"syntax-dynamic-import\",\"visitor\":{},\"options\":{},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-decorators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"legacy\":true},\"externalDependencies\":[]},{\"key\":\"proposal-function-sent\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"MetaProperty\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-throw-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"UnaryExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-export-default-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-pipeline-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"proposal\":\"minimal\"},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-do-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DoExpression\":{\"exit\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.18.10": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js",
      "filename": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao/usersDAO.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-decorators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "legacy": true
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-function-sent",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "MetaProperty": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-throw-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "UnaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-export-default-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-pipeline-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "proposal": "minimal"
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-do-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DoExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao/usersDAO.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "decorators-legacy",
          "functionSent",
          "exportNamespaceFrom",
          "numericSeparator",
          "throwExpressions",
          "exportDefaultFrom",
          "logicalAssignment",
          "optionalChaining",
          [
            "pipelineOperator",
            {
              "proposal": "minimal"
            }
          ],
          "nullishCoalescingOperator",
          "doExpressions",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao/usersDAO.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao",
        "sourceFileName": "usersDAO.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar users;\nvar sessions;\n\nvar UsersDAO = /*#__PURE__*/function () {\n  function UsersDAO() {\n    (0, _classCallCheck2[\"default\"])(this, UsersDAO);\n  }\n\n  (0, _createClass2[\"default\"])(UsersDAO, null, [{\n    key: \"injectDB\",\n    value: function () {\n      var _injectDB = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(conn) {\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(users && sessions)) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                _context.prev = 2;\n                _context.next = 5;\n                return conn.db(process.env.MFLIX_NS).collection(\"users\");\n\n              case 5:\n                users = _context.sent;\n                _context.next = 8;\n                return conn.db(process.env.MFLIX_NS).collection(\"sessions\");\n\n              case 8:\n                sessions = _context.sent;\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](2);\n                console.error(\"Unable to establish collection handles in userDAO: \".concat(_context.t0));\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 11]]);\n      }));\n\n      function injectDB(_x) {\n        return _injectDB.apply(this, arguments);\n      }\n\n      return injectDB;\n    }()\n    /**\n    Ticket: User Management\n     For this ticket, you will need to implement the following five methods:\n     - getUser\n    - addUser\n    - loginUser\n    - logoutUser\n    - getUserSession\n     You can find these methods below this comment. Make sure to read the comments\n    in each method to better understand the implementation.\n     The method deleteUser is already given to you.\n    */\n\n    /**\n     * Finds a user in the `users` collection\n     * @param {string} email - The email of the desired user\n     * @returns {Object | null} Returns either a single user or nothing\n     */\n\n  }, {\n    key: \"getUser\",\n    value: function () {\n      var _getUser = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(email) {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return users.findOne({\n                  email: email\n                });\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getUser(_x2) {\n        return _getUser.apply(this, arguments);\n      }\n\n      return getUser;\n    }()\n    /**\n     * Adds a user to the `users` collection\n     * @param {UserInfo} userInfo - The information of the user to add\n     * @returns {DAOResponse} Returns either a \"success\" or an \"error\" Object\n     */\n\n  }, {\n    key: \"addUser\",\n    value: function () {\n      var _addUser = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(userInfo) {\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return users.insertOne({\n                  name: userInfo.name,\n                  email: userInfo.email,\n                  password: userInfo.password\n                });\n\n              case 3:\n                return _context3.abrupt(\"return\", {\n                  success: true\n                });\n\n              case 6:\n                _context3.prev = 6;\n                _context3.t0 = _context3[\"catch\"](0);\n\n                if (!String(_context3.t0).startsWith(\"MongoError: E11000 duplicate key error\")) {\n                  _context3.next = 10;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", {\n                  error: \"A user with the given email already exists.\"\n                });\n\n              case 10:\n                console.error(\"Error occurred while adding new user, \".concat(_context3.t0, \".\"));\n                return _context3.abrupt(\"return\", {\n                  error: _context3.t0\n                });\n\n              case 12:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 6]]);\n      }));\n\n      function addUser(_x3) {\n        return _addUser.apply(this, arguments);\n      }\n\n      return addUser;\n    }()\n    /**\n     * Adds a user to the `sessions` collection\n     * @param {string} email - The email of the user to login\n     * @param {string} jwt - A JSON web token representing the user's claims\n     * @returns {DAOResponse} Returns either a \"success\" or an \"error\" Object\n     */\n\n  }, {\n    key: \"loginUser\",\n    value: function () {\n      var _loginUser = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(email, jwt) {\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return sessions.updateOne({\n                  email: email\n                }, {\n                  $set: {\n                    jwt: jwt\n                  }\n                }, {\n                  $upsert: true\n                });\n\n              case 3:\n                return _context4.abrupt(\"return\", {\n                  success: true\n                });\n\n              case 6:\n                _context4.prev = 6;\n                _context4.t0 = _context4[\"catch\"](0);\n                console.error(\"Error occurred while logging in user, \".concat(_context4.t0));\n                return _context4.abrupt(\"return\", {\n                  error: _context4.t0\n                });\n\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[0, 6]]);\n      }));\n\n      function loginUser(_x4, _x5) {\n        return _loginUser.apply(this, arguments);\n      }\n\n      return loginUser;\n    }()\n    /**\n     * Removes a user from the `sessons` collection\n     * @param {string} email - The email of the user to logout\n     * @returns {DAOResponse} Returns either a \"success\" or an \"error\" Object\n     */\n\n  }, {\n    key: \"logoutUser\",\n    value: function () {\n      var _logoutUser = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5(email) {\n        return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                _context5.next = 3;\n                return sessions.deleteOne({\n                  email: email\n                });\n\n              case 3:\n                return _context5.abrupt(\"return\", {\n                  success: true\n                });\n\n              case 6:\n                _context5.prev = 6;\n                _context5.t0 = _context5[\"catch\"](0);\n                console.error(\"Error occurred while logging out user, \".concat(_context5.t0));\n                return _context5.abrupt(\"return\", {\n                  error: _context5.t0\n                });\n\n              case 10:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[0, 6]]);\n      }));\n\n      function logoutUser(_x6) {\n        return _logoutUser.apply(this, arguments);\n      }\n\n      return logoutUser;\n    }()\n    /**\n     * Gets a user from the `sessions` collection\n     * @param {string} email - The email of the user to search for in `sessions`\n     * @returns {Object | null} Returns a user session Object, an \"error\" Object\n     * if something went wrong, or null if user was not found.\n     */\n\n  }, {\n    key: \"getUserSession\",\n    value: function () {\n      var _getUserSession = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6(email) {\n        return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.prev = 0;\n                return _context6.abrupt(\"return\", sessions.findOne({\n                  email: email\n                }));\n\n              case 4:\n                _context6.prev = 4;\n                _context6.t0 = _context6[\"catch\"](0);\n                console.error(\"Error occurred while retrieving user session, \".concat(_context6.t0));\n                return _context6.abrupt(\"return\", null);\n\n              case 8:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, null, [[0, 4]]);\n      }));\n\n      function getUserSession(_x7) {\n        return _getUserSession.apply(this, arguments);\n      }\n\n      return getUserSession;\n    }()\n    /**\n     * Removes a user from the `sessions` and `users` collections\n     * @param {string} email - The email of the user to delete\n     * @returns {DAOResponse} Returns either a \"success\" or an \"error\" Object\n     */\n\n  }, {\n    key: \"deleteUser\",\n    value: function () {\n      var _deleteUser = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee7(email) {\n        return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.prev = 0;\n                _context7.next = 3;\n                return users.deleteOne({\n                  email: email\n                });\n\n              case 3:\n                _context7.next = 5;\n                return sessions.deleteOne({\n                  user_id: email\n                });\n\n              case 5:\n                _context7.next = 7;\n                return this.getUser(email);\n\n              case 7:\n                _context7.t0 = !_context7.sent;\n\n                if (!_context7.t0) {\n                  _context7.next = 12;\n                  break;\n                }\n\n                _context7.next = 11;\n                return this.getUserSession(email);\n\n              case 11:\n                _context7.t0 = !_context7.sent;\n\n              case 12:\n                if (!_context7.t0) {\n                  _context7.next = 16;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\", {\n                  success: true\n                });\n\n              case 16:\n                console.error(\"Deletion unsuccessful\");\n                return _context7.abrupt(\"return\", {\n                  error: \"Deletion unsuccessful\"\n                });\n\n              case 18:\n                _context7.next = 24;\n                break;\n\n              case 20:\n                _context7.prev = 20;\n                _context7.t1 = _context7[\"catch\"](0);\n                console.error(\"Error occurred while deleting user, \".concat(_context7.t1));\n                return _context7.abrupt(\"return\", {\n                  error: _context7.t1\n                });\n\n              case 24:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this, [[0, 20]]);\n      }));\n\n      function deleteUser(_x8) {\n        return _deleteUser.apply(this, arguments);\n      }\n\n      return deleteUser;\n    }()\n    /**\n     * Given a user's email and an object of new preferences, update that user's\n     * data to include those preferences.\n     * @param {string} email - The email of the user to update.\n     * @param {Object} preferences - The preferences to include in the user's data.\n     * @returns {DAOResponse}\n     */\n\n  }, {\n    key: \"updatePreferences\",\n    value: function () {\n      var _updatePreferences = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee8(email, preferences) {\n        var updateResponse;\n        return _regenerator[\"default\"].wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.prev = 0;\n\n                /**\n                Ticket: User Preferences\n                 Update the \"preferences\" field in the corresponding user's document to\n                reflect the new information in preferences.\n                */\n                preferences = preferences || {}; // TODO Ticket: User Preferences\n                // Use the data in \"preferences\" to update the user's preferences.\n\n                _context8.next = 4;\n                return users.updateOne({\n                  email: email\n                }, {\n                  $set: {\n                    preferences: preferences\n                  }\n                });\n\n              case 4:\n                updateResponse = _context8.sent;\n\n                if (!(updateResponse.matchedCount === 0)) {\n                  _context8.next = 7;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\", {\n                  error: \"No user found with that email\"\n                });\n\n              case 7:\n                return _context8.abrupt(\"return\", updateResponse);\n\n              case 10:\n                _context8.prev = 10;\n                _context8.t0 = _context8[\"catch\"](0);\n                console.error(\"An error occurred while updating this user's preferences, \".concat(_context8.t0));\n                return _context8.abrupt(\"return\", {\n                  error: _context8.t0\n                });\n\n              case 14:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, null, [[0, 10]]);\n      }));\n\n      function updatePreferences(_x9, _x10) {\n        return _updatePreferences.apply(this, arguments);\n      }\n\n      return updatePreferences;\n    }()\n  }, {\n    key: \"checkAdmin\",\n    value: function () {\n      var _checkAdmin = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee9(email) {\n        var _yield$this$getUser, isAdmin;\n\n        return _regenerator[\"default\"].wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.prev = 0;\n                _context9.next = 3;\n                return this.getUser(email);\n\n              case 3:\n                _yield$this$getUser = _context9.sent;\n                isAdmin = _yield$this$getUser.isAdmin;\n                return _context9.abrupt(\"return\", isAdmin || false);\n\n              case 8:\n                _context9.prev = 8;\n                _context9.t0 = _context9[\"catch\"](0);\n                return _context9.abrupt(\"return\", {\n                  error: _context9.t0\n                });\n\n              case 11:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this, [[0, 8]]);\n      }));\n\n      function checkAdmin(_x11) {\n        return _checkAdmin.apply(this, arguments);\n      }\n\n      return checkAdmin;\n    }()\n  }, {\n    key: \"makeAdmin\",\n    value: function () {\n      var _makeAdmin = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee10(email) {\n        var updateResponse;\n        return _regenerator[\"default\"].wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.prev = 0;\n                updateResponse = users.updateOne({\n                  email: email\n                }, {\n                  $set: {\n                    isAdmin: true\n                  }\n                });\n                return _context10.abrupt(\"return\", updateResponse);\n\n              case 5:\n                _context10.prev = 5;\n                _context10.t0 = _context10[\"catch\"](0);\n                return _context10.abrupt(\"return\", {\n                  error: _context10.t0\n                });\n\n              case 8:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, null, [[0, 5]]);\n      }));\n\n      function makeAdmin(_x12) {\n        return _makeAdmin.apply(this, arguments);\n      }\n\n      return makeAdmin;\n    }()\n  }]);\n  return UsersDAO;\n}();\n/**\n * Parameter passed to addUser method\n * @typedef UserInfo\n * @property {string} name\n * @property {string} email\n * @property {string} password\n */\n\n/**\n * Success/Error return object\n * @typedef DAOResponse\n * @property {boolean} [success] - Success\n * @property {string} [error] - Error\n */\n\n\nexports[\"default\"] = UsersDAO;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "names": [
        "users",
        "sessions",
        "UsersDAO",
        "conn",
        "db",
        "process",
        "env",
        "MFLIX_NS",
        "collection",
        "console",
        "error",
        "email",
        "findOne",
        "userInfo",
        "insertOne",
        "name",
        "password",
        "success",
        "String",
        "startsWith",
        "jwt",
        "updateOne",
        "$set",
        "$upsert",
        "deleteOne",
        "user_id",
        "getUser",
        "getUserSession",
        "preferences",
        "updateResponse",
        "matchedCount",
        "isAdmin"
      ],
      "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao",
      "sources": [
        "usersDAO.js"
      ],
      "sourcesContent": [
        "let users\nlet sessions\n\nexport default class UsersDAO {\n  static async injectDB(conn) {\n    if (users && sessions) {\n      return\n    }\n    try {\n      users = await conn.db(process.env.MFLIX_NS).collection(\"users\")\n      sessions = await conn.db(process.env.MFLIX_NS).collection(\"sessions\")\n    } catch (e) {\n      console.error(`Unable to establish collection handles in userDAO: ${e}`)\n    }\n  }\n\n  /**\n  Ticket: User Management\n\n  For this ticket, you will need to implement the following five methods:\n\n  - getUser\n  - addUser\n  - loginUser\n  - logoutUser\n  - getUserSession\n\n  You can find these methods below this comment. Make sure to read the comments\n  in each method to better understand the implementation.\n\n  The method deleteUser is already given to you.\n  */\n\n  /**\n   * Finds a user in the `users` collection\n   * @param {string} email - The email of the desired user\n   * @returns {Object | null} Returns either a single user or nothing\n   */\n  static async getUser(email) {\n    // TODO Ticket: User Management\n    // Retrieve the user document corresponding with the user's email.\n    return await users.findOne({ email: email })\n  }\n\n  /**\n   * Adds a user to the `users` collection\n   * @param {UserInfo} userInfo - The information of the user to add\n   * @returns {DAOResponse} Returns either a \"success\" or an \"error\" Object\n   */\n  static async addUser(userInfo) {\n    /**\n    Ticket: Durable Writes\n\n    Please increase the durability of this method by using a non-default write\n    concern with ``insertOne``.\n    */\n\n    try {\n      // TODO Ticket: User Management\n      // Insert a user with the \"name\", \"email\", and \"password\" fields.\n      // TODO Ticket: Durable Writes\n      // Use a more durable Write Concern for this operation.\n      await users.insertOne({ name: userInfo.name, email: userInfo.email, password: userInfo.password })\n      return { success: true }\n    } catch (e) {\n      if (String(e).startsWith(\"MongoError: E11000 duplicate key error\")) {\n        return { error: \"A user with the given email already exists.\" }\n      }\n      console.error(`Error occurred while adding new user, ${e}.`)\n      return { error: e }\n    }\n  }\n\n  /**\n   * Adds a user to the `sessions` collection\n   * @param {string} email - The email of the user to login\n   * @param {string} jwt - A JSON web token representing the user's claims\n   * @returns {DAOResponse} Returns either a \"success\" or an \"error\" Object\n   */\n  static async loginUser(email, jwt) {\n    try {\n      // TODO Ticket: User Management\n      // Use an UPSERT statement to update the \"jwt\" field in the document,\n      // matching the \"user_id\" field with the email passed to this function.\n      await sessions.updateOne(\n        { email: email },\n        { $set: { jwt: jwt } },\n        { $upsert: true }\n      )\n      return { success: true }\n    } catch (e) {\n      console.error(`Error occurred while logging in user, ${e}`)\n      return { error: e }\n    }\n  }\n\n  /**\n   * Removes a user from the `sessons` collection\n   * @param {string} email - The email of the user to logout\n   * @returns {DAOResponse} Returns either a \"success\" or an \"error\" Object\n   */\n  static async logoutUser(email) {\n    try {\n      // TODO Ticket: User Management\n      // Delete the document in the `sessions` collection matching the email.\n      await sessions.deleteOne({ email: email })\n      return { success: true }\n    } catch (e) {\n      console.error(`Error occurred while logging out user, ${e}`)\n      return { error: e }\n    }\n  }\n\n  /**\n   * Gets a user from the `sessions` collection\n   * @param {string} email - The email of the user to search for in `sessions`\n   * @returns {Object | null} Returns a user session Object, an \"error\" Object\n   * if something went wrong, or null if user was not found.\n   */\n  static async getUserSession(email) {\n    try {\n      // TODO Ticket: User Management\n      // Retrieve the session document corresponding with the user's email.\n      return sessions.findOne({ email: email })\n    } catch (e) {\n      console.error(`Error occurred while retrieving user session, ${e}`)\n      return null\n    }\n  }\n\n  /**\n   * Removes a user from the `sessions` and `users` collections\n   * @param {string} email - The email of the user to delete\n   * @returns {DAOResponse} Returns either a \"success\" or an \"error\" Object\n   */\n  static async deleteUser(email) {\n    try {\n      await users.deleteOne({ email })\n      await sessions.deleteOne({ user_id: email })\n      if (!(await this.getUser(email)) && !(await this.getUserSession(email))) {\n        return { success: true }\n      } else {\n        console.error(`Deletion unsuccessful`)\n        return { error: `Deletion unsuccessful` }\n      }\n    } catch (e) {\n      console.error(`Error occurred while deleting user, ${e}`)\n      return { error: e }\n    }\n  }\n\n  /**\n   * Given a user's email and an object of new preferences, update that user's\n   * data to include those preferences.\n   * @param {string} email - The email of the user to update.\n   * @param {Object} preferences - The preferences to include in the user's data.\n   * @returns {DAOResponse}\n   */\n  static async updatePreferences(email, preferences) {\n    try {\n      /**\n      Ticket: User Preferences\n\n      Update the \"preferences\" field in the corresponding user's document to\n      reflect the new information in preferences.\n      */\n\n      preferences = preferences || {}\n\n      // TODO Ticket: User Preferences\n      // Use the data in \"preferences\" to update the user's preferences.\n      const updateResponse = await users.updateOne(\n        { email: email },\n        { $set: { preferences: preferences } },\n      )\n\n      if (updateResponse.matchedCount === 0) {\n        return { error: \"No user found with that email\" }\n      }\n      return updateResponse\n    } catch (e) {\n      console.error(\n        `An error occurred while updating this user's preferences, ${e}`,\n      )\n      return { error: e }\n    }\n  }\n\n  static async checkAdmin(email) {\n    try {\n      const { isAdmin } = await this.getUser(email)\n      return isAdmin || false\n    } catch (e) {\n      return { error: e }\n    }\n  }\n\n  static async makeAdmin(email) {\n    try {\n      const updateResponse = users.updateOne(\n        { email },\n        { $set: { isAdmin: true } },\n      )\n      return updateResponse\n    } catch (e) {\n      return { error: e }\n    }\n  }\n}\n\n/**\n * Parameter passed to addUser method\n * @typedef UserInfo\n * @property {string} name\n * @property {string} email\n * @property {string} password\n */\n\n/**\n * Success/Error return object\n * @typedef DAOResponse\n * @property {boolean} [success] - Success\n * @property {string} [error] - Error\n */\n"
      ],
      "mappings": "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"
    },
    "sourceType": "script",
    "externalDependencies": {},
    "mtime": 1659969739857
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js\",\"filename\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao/commentsDAO.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"syntax-dynamic-import\",\"visitor\":{},\"options\":{},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-decorators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"legacy\":true},\"externalDependencies\":[]},{\"key\":\"proposal-function-sent\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"MetaProperty\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-throw-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"UnaryExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-export-default-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-pipeline-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"proposal\":\"minimal\"},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-do-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DoExpression\":{\"exit\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.18.10": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js",
      "filename": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao/commentsDAO.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-decorators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "legacy": true
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-function-sent",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "MetaProperty": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-throw-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "UnaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-export-default-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-pipeline-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "proposal": "minimal"
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-do-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DoExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao/commentsDAO.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "decorators-legacy",
          "functionSent",
          "exportNamespaceFrom",
          "numericSeparator",
          "throwExpressions",
          "exportDefaultFrom",
          "logicalAssignment",
          "optionalChaining",
          [
            "pipelineOperator",
            {
              "proposal": "minimal"
            }
          ],
          "nullishCoalescingOperator",
          "doExpressions",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao/commentsDAO.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao",
        "sourceFileName": "commentsDAO.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _bson = require(\"bson\");\n\nvar comments;\n\nvar CommentsDAO = /*#__PURE__*/function () {\n  function CommentsDAO() {\n    (0, _classCallCheck2[\"default\"])(this, CommentsDAO);\n  }\n\n  (0, _createClass2[\"default\"])(CommentsDAO, null, [{\n    key: \"injectDB\",\n    value: function () {\n      var _injectDB = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(conn) {\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!comments) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                _context.prev = 2;\n                _context.next = 5;\n                return conn.db(process.env.MFLIX_NS).collection(\"comments\");\n\n              case 5:\n                comments = _context.sent;\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](2);\n                console.error(\"Unable to establish collection handles in userDAO: \".concat(_context.t0));\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 8]]);\n      }));\n\n      function injectDB(_x) {\n        return _injectDB.apply(this, arguments);\n      }\n\n      return injectDB;\n    }()\n    /**\n    Ticket: Create/Update Comments\n     For this ticket, you will need to implement the following two methods:\n     - addComment\n    - updateComment\n     You can find these methods below this docstring. Make sure to read the comments\n    to better understand the task.\n    */\n\n    /**\n     * Inserts a comment into the `comments` collection, with the following fields:\n        - \"name\", the name of the user posting the comment\n       - \"email\", the email of the user posting the comment\n       - \"movie_id\", the _id of the movie pertaining to the comment\n       - \"text\", the text of the comment\n       - \"date\", the date when the comment was posted\n      * @param {string} movieId - The _id of the movie in the `movies` collection.\n     * @param {Object} user - An object containing the user's name and email.\n     * @param {string} comment - The text of the comment.\n     * @param {string} date - The date on which the comment was posted.\n     * @returns {DAOResponse} Returns an object with either DB response or \"error\"\n     */\n\n  }, {\n    key: \"addComment\",\n    value: function () {\n      var _addComment = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(movieId, user, comment, date) {\n        var commentDoc;\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                // TODO Ticket: Create/Update Comments\n                // Construct the comment document to be inserted into MongoDB.\n                commentDoc = {\n                  name: user.name,\n                  email: user.email,\n                  movie_id: movieId,\n                  text: comment,\n                  date: date\n                };\n                _context2.next = 4;\n                return comments.insertOne(commentDoc);\n\n              case 4:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.error(\"Unable to post comment: \".concat(_context2.t0));\n                return _context2.abrupt(\"return\", {\n                  error: _context2.t0\n                });\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 7]]);\n      }));\n\n      function addComment(_x2, _x3, _x4, _x5) {\n        return _addComment.apply(this, arguments);\n      }\n\n      return addComment;\n    }()\n    /**\n     * Updates the comment in the comment collection. Queries for the comment\n     * based by both comment _id field as well as the email field to doubly ensure\n     * the user has permission to edit this comment.\n     * @param {string} commentId - The _id of the comment to update.\n     * @param {string} userEmail - The email of the user who owns the comment.\n     * @param {string} text - The updated text of the comment.\n     * @param {string} date - The date on which the comment was updated.\n     * @returns {DAOResponse} Returns an object with either DB response or \"error\"\n     */\n\n  }, {\n    key: \"updateComment\",\n    value: function () {\n      var _updateComment = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(commentId, userEmail, text, date) {\n        var updateResponse;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return comments.updateOne({\n                  email: userEmail,\n                  _id: commentId\n                }, {\n                  $set: {\n                    text: text,\n                    date: date\n                  }\n                });\n\n              case 3:\n                updateResponse = _context3.sent;\n                return _context3.abrupt(\"return\", updateResponse);\n\n              case 7:\n                _context3.prev = 7;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.error(\"Unable to update comment: \".concat(_context3.t0));\n                return _context3.abrupt(\"return\", {\n                  error: _context3.t0\n                });\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 7]]);\n      }));\n\n      function updateComment(_x6, _x7, _x8, _x9) {\n        return _updateComment.apply(this, arguments);\n      }\n\n      return updateComment;\n    }()\n  }, {\n    key: \"deleteComment\",\n    value: function () {\n      var _deleteComment = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(commentId, userEmail) {\n        var deleteResponse;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return comments.deleteOne({\n                  _id: (0, _bson.ObjectId)(commentId),\n                  email: userEmail\n                });\n\n              case 3:\n                deleteResponse = _context4.sent;\n                return _context4.abrupt(\"return\", deleteResponse);\n\n              case 7:\n                _context4.prev = 7;\n                _context4.t0 = _context4[\"catch\"](0);\n                console.error(\"Unable to delete comment: \".concat(_context4.t0));\n                return _context4.abrupt(\"return\", {\n                  error: _context4.t0\n                });\n\n              case 11:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[0, 7]]);\n      }));\n\n      function deleteComment(_x10, _x11) {\n        return _deleteComment.apply(this, arguments);\n      }\n\n      return deleteComment;\n    }()\n  }, {\n    key: \"mostActiveCommenters\",\n    value: function () {\n      var _mostActiveCommenters = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5() {\n        var pipeline, readConcern, aggregateResult;\n        return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                // TODO Ticket: User Report\n                // Return the 20 users who have commented the most on MFlix.\n                pipeline = [{\n                  \"$sortByCount\": \"$email\"\n                }, {\n                  \"$limit\": 20\n                }]; // TODO Ticket: User Report\n                // Use a more durable Read Concern here to make sure this data is not stale.\n\n                readConcern = comments.readConcern;\n                _context5.next = 5;\n                return comments.aggregate(pipeline, {\n                  readConcern: readConcern\n                });\n\n              case 5:\n                aggregateResult = _context5.sent;\n                _context5.next = 8;\n                return aggregateResult.toArray();\n\n              case 8:\n                return _context5.abrupt(\"return\", _context5.sent);\n\n              case 11:\n                _context5.prev = 11;\n                _context5.t0 = _context5[\"catch\"](0);\n                console.error(\"Unable to retrieve most active commenters: \".concat(_context5.t0));\n                return _context5.abrupt(\"return\", {\n                  error: _context5.t0\n                });\n\n              case 15:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[0, 11]]);\n      }));\n\n      function mostActiveCommenters() {\n        return _mostActiveCommenters.apply(this, arguments);\n      }\n\n      return mostActiveCommenters;\n    }()\n  }]);\n  return CommentsDAO;\n}();\n/**\n * Success/Error return object\n * @typedef DAOResponse\n * @property {boolean} [success] - Success\n * @property {string} [error] - Error\n */\n\n\nexports[\"default\"] = CommentsDAO;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "names": [
        "comments",
        "CommentsDAO",
        "conn",
        "db",
        "process",
        "env",
        "MFLIX_NS",
        "collection",
        "console",
        "error",
        "movieId",
        "user",
        "comment",
        "date",
        "commentDoc",
        "name",
        "email",
        "movie_id",
        "text",
        "insertOne",
        "commentId",
        "userEmail",
        "updateOne",
        "_id",
        "$set",
        "updateResponse",
        "deleteOne",
        "ObjectId",
        "deleteResponse",
        "pipeline",
        "readConcern",
        "aggregate",
        "aggregateResult",
        "toArray"
      ],
      "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/dao",
      "sources": [
        "commentsDAO.js"
      ],
      "sourcesContent": [
        "import { ObjectId } from \"bson\"\n\nlet comments\n\nexport default class CommentsDAO {\n  static async injectDB(conn) {\n    if (comments) {\n      return\n    }\n    try {\n      comments = await conn.db(process.env.MFLIX_NS).collection(\"comments\")\n    } catch (e) {\n      console.error(`Unable to establish collection handles in userDAO: ${e}`)\n    }\n  }\n\n  /**\n  Ticket: Create/Update Comments\n\n  For this ticket, you will need to implement the following two methods:\n\n  - addComment\n  - updateComment\n\n  You can find these methods below this docstring. Make sure to read the comments\n  to better understand the task.\n  */\n\n  /**\n   * Inserts a comment into the `comments` collection, with the following fields:\n\n     - \"name\", the name of the user posting the comment\n     - \"email\", the email of the user posting the comment\n     - \"movie_id\", the _id of the movie pertaining to the comment\n     - \"text\", the text of the comment\n     - \"date\", the date when the comment was posted\n\n   * @param {string} movieId - The _id of the movie in the `movies` collection.\n   * @param {Object} user - An object containing the user's name and email.\n   * @param {string} comment - The text of the comment.\n   * @param {string} date - The date on which the comment was posted.\n   * @returns {DAOResponse} Returns an object with either DB response or \"error\"\n   */\n  static async addComment(movieId, user, comment, date) {\n    try {\n      // TODO Ticket: Create/Update Comments\n      // Construct the comment document to be inserted into MongoDB.\n      const commentDoc = { name: user.name, email: user.email, movie_id: movieId, text: comment, date: date }\n\n      return await comments.insertOne(commentDoc)\n    } catch (e) {\n      console.error(`Unable to post comment: ${e}`)\n      return { error: e }\n    }\n  }\n\n  /**\n   * Updates the comment in the comment collection. Queries for the comment\n   * based by both comment _id field as well as the email field to doubly ensure\n   * the user has permission to edit this comment.\n   * @param {string} commentId - The _id of the comment to update.\n   * @param {string} userEmail - The email of the user who owns the comment.\n   * @param {string} text - The updated text of the comment.\n   * @param {string} date - The date on which the comment was updated.\n   * @returns {DAOResponse} Returns an object with either DB response or \"error\"\n   */\n  static async updateComment(commentId, userEmail, text, date) {\n    try {\n      // TODO Ticket: Create/Update Comments\n      // Use the commentId and userEmail to select the proper comment, then\n      // update the \"text\" and \"date\" fields of the selected comment.\n      const updateResponse = await comments.updateOne(\n        { email: userEmail, _id: commentId },\n        { $set: { text: text, date: date } },\n      )\n\n      return updateResponse\n    } catch (e) {\n      console.error(`Unable to update comment: ${e}`)\n      return { error: e }\n    }\n  }\n\n  static async deleteComment(commentId, userEmail) {\n    /**\n    Ticket: Delete Comments\n\n    Implement the deleteOne() call in this method.\n\n    Ensure the delete operation is limited so only the user can delete their own\n    comments, but not anyone else's comments.\n    */\n\n    try {\n      // TODO Ticket: Delete Comments\n      // Use the userEmail and commentId to delete the proper comment.\n      const deleteResponse = await comments.deleteOne({\n        _id: ObjectId(commentId), email: userEmail\n      })\n\n      return deleteResponse\n    } catch (e) {\n      console.error(`Unable to delete comment: ${e}`)\n      return { error: e }\n    }\n  }\n\n  static async mostActiveCommenters() {\n    /**\n    Ticket: User Report\n\n    Build a pipeline that returns the 20 most frequent commenters on the MFlix\n    site. You can do this by counting the number of occurrences of a user's\n    email in the `comments` collection.\n    */\n    try {\n      // TODO Ticket: User Report\n      // Return the 20 users who have commented the most on MFlix.\n      const pipeline = [\n        {\n          \"$sortByCount\": \"$email\"\n        },\n        {\n          \"$limit\": 20\n        }\n      ]\n\n      // TODO Ticket: User Report\n      // Use a more durable Read Concern here to make sure this data is not stale.\n      const readConcern = comments.readConcern\n\n      const aggregateResult = await comments.aggregate(pipeline, {\n        readConcern,\n      })\n\n      return await aggregateResult.toArray()\n    } catch (e) {\n      console.error(`Unable to retrieve most active commenters: ${e}`)\n      return { error: e }\n    }\n  }\n}\n\n/**\n * Success/Error return object\n * @typedef DAOResponse\n * @property {boolean} [success] - Success\n * @property {string} [error] - Error\n */\n"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;AAAA;;AAEA,IAAIA,QAAJ;;IAEqBC,W;;;;;;;;qHACGC,I;;;;;qBAChBF,Q;;;;;;;;;;uBAIeE,IAAI,CAACC,EAAL,CAAQC,OAAO,CAACC,GAAR,CAAYC,QAApB,EAA8BC,UAA9B,CAAyC,UAAzC,C;;;gBAAjBP,Q;;;;;;;gBAEAQ,OAAO,CAACC,KAAR;;;;;;;;;;;;;;;;IAIJ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;IAKE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;wHAG0BC,O,EAASC,I,EAAMC,O,EAASC,I;;;;;;;gBAE5C;gBACA;gBACMC,U,GAAa;kBAAEC,IAAI,EAAEJ,IAAI,CAACI,IAAb;kBAAmBC,KAAK,EAAEL,IAAI,CAACK,KAA/B;kBAAsCC,QAAQ,EAAEP,OAAhD;kBAAyDQ,IAAI,EAAEN,OAA/D;kBAAwEC,IAAI,EAAEA;gBAA9E,C;;uBAENb,QAAQ,CAACmB,SAAT,CAAmBL,UAAnB,C;;;;;;;;gBAEbN,OAAO,CAACC,KAAR;kDACO;kBAAEA,KAAK;gBAAP,C;;;;;;;;;;;;;;;;IAIX;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;2HAC6BW,S,EAAWC,S,EAAWH,I,EAAML,I;;;;;;;;uBAKtBb,QAAQ,CAACsB,SAAT,CAC3B;kBAAEN,KAAK,EAAEK,SAAT;kBAAoBE,GAAG,EAAEH;gBAAzB,CAD2B,EAE3B;kBAAEI,IAAI,EAAE;oBAAEN,IAAI,EAAEA,IAAR;oBAAcL,IAAI,EAAEA;kBAApB;gBAAR,CAF2B,C;;;gBAAvBY,c;kDAKCA,c;;;;;gBAEPjB,OAAO,CAACC,KAAR;kDACO;kBAAEA,KAAK;gBAAP,C;;;;;;;;;;;;;;;;;;;2HAIgBW,S,EAAWC,S;;;;;;;;uBAaLrB,QAAQ,CAAC0B,SAAT,CAAmB;kBAC9CH,GAAG,EAAE,IAAAI,cAAA,EAASP,SAAT,CADyC;kBACpBJ,KAAK,EAAEK;gBADa,CAAnB,C;;;gBAAvBO,c;kDAICA,c;;;;;gBAEPpB,OAAO,CAACC,KAAR;kDACO;kBAAEA,KAAK;gBAAP,C;;;;;;;;;;;;;;;;;;;;;;;;;;gBAaP;gBACA;gBACMoB,Q,GAAW,CACf;kBACE,gBAAgB;gBADlB,CADe,EAIf;kBACE,UAAU;gBADZ,CAJe,C,EASjB;gBACA;;gBACMC,W,GAAc9B,QAAQ,CAAC8B,W;;uBAEC9B,QAAQ,CAAC+B,SAAT,CAAmBF,QAAnB,EAA6B;kBACzDC,WAAW,EAAXA;gBADyD,CAA7B,C;;;gBAAxBE,e;;uBAIOA,eAAe,CAACC,OAAhB,E;;;;;;;;gBAEbzB,OAAO,CAACC,KAAR;kDACO;kBAAEA,KAAK;gBAAP,C;;;;;;;;;;;;;;;;;;;AAKb;AACA;AACA;AACA;AACA;AACA"
    },
    "sourceType": "script",
    "externalDependencies": {},
    "mtime": 1659981541187
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js\",\"filename\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api/users.controller.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"syntax-dynamic-import\",\"visitor\":{},\"options\":{},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-decorators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"legacy\":true},\"externalDependencies\":[]},{\"key\":\"proposal-function-sent\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"MetaProperty\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-throw-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"UnaryExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-export-default-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-pipeline-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"proposal\":\"minimal\"},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-do-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DoExpression\":{\"exit\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.18.10": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js",
      "filename": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api/users.controller.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-decorators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "legacy": true
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-function-sent",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "MetaProperty": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-throw-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "UnaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-export-default-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-pipeline-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "proposal": "minimal"
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-do-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DoExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api/users.controller.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "decorators-legacy",
          "functionSent",
          "exportNamespaceFrom",
          "numericSeparator",
          "throwExpressions",
          "exportDefaultFrom",
          "logicalAssignment",
          "optionalChaining",
          [
            "pipelineOperator",
            {
              "proposal": "minimal"
            }
          ],
          "nullishCoalescingOperator",
          "doExpressions",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api/users.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api",
        "sourceFileName": "users.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.User = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _bcryptjs = _interopRequireDefault(require(\"bcryptjs\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _usersDAO = _interopRequireDefault(require(\"../dao/usersDAO\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar hashPassword = /*#__PURE__*/function () {\n  var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(password) {\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _bcryptjs[\"default\"].hash(password, 10);\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function hashPassword(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar User = /*#__PURE__*/function () {\n  function User() {\n    var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        name = _ref2.name,\n        email = _ref2.email,\n        password = _ref2.password,\n        _ref2$preferences = _ref2.preferences,\n        preferences = _ref2$preferences === void 0 ? {} : _ref2$preferences;\n\n    (0, _classCallCheck2[\"default\"])(this, User);\n    this.name = name;\n    this.email = email;\n    this.password = password;\n    this.preferences = preferences;\n  }\n\n  (0, _createClass2[\"default\"])(User, [{\n    key: \"toJson\",\n    value: function toJson() {\n      return {\n        name: this.name,\n        email: this.email,\n        preferences: this.preferences\n      };\n    }\n  }, {\n    key: \"comparePassword\",\n    value: function () {\n      var _comparePassword = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(plainText) {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _bcryptjs[\"default\"].compare(plainText, this.password);\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function comparePassword(_x2) {\n        return _comparePassword.apply(this, arguments);\n      }\n\n      return comparePassword;\n    }()\n  }, {\n    key: \"encoded\",\n    value: function encoded() {\n      return _jsonwebtoken[\"default\"].sign(_objectSpread({\n        exp: Math.floor(Date.now() / 1000) + 60 * 60 * 4\n      }, this.toJson()), process.env.SECRET_KEY);\n    }\n  }], [{\n    key: \"decoded\",\n    value: function () {\n      var _decoded = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(userJwt) {\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", _jsonwebtoken[\"default\"].verify(userJwt, process.env.SECRET_KEY, function (error, res) {\n                  if (error) {\n                    return {\n                      error: error\n                    };\n                  }\n\n                  return new User(res);\n                }));\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function decoded(_x3) {\n        return _decoded.apply(this, arguments);\n      }\n\n      return decoded;\n    }()\n  }]);\n  return User;\n}();\n\nexports.User = User;\n\nvar UserController = /*#__PURE__*/function () {\n  function UserController() {\n    (0, _classCallCheck2[\"default\"])(this, UserController);\n  }\n\n  (0, _createClass2[\"default\"])(UserController, null, [{\n    key: \"register\",\n    value: function () {\n      var _register = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(req, res) {\n        var userFromBody, errors, userInfo, insertResult, userFromDB, user;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                userFromBody = req.body;\n                errors = {};\n\n                if (userFromBody && userFromBody.password.length < 8) {\n                  errors.password = \"Your password must be at least 8 characters.\";\n                }\n\n                if (userFromBody && userFromBody.name.length < 3) {\n                  errors.name = \"You must specify a name of at least 3 characters.\";\n                }\n\n                if (!(Object.keys(errors).length > 0)) {\n                  _context4.next = 8;\n                  break;\n                }\n\n                res.status(400).json(errors);\n                return _context4.abrupt(\"return\");\n\n              case 8:\n                _context4.t0 = _objectSpread;\n                _context4.t1 = {};\n                _context4.t2 = userFromBody;\n                _context4.next = 13;\n                return hashPassword(userFromBody.password);\n\n              case 13:\n                _context4.t3 = _context4.sent;\n                _context4.t4 = {\n                  password: _context4.t3\n                };\n                userInfo = (0, _context4.t0)(_context4.t1, _context4.t2, _context4.t4);\n                _context4.next = 18;\n                return _usersDAO[\"default\"].addUser(userInfo);\n\n              case 18:\n                insertResult = _context4.sent;\n\n                if (!insertResult.success) {\n                  errors.email = insertResult.error;\n                }\n\n                _context4.next = 22;\n                return _usersDAO[\"default\"].getUser(userFromBody.email);\n\n              case 22:\n                userFromDB = _context4.sent;\n\n                if (!userFromDB) {\n                  errors.general = \"Internal error, please try again later\";\n                }\n\n                if (!(Object.keys(errors).length > 0)) {\n                  _context4.next = 27;\n                  break;\n                }\n\n                res.status(400).json(errors);\n                return _context4.abrupt(\"return\");\n\n              case 27:\n                user = new User(userFromDB);\n                res.json({\n                  auth_token: user.encoded(),\n                  info: user.toJson()\n                });\n                _context4.next = 34;\n                break;\n\n              case 31:\n                _context4.prev = 31;\n                _context4.t5 = _context4[\"catch\"](0);\n                res.status(500).json({\n                  error: _context4.t5\n                });\n\n              case 34:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[0, 31]]);\n      }));\n\n      function register(_x4, _x5) {\n        return _register.apply(this, arguments);\n      }\n\n      return register;\n    }()\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5(req, res, next) {\n        var _req$body, email, password, userData, user, loginResponse;\n\n        return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                _req$body = req.body, email = _req$body.email, password = _req$body.password;\n\n                if (!(!email || typeof email !== \"string\")) {\n                  _context5.next = 5;\n                  break;\n                }\n\n                res.status(400).json({\n                  error: \"Bad email format, expected string.\"\n                });\n                return _context5.abrupt(\"return\");\n\n              case 5:\n                if (!(!password || typeof password !== \"string\")) {\n                  _context5.next = 8;\n                  break;\n                }\n\n                res.status(400).json({\n                  error: \"Bad password format, expected string.\"\n                });\n                return _context5.abrupt(\"return\");\n\n              case 8:\n                _context5.next = 10;\n                return _usersDAO[\"default\"].getUser(email);\n\n              case 10:\n                userData = _context5.sent;\n\n                if (userData) {\n                  _context5.next = 14;\n                  break;\n                }\n\n                res.status(401).json({\n                  error: \"Make sure your email is correct.\"\n                });\n                return _context5.abrupt(\"return\");\n\n              case 14:\n                user = new User(userData);\n                _context5.next = 17;\n                return user.comparePassword(password);\n\n              case 17:\n                if (_context5.sent) {\n                  _context5.next = 20;\n                  break;\n                }\n\n                res.status(401).json({\n                  error: \"Make sure your password is correct.\"\n                });\n                return _context5.abrupt(\"return\");\n\n              case 20:\n                _context5.next = 22;\n                return _usersDAO[\"default\"].loginUser(user.email, user.encoded());\n\n              case 22:\n                loginResponse = _context5.sent;\n\n                if (loginResponse.success) {\n                  _context5.next = 26;\n                  break;\n                }\n\n                res.status(500).json({\n                  error: loginResponse.error\n                });\n                return _context5.abrupt(\"return\");\n\n              case 26:\n                res.json({\n                  auth_token: user.encoded(),\n                  info: user.toJson()\n                });\n                _context5.next = 33;\n                break;\n\n              case 29:\n                _context5.prev = 29;\n                _context5.t0 = _context5[\"catch\"](0);\n                res.status(400).json({\n                  error: _context5.t0\n                });\n                return _context5.abrupt(\"return\");\n\n              case 33:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[0, 29]]);\n      }));\n\n      function login(_x6, _x7, _x8) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n  }, {\n    key: \"logout\",\n    value: function () {\n      var _logout = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6(req, res) {\n        var userJwt, userObj, error, logoutResult;\n        return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.prev = 0;\n                userJwt = req.get(\"Authorization\").slice(\"Bearer \".length);\n                _context6.next = 4;\n                return User.decoded(userJwt);\n\n              case 4:\n                userObj = _context6.sent;\n                error = userObj.error;\n\n                if (!error) {\n                  _context6.next = 9;\n                  break;\n                }\n\n                res.status(401).json({\n                  error: error\n                });\n                return _context6.abrupt(\"return\");\n\n              case 9:\n                _context6.next = 11;\n                return _usersDAO[\"default\"].logoutUser(userObj.email);\n\n              case 11:\n                logoutResult = _context6.sent;\n                error = logoutResult.error;\n\n                if (!error) {\n                  _context6.next = 16;\n                  break;\n                }\n\n                res.status(500).json({\n                  error: error\n                });\n                return _context6.abrupt(\"return\");\n\n              case 16:\n                res.json(logoutResult);\n                _context6.next = 22;\n                break;\n\n              case 19:\n                _context6.prev = 19;\n                _context6.t0 = _context6[\"catch\"](0);\n                res.status(500).json(_context6.t0);\n\n              case 22:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, null, [[0, 19]]);\n      }));\n\n      function logout(_x9, _x10) {\n        return _logout.apply(this, arguments);\n      }\n\n      return logout;\n    }()\n  }, {\n    key: \"delete\",\n    value: function () {\n      var _delete2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee7(req, res) {\n        var password, userJwt, userClaim, error, user, deleteResult;\n        return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.prev = 0;\n                password = req.body.password;\n\n                if (!(!password || typeof password !== \"string\")) {\n                  _context7.next = 5;\n                  break;\n                }\n\n                res.status(400).json({\n                  error: \"Bad password format, expected string.\"\n                });\n                return _context7.abrupt(\"return\");\n\n              case 5:\n                userJwt = req.get(\"Authorization\").slice(\"Bearer \".length);\n                _context7.next = 8;\n                return User.decoded(userJwt);\n\n              case 8:\n                userClaim = _context7.sent;\n                error = userClaim.error;\n\n                if (!error) {\n                  _context7.next = 13;\n                  break;\n                }\n\n                res.status(401).json({\n                  error: error\n                });\n                return _context7.abrupt(\"return\");\n\n              case 13:\n                _context7.t0 = User;\n                _context7.next = 16;\n                return _usersDAO[\"default\"].getUser(userClaim.email);\n\n              case 16:\n                _context7.t1 = _context7.sent;\n                user = new _context7.t0(_context7.t1);\n                _context7.next = 20;\n                return user.comparePassword(password);\n\n              case 20:\n                if (_context7.sent) {\n                  _context7.next = 23;\n                  break;\n                }\n\n                res.status(401).json({\n                  error: \"Make sure your password is correct.\"\n                });\n                return _context7.abrupt(\"return\");\n\n              case 23:\n                _context7.next = 25;\n                return _usersDAO[\"default\"].deleteUser(userClaim.email);\n\n              case 25:\n                deleteResult = _context7.sent;\n                error = deleteResult.error;\n\n                if (!error) {\n                  _context7.next = 30;\n                  break;\n                }\n\n                res.status(500).json({\n                  error: error\n                });\n                return _context7.abrupt(\"return\");\n\n              case 30:\n                res.json(deleteResult);\n                _context7.next = 36;\n                break;\n\n              case 33:\n                _context7.prev = 33;\n                _context7.t2 = _context7[\"catch\"](0);\n                res.status(500).json(_context7.t2);\n\n              case 36:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, null, [[0, 33]]);\n      }));\n\n      function _delete(_x11, _x12) {\n        return _delete2.apply(this, arguments);\n      }\n\n      return _delete;\n    }()\n  }, {\n    key: \"save\",\n    value: function () {\n      var _save = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee8(req, res) {\n        var userJwt, userFromHeader, error, userFromDB, updatedUser;\n        return _regenerator[\"default\"].wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.prev = 0;\n                userJwt = req.get(\"Authorization\").slice(\"Bearer \".length);\n                _context8.next = 4;\n                return User.decoded(userJwt);\n\n              case 4:\n                userFromHeader = _context8.sent;\n                error = userFromHeader.error;\n\n                if (!error) {\n                  _context8.next = 9;\n                  break;\n                }\n\n                res.status(401).json({\n                  error: error\n                });\n                return _context8.abrupt(\"return\");\n\n              case 9:\n                _context8.next = 11;\n                return _usersDAO[\"default\"].updatePreferences(userFromHeader.email, req.body.preferences);\n\n              case 11:\n                _context8.next = 13;\n                return _usersDAO[\"default\"].getUser(userFromHeader.email);\n\n              case 13:\n                userFromDB = _context8.sent;\n                updatedUser = new User(userFromDB);\n                res.json({\n                  auth_token: updatedUser.encoded(),\n                  info: updatedUser.toJson()\n                });\n                _context8.next = 21;\n                break;\n\n              case 18:\n                _context8.prev = 18;\n                _context8.t0 = _context8[\"catch\"](0);\n                res.status(500).json(_context8.t0);\n\n              case 21:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, null, [[0, 18]]);\n      }));\n\n      function save(_x13, _x14) {\n        return _save.apply(this, arguments);\n      }\n\n      return save;\n    }() // for internal use only\n\n  }, {\n    key: \"createAdminUser\",\n    value: function () {\n      var _createAdminUser = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee9(req, res) {\n        var userFromBody, errors, userInfo, insertResult, makeAdminResponse, userFromDB, user, _jwt, loginResponse;\n\n        return _regenerator[\"default\"].wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.prev = 0;\n                userFromBody = req.body;\n                errors = {};\n\n                if (userFromBody && userFromBody.password.length < 8) {\n                  errors.password = \"Your password must be at least 8 characters.\";\n                }\n\n                if (userFromBody && userFromBody.name.length < 3) {\n                  errors.name = \"You must specify a name of at least 3 characters.\";\n                }\n\n                if (!(Object.keys(errors).length > 0)) {\n                  _context9.next = 8;\n                  break;\n                }\n\n                res.status(400).json(errors);\n                return _context9.abrupt(\"return\");\n\n              case 8:\n                _context9.t0 = _objectSpread;\n                _context9.t1 = {};\n                _context9.t2 = userFromBody;\n                _context9.next = 13;\n                return hashPassword(userFromBody.password);\n\n              case 13:\n                _context9.t3 = _context9.sent;\n                _context9.t4 = {\n                  password: _context9.t3\n                };\n                userInfo = (0, _context9.t0)(_context9.t1, _context9.t2, _context9.t4);\n                _context9.next = 18;\n                return _usersDAO[\"default\"].addUser(userInfo);\n\n              case 18:\n                insertResult = _context9.sent;\n\n                if (!insertResult.success) {\n                  errors.email = insertResult.error;\n                }\n\n                if (!(Object.keys(errors).length > 0)) {\n                  _context9.next = 23;\n                  break;\n                }\n\n                res.status(400).json(errors);\n                return _context9.abrupt(\"return\");\n\n              case 23:\n                _context9.next = 25;\n                return _usersDAO[\"default\"].makeAdmin(userFromBody.email);\n\n              case 25:\n                makeAdminResponse = _context9.sent;\n                _context9.next = 28;\n                return _usersDAO[\"default\"].getUser(userFromBody.email);\n\n              case 28:\n                userFromDB = _context9.sent;\n\n                if (!userFromDB) {\n                  errors.general = \"Internal error, please try again later\";\n                }\n\n                if (!(Object.keys(errors).length > 0)) {\n                  _context9.next = 33;\n                  break;\n                }\n\n                res.status(400).json(errors);\n                return _context9.abrupt(\"return\");\n\n              case 33:\n                user = new User(userFromDB);\n                _jwt = user.encoded();\n                _context9.next = 37;\n                return _usersDAO[\"default\"].loginUser(user.email, _jwt);\n\n              case 37:\n                loginResponse = _context9.sent;\n                res.json({\n                  auth_token: _jwt,\n                  info: user.toJson()\n                });\n                _context9.next = 44;\n                break;\n\n              case 41:\n                _context9.prev = 41;\n                _context9.t5 = _context9[\"catch\"](0);\n                res.status(500).json(_context9.t5);\n\n              case 44:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, null, [[0, 41]]);\n      }));\n\n      function createAdminUser(_x15, _x16) {\n        return _createAdminUser.apply(this, arguments);\n      }\n\n      return createAdminUser;\n    }()\n  }]);\n  return UserController;\n}();\n\nexports[\"default\"] = UserController;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJoYXNoUGFzc3dvcmQiLCJwYXNzd29yZCIsImJjcnlwdCIsImhhc2giLCJVc2VyIiwibmFtZSIsImVtYWlsIiwicHJlZmVyZW5jZXMiLCJwbGFpblRleHQiLCJjb21wYXJlIiwiand0Iiwic2lnbiIsImV4cCIsIk1hdGgiLCJmbG9vciIsIkRhdGUiLCJub3ciLCJ0b0pzb24iLCJwcm9jZXNzIiwiZW52IiwiU0VDUkVUX0tFWSIsInVzZXJKd3QiLCJ2ZXJpZnkiLCJlcnJvciIsInJlcyIsIlVzZXJDb250cm9sbGVyIiwicmVxIiwidXNlckZyb21Cb2R5IiwiYm9keSIsImVycm9ycyIsImxlbmd0aCIsIk9iamVjdCIsImtleXMiLCJzdGF0dXMiLCJqc29uIiwidXNlckluZm8iLCJVc2Vyc0RBTyIsImFkZFVzZXIiLCJpbnNlcnRSZXN1bHQiLCJzdWNjZXNzIiwiZ2V0VXNlciIsInVzZXJGcm9tREIiLCJnZW5lcmFsIiwidXNlciIsImF1dGhfdG9rZW4iLCJlbmNvZGVkIiwiaW5mbyIsIm5leHQiLCJ1c2VyRGF0YSIsImNvbXBhcmVQYXNzd29yZCIsImxvZ2luVXNlciIsImxvZ2luUmVzcG9uc2UiLCJnZXQiLCJzbGljZSIsImRlY29kZWQiLCJ1c2VyT2JqIiwibG9nb3V0VXNlciIsImxvZ291dFJlc3VsdCIsInVzZXJDbGFpbSIsImRlbGV0ZVVzZXIiLCJkZWxldGVSZXN1bHQiLCJ1c2VyRnJvbUhlYWRlciIsInVwZGF0ZVByZWZlcmVuY2VzIiwidXBkYXRlZFVzZXIiLCJtYWtlQWRtaW4iLCJtYWtlQWRtaW5SZXNwb25zZSJdLCJzb3VyY2VSb290IjoiL1VzZXJzL2Z1c2lvbnRlY2gvRG9jdW1lbnRzL0Z1c2lvblRlY2gvTTIyMC9tZmxpeC1qcy9zcmMvYXBpIiwic291cmNlcyI6WyJ1c2Vycy5jb250cm9sbGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBiY3J5cHQgZnJvbSBcImJjcnlwdGpzXCJcbmltcG9ydCBqd3QgZnJvbSBcImpzb253ZWJ0b2tlblwiXG5pbXBvcnQgVXNlcnNEQU8gZnJvbSBcIi4uL2Rhby91c2Vyc0RBT1wiXG5cbmNvbnN0IGhhc2hQYXNzd29yZCA9IGFzeW5jIHBhc3N3b3JkID0+IGF3YWl0IGJjcnlwdC5oYXNoKHBhc3N3b3JkLCAxMClcblxuZXhwb3J0IGNsYXNzIFVzZXIge1xuICBjb25zdHJ1Y3Rvcih7IG5hbWUsIGVtYWlsLCBwYXNzd29yZCwgcHJlZmVyZW5jZXMgPSB7fSB9ID0ge30pIHtcbiAgICB0aGlzLm5hbWUgPSBuYW1lXG4gICAgdGhpcy5lbWFpbCA9IGVtYWlsXG4gICAgdGhpcy5wYXNzd29yZCA9IHBhc3N3b3JkXG4gICAgdGhpcy5wcmVmZXJlbmNlcyA9IHByZWZlcmVuY2VzXG4gIH1cbiAgdG9Kc29uKCkge1xuICAgIHJldHVybiB7IG5hbWU6IHRoaXMubmFtZSwgZW1haWw6IHRoaXMuZW1haWwsIHByZWZlcmVuY2VzOiB0aGlzLnByZWZlcmVuY2VzIH1cbiAgfVxuICBhc3luYyBjb21wYXJlUGFzc3dvcmQocGxhaW5UZXh0KSB7XG4gICAgcmV0dXJuIGF3YWl0IGJjcnlwdC5jb21wYXJlKHBsYWluVGV4dCwgdGhpcy5wYXNzd29yZClcbiAgfVxuICBlbmNvZGVkKCkge1xuICAgIHJldHVybiBqd3Quc2lnbihcbiAgICAgIHtcbiAgICAgICAgZXhwOiBNYXRoLmZsb29yKERhdGUubm93KCkgLyAxMDAwKSArIDYwICogNjAgKiA0LFxuICAgICAgICAuLi50aGlzLnRvSnNvbigpLFxuICAgICAgfSxcbiAgICAgIHByb2Nlc3MuZW52LlNFQ1JFVF9LRVksXG4gICAgKVxuICB9XG4gIHN0YXRpYyBhc3luYyBkZWNvZGVkKHVzZXJKd3QpIHtcbiAgICByZXR1cm4gand0LnZlcmlmeSh1c2VySnd0LCBwcm9jZXNzLmVudi5TRUNSRVRfS0VZLCAoZXJyb3IsIHJlcykgPT4ge1xuICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgIHJldHVybiB7IGVycm9yIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBuZXcgVXNlcihyZXMpXG4gICAgfSlcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VyQ29udHJvbGxlciB7XG4gIHN0YXRpYyBhc3luYyByZWdpc3RlcihyZXEsIHJlcykge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCB1c2VyRnJvbUJvZHkgPSByZXEuYm9keVxuICAgICAgbGV0IGVycm9ycyA9IHt9XG4gICAgICBpZiAodXNlckZyb21Cb2R5ICYmIHVzZXJGcm9tQm9keS5wYXNzd29yZC5sZW5ndGggPCA4KSB7XG4gICAgICAgIGVycm9ycy5wYXNzd29yZCA9IFwiWW91ciBwYXNzd29yZCBtdXN0IGJlIGF0IGxlYXN0IDggY2hhcmFjdGVycy5cIlxuICAgICAgfVxuICAgICAgaWYgKHVzZXJGcm9tQm9keSAmJiB1c2VyRnJvbUJvZHkubmFtZS5sZW5ndGggPCAzKSB7XG4gICAgICAgIGVycm9ycy5uYW1lID0gXCJZb3UgbXVzdCBzcGVjaWZ5IGEgbmFtZSBvZiBhdCBsZWFzdCAzIGNoYXJhY3RlcnMuXCJcbiAgICAgIH1cblxuICAgICAgaWYgKE9iamVjdC5rZXlzKGVycm9ycykubGVuZ3RoID4gMCkge1xuICAgICAgICByZXMuc3RhdHVzKDQwMCkuanNvbihlcnJvcnMpXG4gICAgICAgIHJldHVyblxuICAgICAgfVxuXG4gICAgICBjb25zdCB1c2VySW5mbyA9IHtcbiAgICAgICAgLi4udXNlckZyb21Cb2R5LFxuICAgICAgICBwYXNzd29yZDogYXdhaXQgaGFzaFBhc3N3b3JkKHVzZXJGcm9tQm9keS5wYXNzd29yZCksXG4gICAgICB9XG5cbiAgICAgIGNvbnN0IGluc2VydFJlc3VsdCA9IGF3YWl0IFVzZXJzREFPLmFkZFVzZXIodXNlckluZm8pXG4gICAgICBpZiAoIWluc2VydFJlc3VsdC5zdWNjZXNzKSB7XG4gICAgICAgIGVycm9ycy5lbWFpbCA9IGluc2VydFJlc3VsdC5lcnJvclxuICAgICAgfVxuICAgICAgY29uc3QgdXNlckZyb21EQiA9IGF3YWl0IFVzZXJzREFPLmdldFVzZXIodXNlckZyb21Cb2R5LmVtYWlsKVxuICAgICAgaWYgKCF1c2VyRnJvbURCKSB7XG4gICAgICAgIGVycm9ycy5nZW5lcmFsID0gXCJJbnRlcm5hbCBlcnJvciwgcGxlYXNlIHRyeSBhZ2FpbiBsYXRlclwiXG4gICAgICB9XG5cbiAgICAgIGlmIChPYmplY3Qua2V5cyhlcnJvcnMpLmxlbmd0aCA+IDApIHtcbiAgICAgICAgcmVzLnN0YXR1cyg0MDApLmpzb24oZXJyb3JzKVxuICAgICAgICByZXR1cm5cbiAgICAgIH1cblxuICAgICAgY29uc3QgdXNlciA9IG5ldyBVc2VyKHVzZXJGcm9tREIpXG5cbiAgICAgIHJlcy5qc29uKHtcbiAgICAgICAgYXV0aF90b2tlbjogdXNlci5lbmNvZGVkKCksXG4gICAgICAgIGluZm86IHVzZXIudG9Kc29uKCksXG4gICAgICB9KVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6IGUgfSlcbiAgICB9XG4gIH1cblxuICBzdGF0aWMgYXN5bmMgbG9naW4ocmVxLCByZXMsIG5leHQpIHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgeyBlbWFpbCwgcGFzc3dvcmQgfSA9IHJlcS5ib2R5XG4gICAgICBpZiAoIWVtYWlsIHx8IHR5cGVvZiBlbWFpbCAhPT0gXCJzdHJpbmdcIikge1xuICAgICAgICByZXMuc3RhdHVzKDQwMCkuanNvbih7IGVycm9yOiBcIkJhZCBlbWFpbCBmb3JtYXQsIGV4cGVjdGVkIHN0cmluZy5cIiB9KVxuICAgICAgICByZXR1cm5cbiAgICAgIH1cbiAgICAgIGlmICghcGFzc3dvcmQgfHwgdHlwZW9mIHBhc3N3b3JkICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgZXJyb3I6IFwiQmFkIHBhc3N3b3JkIGZvcm1hdCwgZXhwZWN0ZWQgc3RyaW5nLlwiIH0pXG4gICAgICAgIHJldHVyblxuICAgICAgfVxuICAgICAgbGV0IHVzZXJEYXRhID0gYXdhaXQgVXNlcnNEQU8uZ2V0VXNlcihlbWFpbClcbiAgICAgIGlmICghdXNlckRhdGEpIHtcbiAgICAgICAgcmVzLnN0YXR1cyg0MDEpLmpzb24oeyBlcnJvcjogXCJNYWtlIHN1cmUgeW91ciBlbWFpbCBpcyBjb3JyZWN0LlwiIH0pXG4gICAgICAgIHJldHVyblxuICAgICAgfVxuICAgICAgY29uc3QgdXNlciA9IG5ldyBVc2VyKHVzZXJEYXRhKVxuXG4gICAgICBpZiAoIShhd2FpdCB1c2VyLmNvbXBhcmVQYXNzd29yZChwYXNzd29yZCkpKSB7XG4gICAgICAgIHJlcy5zdGF0dXMoNDAxKS5qc29uKHsgZXJyb3I6IFwiTWFrZSBzdXJlIHlvdXIgcGFzc3dvcmQgaXMgY29ycmVjdC5cIiB9KVxuICAgICAgICByZXR1cm5cbiAgICAgIH1cblxuICAgICAgY29uc3QgbG9naW5SZXNwb25zZSA9IGF3YWl0IFVzZXJzREFPLmxvZ2luVXNlcih1c2VyLmVtYWlsLCB1c2VyLmVuY29kZWQoKSlcbiAgICAgIGlmICghbG9naW5SZXNwb25zZS5zdWNjZXNzKSB7XG4gICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6IGxvZ2luUmVzcG9uc2UuZXJyb3IgfSlcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG4gICAgICByZXMuanNvbih7IGF1dGhfdG9rZW46IHVzZXIuZW5jb2RlZCgpLCBpbmZvOiB1c2VyLnRvSnNvbigpIH0pXG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgcmVzLnN0YXR1cyg0MDApLmpzb24oeyBlcnJvcjogZSB9KVxuICAgICAgcmV0dXJuXG4gICAgfVxuICB9XG5cbiAgc3RhdGljIGFzeW5jIGxvZ291dChyZXEsIHJlcykge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCB1c2VySnd0ID0gcmVxLmdldChcIkF1dGhvcml6YXRpb25cIikuc2xpY2UoXCJCZWFyZXIgXCIubGVuZ3RoKVxuICAgICAgY29uc3QgdXNlck9iaiA9IGF3YWl0IFVzZXIuZGVjb2RlZCh1c2VySnd0KVxuICAgICAgdmFyIHsgZXJyb3IgfSA9IHVzZXJPYmpcbiAgICAgIGlmIChlcnJvcikge1xuICAgICAgICByZXMuc3RhdHVzKDQwMSkuanNvbih7IGVycm9yIH0pXG4gICAgICAgIHJldHVyblxuICAgICAgfVxuICAgICAgY29uc3QgbG9nb3V0UmVzdWx0ID0gYXdhaXQgVXNlcnNEQU8ubG9nb3V0VXNlcih1c2VyT2JqLmVtYWlsKVxuICAgICAgdmFyIHsgZXJyb3IgfSA9IGxvZ291dFJlc3VsdFxuICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3IgfSlcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG4gICAgICByZXMuanNvbihsb2dvdXRSZXN1bHQpXG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oZSlcbiAgICB9XG4gIH1cblxuICBzdGF0aWMgYXN5bmMgZGVsZXRlKHJlcSwgcmVzKSB7XG4gICAgdHJ5IHtcbiAgICAgIGxldCB7IHBhc3N3b3JkIH0gPSByZXEuYm9keVxuICAgICAgaWYgKCFwYXNzd29yZCB8fCB0eXBlb2YgcGFzc3dvcmQgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgcmVzLnN0YXR1cyg0MDApLmpzb24oeyBlcnJvcjogXCJCYWQgcGFzc3dvcmQgZm9ybWF0LCBleHBlY3RlZCBzdHJpbmcuXCIgfSlcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG4gICAgICBjb25zdCB1c2VySnd0ID0gcmVxLmdldChcIkF1dGhvcml6YXRpb25cIikuc2xpY2UoXCJCZWFyZXIgXCIubGVuZ3RoKVxuICAgICAgY29uc3QgdXNlckNsYWltID0gYXdhaXQgVXNlci5kZWNvZGVkKHVzZXJKd3QpXG4gICAgICB2YXIgeyBlcnJvciB9ID0gdXNlckNsYWltXG4gICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgcmVzLnN0YXR1cyg0MDEpLmpzb24oeyBlcnJvciB9KVxuICAgICAgICByZXR1cm5cbiAgICAgIH1cbiAgICAgIGNvbnN0IHVzZXIgPSBuZXcgVXNlcihhd2FpdCBVc2Vyc0RBTy5nZXRVc2VyKHVzZXJDbGFpbS5lbWFpbCkpXG4gICAgICBpZiAoIShhd2FpdCB1c2VyLmNvbXBhcmVQYXNzd29yZChwYXNzd29yZCkpKSB7XG4gICAgICAgIHJlcy5zdGF0dXMoNDAxKS5qc29uKHsgZXJyb3I6IFwiTWFrZSBzdXJlIHlvdXIgcGFzc3dvcmQgaXMgY29ycmVjdC5cIiB9KVxuICAgICAgICByZXR1cm5cbiAgICAgIH1cbiAgICAgIGNvbnN0IGRlbGV0ZVJlc3VsdCA9IGF3YWl0IFVzZXJzREFPLmRlbGV0ZVVzZXIodXNlckNsYWltLmVtYWlsKVxuICAgICAgdmFyIHsgZXJyb3IgfSA9IGRlbGV0ZVJlc3VsdFxuICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3IgfSlcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG4gICAgICByZXMuanNvbihkZWxldGVSZXN1bHQpXG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oZSlcbiAgICB9XG4gIH1cblxuICBzdGF0aWMgYXN5bmMgc2F2ZShyZXEsIHJlcykge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCB1c2VySnd0ID0gcmVxLmdldChcIkF1dGhvcml6YXRpb25cIikuc2xpY2UoXCJCZWFyZXIgXCIubGVuZ3RoKVxuICAgICAgY29uc3QgdXNlckZyb21IZWFkZXIgPSBhd2FpdCBVc2VyLmRlY29kZWQodXNlckp3dClcbiAgICAgIHZhciB7IGVycm9yIH0gPSB1c2VyRnJvbUhlYWRlclxuICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgIHJlcy5zdGF0dXMoNDAxKS5qc29uKHsgZXJyb3IgfSlcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG5cbiAgICAgIGF3YWl0IFVzZXJzREFPLnVwZGF0ZVByZWZlcmVuY2VzKFxuICAgICAgICB1c2VyRnJvbUhlYWRlci5lbWFpbCxcbiAgICAgICAgcmVxLmJvZHkucHJlZmVyZW5jZXMsXG4gICAgICApXG4gICAgICBjb25zdCB1c2VyRnJvbURCID0gYXdhaXQgVXNlcnNEQU8uZ2V0VXNlcih1c2VyRnJvbUhlYWRlci5lbWFpbClcbiAgICAgIGNvbnN0IHVwZGF0ZWRVc2VyID0gbmV3IFVzZXIodXNlckZyb21EQilcblxuICAgICAgcmVzLmpzb24oe1xuICAgICAgICBhdXRoX3Rva2VuOiB1cGRhdGVkVXNlci5lbmNvZGVkKCksXG4gICAgICAgIGluZm86IHVwZGF0ZWRVc2VyLnRvSnNvbigpLFxuICAgICAgfSlcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICByZXMuc3RhdHVzKDUwMCkuanNvbihlKVxuICAgIH1cbiAgfVxuXG4gIC8vIGZvciBpbnRlcm5hbCB1c2Ugb25seVxuICBzdGF0aWMgYXN5bmMgY3JlYXRlQWRtaW5Vc2VyKHJlcSwgcmVzKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHVzZXJGcm9tQm9keSA9IHJlcS5ib2R5XG4gICAgICBsZXQgZXJyb3JzID0ge31cbiAgICAgIGlmICh1c2VyRnJvbUJvZHkgJiYgdXNlckZyb21Cb2R5LnBhc3N3b3JkLmxlbmd0aCA8IDgpIHtcbiAgICAgICAgZXJyb3JzLnBhc3N3b3JkID0gXCJZb3VyIHBhc3N3b3JkIG11c3QgYmUgYXQgbGVhc3QgOCBjaGFyYWN0ZXJzLlwiXG4gICAgICB9XG4gICAgICBpZiAodXNlckZyb21Cb2R5ICYmIHVzZXJGcm9tQm9keS5uYW1lLmxlbmd0aCA8IDMpIHtcbiAgICAgICAgZXJyb3JzLm5hbWUgPSBcIllvdSBtdXN0IHNwZWNpZnkgYSBuYW1lIG9mIGF0IGxlYXN0IDMgY2hhcmFjdGVycy5cIlxuICAgICAgfVxuXG4gICAgICBpZiAoT2JqZWN0LmtleXMoZXJyb3JzKS5sZW5ndGggPiAwKSB7XG4gICAgICAgIHJlcy5zdGF0dXMoNDAwKS5qc29uKGVycm9ycylcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHVzZXJJbmZvID0ge1xuICAgICAgICAuLi51c2VyRnJvbUJvZHksXG4gICAgICAgIHBhc3N3b3JkOiBhd2FpdCBoYXNoUGFzc3dvcmQodXNlckZyb21Cb2R5LnBhc3N3b3JkKSxcbiAgICAgIH1cblxuICAgICAgY29uc3QgaW5zZXJ0UmVzdWx0ID0gYXdhaXQgVXNlcnNEQU8uYWRkVXNlcih1c2VySW5mbylcbiAgICAgIGlmICghaW5zZXJ0UmVzdWx0LnN1Y2Nlc3MpIHtcbiAgICAgICAgZXJyb3JzLmVtYWlsID0gaW5zZXJ0UmVzdWx0LmVycm9yXG4gICAgICB9XG5cbiAgICAgIGlmIChPYmplY3Qua2V5cyhlcnJvcnMpLmxlbmd0aCA+IDApIHtcbiAgICAgICAgcmVzLnN0YXR1cyg0MDApLmpzb24oZXJyb3JzKVxuICAgICAgICByZXR1cm5cbiAgICAgIH1cblxuICAgICAgY29uc3QgbWFrZUFkbWluUmVzcG9uc2UgPSBhd2FpdCBVc2Vyc0RBTy5tYWtlQWRtaW4odXNlckZyb21Cb2R5LmVtYWlsKVxuXG4gICAgICBjb25zdCB1c2VyRnJvbURCID0gYXdhaXQgVXNlcnNEQU8uZ2V0VXNlcih1c2VyRnJvbUJvZHkuZW1haWwpXG4gICAgICBpZiAoIXVzZXJGcm9tREIpIHtcbiAgICAgICAgZXJyb3JzLmdlbmVyYWwgPSBcIkludGVybmFsIGVycm9yLCBwbGVhc2UgdHJ5IGFnYWluIGxhdGVyXCJcbiAgICAgIH1cblxuICAgICAgaWYgKE9iamVjdC5rZXlzKGVycm9ycykubGVuZ3RoID4gMCkge1xuICAgICAgICByZXMuc3RhdHVzKDQwMCkuanNvbihlcnJvcnMpXG4gICAgICAgIHJldHVyblxuICAgICAgfVxuXG4gICAgICBjb25zdCB1c2VyID0gbmV3IFVzZXIodXNlckZyb21EQilcbiAgICAgIGNvbnN0IGp3dCA9IHVzZXIuZW5jb2RlZCgpXG4gICAgICBjb25zdCBsb2dpblJlc3BvbnNlID0gYXdhaXQgVXNlcnNEQU8ubG9naW5Vc2VyKHVzZXIuZW1haWwsIGp3dClcblxuICAgICAgcmVzLmpzb24oe1xuICAgICAgICBhdXRoX3Rva2VuOiBqd3QsXG4gICAgICAgIGluZm86IHVzZXIudG9Kc29uKCksXG4gICAgICB9KVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKGUpXG4gICAgfVxuICB9XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7Ozs7O0FBRUEsSUFBTUEsWUFBWTtFQUFBLHlGQUFHLGlCQUFNQyxRQUFOO0lBQUE7TUFBQTtRQUFBO1VBQUE7WUFBQTtZQUFBLE9BQXdCQyxvQkFBQSxDQUFPQyxJQUFQLENBQVlGLFFBQVosRUFBc0IsRUFBdEIsQ0FBeEI7O1VBQUE7WUFBQTs7VUFBQTtVQUFBO1lBQUE7UUFBQTtNQUFBO0lBQUE7RUFBQSxDQUFIOztFQUFBLGdCQUFaRCxZQUFZO0lBQUE7RUFBQTtBQUFBLEdBQWxCOztJQUVhSSxJO0VBQ1gsZ0JBQThEO0lBQUEsZ0ZBQUosRUFBSTtJQUFBLElBQWhEQyxJQUFnRCxTQUFoREEsSUFBZ0Q7SUFBQSxJQUExQ0MsS0FBMEMsU0FBMUNBLEtBQTBDO0lBQUEsSUFBbkNMLFFBQW1DLFNBQW5DQSxRQUFtQztJQUFBLDhCQUF6Qk0sV0FBeUI7SUFBQSxJQUF6QkEsV0FBeUIsa0NBQVgsRUFBVzs7SUFBQTtJQUM1RCxLQUFLRixJQUFMLEdBQVlBLElBQVo7SUFDQSxLQUFLQyxLQUFMLEdBQWFBLEtBQWI7SUFDQSxLQUFLTCxRQUFMLEdBQWdCQSxRQUFoQjtJQUNBLEtBQUtNLFdBQUwsR0FBbUJBLFdBQW5CO0VBQ0Q7Ozs7NkJBQ1E7TUFDUCxPQUFPO1FBQUVGLElBQUksRUFBRSxLQUFLQSxJQUFiO1FBQW1CQyxLQUFLLEVBQUUsS0FBS0EsS0FBL0I7UUFBc0NDLFdBQVcsRUFBRSxLQUFLQTtNQUF4RCxDQUFQO0lBQ0Q7Ozs7NkhBQ3FCQyxTOzs7Ozs7dUJBQ1BOLG9CQUFBLENBQU9PLE9BQVAsQ0FBZUQsU0FBZixFQUEwQixLQUFLUCxRQUEvQixDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OEJBRUw7TUFDUixPQUFPUyx3QkFBQSxDQUFJQyxJQUFKO1FBRUhDLEdBQUcsRUFBRUMsSUFBSSxDQUFDQyxLQUFMLENBQVdDLElBQUksQ0FBQ0MsR0FBTCxLQUFhLElBQXhCLElBQWdDLEtBQUssRUFBTCxHQUFVO01BRjVDLEdBR0EsS0FBS0MsTUFBTCxFQUhBLEdBS0xDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxVQUxQLENBQVA7SUFPRDs7OztxSEFDb0JDLE87Ozs7O2tEQUNaWCx3QkFBQSxDQUFJWSxNQUFKLENBQVdELE9BQVgsRUFBb0JILE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxVQUFoQyxFQUE0QyxVQUFDRyxLQUFELEVBQVFDLEdBQVIsRUFBZ0I7a0JBQ2pFLElBQUlELEtBQUosRUFBVztvQkFDVCxPQUFPO3NCQUFFQSxLQUFLLEVBQUxBO29CQUFGLENBQVA7a0JBQ0Q7O2tCQUNELE9BQU8sSUFBSW5CLElBQUosQ0FBU29CLEdBQVQsQ0FBUDtnQkFDRCxDQUxNLEM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFTVUMsYzs7Ozs7Ozs7c0hBQ0dDLEcsRUFBS0YsRzs7Ozs7OztnQkFFakJHLFksR0FBZUQsR0FBRyxDQUFDRSxJO2dCQUNyQkMsTSxHQUFTLEU7O2dCQUNiLElBQUlGLFlBQVksSUFBSUEsWUFBWSxDQUFDMUIsUUFBYixDQUFzQjZCLE1BQXRCLEdBQStCLENBQW5ELEVBQXNEO2tCQUNwREQsTUFBTSxDQUFDNUIsUUFBUCxHQUFrQiw4Q0FBbEI7Z0JBQ0Q7O2dCQUNELElBQUkwQixZQUFZLElBQUlBLFlBQVksQ0FBQ3RCLElBQWIsQ0FBa0J5QixNQUFsQixHQUEyQixDQUEvQyxFQUFrRDtrQkFDaERELE1BQU0sQ0FBQ3hCLElBQVAsR0FBYyxtREFBZDtnQkFDRDs7c0JBRUcwQixNQUFNLENBQUNDLElBQVAsQ0FBWUgsTUFBWixFQUFvQkMsTUFBcEIsR0FBNkIsQzs7Ozs7Z0JBQy9CTixHQUFHLENBQUNTLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQkwsTUFBckI7Ozs7OzsrQkFLR0YsWTs7dUJBQ2EzQixZQUFZLENBQUMyQixZQUFZLENBQUMxQixRQUFkLEM7Ozs7O2tCQUE1QkEsUTs7Z0JBRklrQyxROzt1QkFLcUJDLG9CQUFBLENBQVNDLE9BQVQsQ0FBaUJGLFFBQWpCLEM7OztnQkFBckJHLFk7O2dCQUNOLElBQUksQ0FBQ0EsWUFBWSxDQUFDQyxPQUFsQixFQUEyQjtrQkFDekJWLE1BQU0sQ0FBQ3ZCLEtBQVAsR0FBZWdDLFlBQVksQ0FBQ2YsS0FBNUI7Z0JBQ0Q7Ozt1QkFDd0JhLG9CQUFBLENBQVNJLE9BQVQsQ0FBaUJiLFlBQVksQ0FBQ3JCLEtBQTlCLEM7OztnQkFBbkJtQyxVOztnQkFDTixJQUFJLENBQUNBLFVBQUwsRUFBaUI7a0JBQ2ZaLE1BQU0sQ0FBQ2EsT0FBUCxHQUFpQix3Q0FBakI7Z0JBQ0Q7O3NCQUVHWCxNQUFNLENBQUNDLElBQVAsQ0FBWUgsTUFBWixFQUFvQkMsTUFBcEIsR0FBNkIsQzs7Ozs7Z0JBQy9CTixHQUFHLENBQUNTLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQkwsTUFBckI7Ozs7Z0JBSUljLEksR0FBTyxJQUFJdkMsSUFBSixDQUFTcUMsVUFBVCxDO2dCQUViakIsR0FBRyxDQUFDVSxJQUFKLENBQVM7a0JBQ1BVLFVBQVUsRUFBRUQsSUFBSSxDQUFDRSxPQUFMLEVBREw7a0JBRVBDLElBQUksRUFBRUgsSUFBSSxDQUFDMUIsTUFBTDtnQkFGQyxDQUFUOzs7Ozs7O2dCQUtBTyxHQUFHLENBQUNTLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtrQkFBRVgsS0FBSztnQkFBUCxDQUFyQjs7Ozs7Ozs7Ozs7Ozs7Ozs7OzttSEFJZUcsRyxFQUFLRixHLEVBQUt1QixJOzs7Ozs7Ozs0QkFFR3JCLEdBQUcsQ0FBQ0UsSSxFQUF4QnRCLEssYUFBQUEsSyxFQUFPTCxRLGFBQUFBLFE7O3NCQUNYLENBQUNLLEtBQUQsSUFBVSxPQUFPQSxLQUFQLEtBQWlCLFE7Ozs7O2dCQUM3QmtCLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO2tCQUFFWCxLQUFLLEVBQUU7Z0JBQVQsQ0FBckI7Ozs7c0JBR0UsQ0FBQ3RCLFFBQUQsSUFBYSxPQUFPQSxRQUFQLEtBQW9CLFE7Ozs7O2dCQUNuQ3VCLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO2tCQUFFWCxLQUFLLEVBQUU7Z0JBQVQsQ0FBckI7Ozs7O3VCQUdtQmEsb0JBQUEsQ0FBU0ksT0FBVCxDQUFpQmxDLEtBQWpCLEM7OztnQkFBakIwQyxROztvQkFDQ0EsUTs7Ozs7Z0JBQ0h4QixHQUFHLENBQUNTLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtrQkFBRVgsS0FBSyxFQUFFO2dCQUFULENBQXJCOzs7O2dCQUdJb0IsSSxHQUFPLElBQUl2QyxJQUFKLENBQVM0QyxRQUFULEM7O3VCQUVETCxJQUFJLENBQUNNLGVBQUwsQ0FBcUJoRCxRQUFyQixDOzs7Ozs7OztnQkFDVnVCLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO2tCQUFFWCxLQUFLLEVBQUU7Z0JBQVQsQ0FBckI7Ozs7O3VCQUkwQmEsb0JBQUEsQ0FBU2MsU0FBVCxDQUFtQlAsSUFBSSxDQUFDckMsS0FBeEIsRUFBK0JxQyxJQUFJLENBQUNFLE9BQUwsRUFBL0IsQzs7O2dCQUF0Qk0sYTs7b0JBQ0RBLGFBQWEsQ0FBQ1osTzs7Ozs7Z0JBQ2pCZixHQUFHLENBQUNTLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtrQkFBRVgsS0FBSyxFQUFFNEIsYUFBYSxDQUFDNUI7Z0JBQXZCLENBQXJCOzs7O2dCQUdGQyxHQUFHLENBQUNVLElBQUosQ0FBUztrQkFBRVUsVUFBVSxFQUFFRCxJQUFJLENBQUNFLE9BQUwsRUFBZDtrQkFBOEJDLElBQUksRUFBRUgsSUFBSSxDQUFDMUIsTUFBTDtnQkFBcEMsQ0FBVDs7Ozs7OztnQkFFQU8sR0FBRyxDQUFDUyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7a0JBQUVYLEtBQUs7Z0JBQVAsQ0FBckI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29IQUtnQkcsRyxFQUFLRixHOzs7Ozs7O2dCQUVmSCxPLEdBQVVLLEdBQUcsQ0FBQzBCLEdBQUosQ0FBUSxlQUFSLEVBQXlCQyxLQUF6QixDQUErQixVQUFVdkIsTUFBekMsQzs7dUJBQ00xQixJQUFJLENBQUNrRCxPQUFMLENBQWFqQyxPQUFiLEM7OztnQkFBaEJrQyxPO2dCQUNBaEMsSyxHQUFVZ0MsTyxDQUFWaEMsSzs7cUJBQ0ZBLEs7Ozs7O2dCQUNGQyxHQUFHLENBQUNTLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtrQkFBRVgsS0FBSyxFQUFMQTtnQkFBRixDQUFyQjs7Ozs7dUJBR3lCYSxvQkFBQSxDQUFTb0IsVUFBVCxDQUFvQkQsT0FBTyxDQUFDakQsS0FBNUIsQzs7O2dCQUFyQm1ELFk7Z0JBQ0FsQyxLLEdBQVVrQyxZLENBQVZsQyxLOztxQkFDRkEsSzs7Ozs7Z0JBQ0ZDLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO2tCQUFFWCxLQUFLLEVBQUxBO2dCQUFGLENBQXJCOzs7O2dCQUdGQyxHQUFHLENBQUNVLElBQUosQ0FBU3VCLFlBQVQ7Ozs7Ozs7Z0JBRUFqQyxHQUFHLENBQUNTLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQjs7Ozs7Ozs7Ozs7Ozs7Ozs7OztxSEFJZ0JSLEcsRUFBS0YsRzs7Ozs7OztnQkFFZnZCLFEsR0FBYXlCLEdBQUcsQ0FBQ0UsSSxDQUFqQjNCLFE7O3NCQUNGLENBQUNBLFFBQUQsSUFBYSxPQUFPQSxRQUFQLEtBQW9CLFE7Ozs7O2dCQUNuQ3VCLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO2tCQUFFWCxLQUFLLEVBQUU7Z0JBQVQsQ0FBckI7Ozs7Z0JBR0lGLE8sR0FBVUssR0FBRyxDQUFDMEIsR0FBSixDQUFRLGVBQVIsRUFBeUJDLEtBQXpCLENBQStCLFVBQVV2QixNQUF6QyxDOzt1QkFDUTFCLElBQUksQ0FBQ2tELE9BQUwsQ0FBYWpDLE9BQWIsQzs7O2dCQUFsQnFDLFM7Z0JBQ0FuQyxLLEdBQVVtQyxTLENBQVZuQyxLOztxQkFDRkEsSzs7Ozs7Z0JBQ0ZDLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO2tCQUFFWCxLQUFLLEVBQUxBO2dCQUFGLENBQXJCOzs7OytCQUdlbkIsSTs7dUJBQVdnQyxvQkFBQSxDQUFTSSxPQUFULENBQWlCa0IsU0FBUyxDQUFDcEQsS0FBM0IsQzs7OztnQkFBdEJxQyxJOzt1QkFDTUEsSUFBSSxDQUFDTSxlQUFMLENBQXFCaEQsUUFBckIsQzs7Ozs7Ozs7Z0JBQ1Z1QixHQUFHLENBQUNTLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtrQkFBRVgsS0FBSyxFQUFFO2dCQUFULENBQXJCOzs7Ozt1QkFHeUJhLG9CQUFBLENBQVN1QixVQUFULENBQW9CRCxTQUFTLENBQUNwRCxLQUE5QixDOzs7Z0JBQXJCc0QsWTtnQkFDQXJDLEssR0FBVXFDLFksQ0FBVnJDLEs7O3FCQUNGQSxLOzs7OztnQkFDRkMsR0FBRyxDQUFDUyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7a0JBQUVYLEtBQUssRUFBTEE7Z0JBQUYsQ0FBckI7Ozs7Z0JBR0ZDLEdBQUcsQ0FBQ1UsSUFBSixDQUFTMEIsWUFBVDs7Ozs7OztnQkFFQXBDLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O2tIQUljUixHLEVBQUtGLEc7Ozs7Ozs7Z0JBRWJILE8sR0FBVUssR0FBRyxDQUFDMEIsR0FBSixDQUFRLGVBQVIsRUFBeUJDLEtBQXpCLENBQStCLFVBQVV2QixNQUF6QyxDOzt1QkFDYTFCLElBQUksQ0FBQ2tELE9BQUwsQ0FBYWpDLE9BQWIsQzs7O2dCQUF2QndDLGM7Z0JBQ0F0QyxLLEdBQVVzQyxjLENBQVZ0QyxLOztxQkFDRkEsSzs7Ozs7Z0JBQ0ZDLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO2tCQUFFWCxLQUFLLEVBQUxBO2dCQUFGLENBQXJCOzs7Ozt1QkFJSWEsb0JBQUEsQ0FBUzBCLGlCQUFULENBQ0pELGNBQWMsQ0FBQ3ZELEtBRFgsRUFFSm9CLEdBQUcsQ0FBQ0UsSUFBSixDQUFTckIsV0FGTCxDOzs7O3VCQUltQjZCLG9CQUFBLENBQVNJLE9BQVQsQ0FBaUJxQixjQUFjLENBQUN2RCxLQUFoQyxDOzs7Z0JBQW5CbUMsVTtnQkFDQXNCLFcsR0FBYyxJQUFJM0QsSUFBSixDQUFTcUMsVUFBVCxDO2dCQUVwQmpCLEdBQUcsQ0FBQ1UsSUFBSixDQUFTO2tCQUNQVSxVQUFVLEVBQUVtQixXQUFXLENBQUNsQixPQUFaLEVBREw7a0JBRVBDLElBQUksRUFBRWlCLFdBQVcsQ0FBQzlDLE1BQVo7Z0JBRkMsQ0FBVDs7Ozs7OztnQkFLQU8sR0FBRyxDQUFDUyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEI7Ozs7Ozs7Ozs7Ozs7OztRQUlKOzs7Ozs2SEFDNkJSLEcsRUFBS0YsRzs7Ozs7Ozs7Z0JBRXhCRyxZLEdBQWVELEdBQUcsQ0FBQ0UsSTtnQkFDckJDLE0sR0FBUyxFOztnQkFDYixJQUFJRixZQUFZLElBQUlBLFlBQVksQ0FBQzFCLFFBQWIsQ0FBc0I2QixNQUF0QixHQUErQixDQUFuRCxFQUFzRDtrQkFDcERELE1BQU0sQ0FBQzVCLFFBQVAsR0FBa0IsOENBQWxCO2dCQUNEOztnQkFDRCxJQUFJMEIsWUFBWSxJQUFJQSxZQUFZLENBQUN0QixJQUFiLENBQWtCeUIsTUFBbEIsR0FBMkIsQ0FBL0MsRUFBa0Q7a0JBQ2hERCxNQUFNLENBQUN4QixJQUFQLEdBQWMsbURBQWQ7Z0JBQ0Q7O3NCQUVHMEIsTUFBTSxDQUFDQyxJQUFQLENBQVlILE1BQVosRUFBb0JDLE1BQXBCLEdBQTZCLEM7Ozs7O2dCQUMvQk4sR0FBRyxDQUFDUyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJMLE1BQXJCOzs7Ozs7K0JBS0dGLFk7O3VCQUNhM0IsWUFBWSxDQUFDMkIsWUFBWSxDQUFDMUIsUUFBZCxDOzs7OztrQkFBNUJBLFE7O2dCQUZJa0MsUTs7dUJBS3FCQyxvQkFBQSxDQUFTQyxPQUFULENBQWlCRixRQUFqQixDOzs7Z0JBQXJCRyxZOztnQkFDTixJQUFJLENBQUNBLFlBQVksQ0FBQ0MsT0FBbEIsRUFBMkI7a0JBQ3pCVixNQUFNLENBQUN2QixLQUFQLEdBQWVnQyxZQUFZLENBQUNmLEtBQTVCO2dCQUNEOztzQkFFR1EsTUFBTSxDQUFDQyxJQUFQLENBQVlILE1BQVosRUFBb0JDLE1BQXBCLEdBQTZCLEM7Ozs7O2dCQUMvQk4sR0FBRyxDQUFDUyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJMLE1BQXJCOzs7Ozt1QkFJOEJPLG9CQUFBLENBQVM0QixTQUFULENBQW1CckMsWUFBWSxDQUFDckIsS0FBaEMsQzs7O2dCQUExQjJELGlCOzt1QkFFbUI3QixvQkFBQSxDQUFTSSxPQUFULENBQWlCYixZQUFZLENBQUNyQixLQUE5QixDOzs7Z0JBQW5CbUMsVTs7Z0JBQ04sSUFBSSxDQUFDQSxVQUFMLEVBQWlCO2tCQUNmWixNQUFNLENBQUNhLE9BQVAsR0FBaUIsd0NBQWpCO2dCQUNEOztzQkFFR1gsTUFBTSxDQUFDQyxJQUFQLENBQVlILE1BQVosRUFBb0JDLE1BQXBCLEdBQTZCLEM7Ozs7O2dCQUMvQk4sR0FBRyxDQUFDUyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJMLE1BQXJCOzs7O2dCQUlJYyxJLEdBQU8sSUFBSXZDLElBQUosQ0FBU3FDLFVBQVQsQztnQkFDUC9CLEksR0FBTWlDLElBQUksQ0FBQ0UsT0FBTCxFOzt1QkFDZ0JULG9CQUFBLENBQVNjLFNBQVQsQ0FBbUJQLElBQUksQ0FBQ3JDLEtBQXhCLEVBQStCSSxJQUEvQixDOzs7Z0JBQXRCeUMsYTtnQkFFTjNCLEdBQUcsQ0FBQ1UsSUFBSixDQUFTO2tCQUNQVSxVQUFVLEVBQUVsQyxJQURMO2tCQUVQb0MsSUFBSSxFQUFFSCxJQUFJLENBQUMxQixNQUFMO2dCQUZDLENBQVQ7Ozs7Ozs7Z0JBS0FPLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCIn0=",
    "map": {
      "version": 3,
      "names": [
        "hashPassword",
        "password",
        "bcrypt",
        "hash",
        "User",
        "name",
        "email",
        "preferences",
        "plainText",
        "compare",
        "jwt",
        "sign",
        "exp",
        "Math",
        "floor",
        "Date",
        "now",
        "toJson",
        "process",
        "env",
        "SECRET_KEY",
        "userJwt",
        "verify",
        "error",
        "res",
        "UserController",
        "req",
        "userFromBody",
        "body",
        "errors",
        "length",
        "Object",
        "keys",
        "status",
        "json",
        "userInfo",
        "UsersDAO",
        "addUser",
        "insertResult",
        "success",
        "getUser",
        "userFromDB",
        "general",
        "user",
        "auth_token",
        "encoded",
        "info",
        "next",
        "userData",
        "comparePassword",
        "loginUser",
        "loginResponse",
        "get",
        "slice",
        "decoded",
        "userObj",
        "logoutUser",
        "logoutResult",
        "userClaim",
        "deleteUser",
        "deleteResult",
        "userFromHeader",
        "updatePreferences",
        "updatedUser",
        "makeAdmin",
        "makeAdminResponse"
      ],
      "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api",
      "sources": [
        "users.controller.js"
      ],
      "sourcesContent": [
        "import bcrypt from \"bcryptjs\"\nimport jwt from \"jsonwebtoken\"\nimport UsersDAO from \"../dao/usersDAO\"\n\nconst hashPassword = async password => await bcrypt.hash(password, 10)\n\nexport class User {\n  constructor({ name, email, password, preferences = {} } = {}) {\n    this.name = name\n    this.email = email\n    this.password = password\n    this.preferences = preferences\n  }\n  toJson() {\n    return { name: this.name, email: this.email, preferences: this.preferences }\n  }\n  async comparePassword(plainText) {\n    return await bcrypt.compare(plainText, this.password)\n  }\n  encoded() {\n    return jwt.sign(\n      {\n        exp: Math.floor(Date.now() / 1000) + 60 * 60 * 4,\n        ...this.toJson(),\n      },\n      process.env.SECRET_KEY,\n    )\n  }\n  static async decoded(userJwt) {\n    return jwt.verify(userJwt, process.env.SECRET_KEY, (error, res) => {\n      if (error) {\n        return { error }\n      }\n      return new User(res)\n    })\n  }\n}\n\nexport default class UserController {\n  static async register(req, res) {\n    try {\n      const userFromBody = req.body\n      let errors = {}\n      if (userFromBody && userFromBody.password.length < 8) {\n        errors.password = \"Your password must be at least 8 characters.\"\n      }\n      if (userFromBody && userFromBody.name.length < 3) {\n        errors.name = \"You must specify a name of at least 3 characters.\"\n      }\n\n      if (Object.keys(errors).length > 0) {\n        res.status(400).json(errors)\n        return\n      }\n\n      const userInfo = {\n        ...userFromBody,\n        password: await hashPassword(userFromBody.password),\n      }\n\n      const insertResult = await UsersDAO.addUser(userInfo)\n      if (!insertResult.success) {\n        errors.email = insertResult.error\n      }\n      const userFromDB = await UsersDAO.getUser(userFromBody.email)\n      if (!userFromDB) {\n        errors.general = \"Internal error, please try again later\"\n      }\n\n      if (Object.keys(errors).length > 0) {\n        res.status(400).json(errors)\n        return\n      }\n\n      const user = new User(userFromDB)\n\n      res.json({\n        auth_token: user.encoded(),\n        info: user.toJson(),\n      })\n    } catch (e) {\n      res.status(500).json({ error: e })\n    }\n  }\n\n  static async login(req, res, next) {\n    try {\n      const { email, password } = req.body\n      if (!email || typeof email !== \"string\") {\n        res.status(400).json({ error: \"Bad email format, expected string.\" })\n        return\n      }\n      if (!password || typeof password !== \"string\") {\n        res.status(400).json({ error: \"Bad password format, expected string.\" })\n        return\n      }\n      let userData = await UsersDAO.getUser(email)\n      if (!userData) {\n        res.status(401).json({ error: \"Make sure your email is correct.\" })\n        return\n      }\n      const user = new User(userData)\n\n      if (!(await user.comparePassword(password))) {\n        res.status(401).json({ error: \"Make sure your password is correct.\" })\n        return\n      }\n\n      const loginResponse = await UsersDAO.loginUser(user.email, user.encoded())\n      if (!loginResponse.success) {\n        res.status(500).json({ error: loginResponse.error })\n        return\n      }\n      res.json({ auth_token: user.encoded(), info: user.toJson() })\n    } catch (e) {\n      res.status(400).json({ error: e })\n      return\n    }\n  }\n\n  static async logout(req, res) {\n    try {\n      const userJwt = req.get(\"Authorization\").slice(\"Bearer \".length)\n      const userObj = await User.decoded(userJwt)\n      var { error } = userObj\n      if (error) {\n        res.status(401).json({ error })\n        return\n      }\n      const logoutResult = await UsersDAO.logoutUser(userObj.email)\n      var { error } = logoutResult\n      if (error) {\n        res.status(500).json({ error })\n        return\n      }\n      res.json(logoutResult)\n    } catch (e) {\n      res.status(500).json(e)\n    }\n  }\n\n  static async delete(req, res) {\n    try {\n      let { password } = req.body\n      if (!password || typeof password !== \"string\") {\n        res.status(400).json({ error: \"Bad password format, expected string.\" })\n        return\n      }\n      const userJwt = req.get(\"Authorization\").slice(\"Bearer \".length)\n      const userClaim = await User.decoded(userJwt)\n      var { error } = userClaim\n      if (error) {\n        res.status(401).json({ error })\n        return\n      }\n      const user = new User(await UsersDAO.getUser(userClaim.email))\n      if (!(await user.comparePassword(password))) {\n        res.status(401).json({ error: \"Make sure your password is correct.\" })\n        return\n      }\n      const deleteResult = await UsersDAO.deleteUser(userClaim.email)\n      var { error } = deleteResult\n      if (error) {\n        res.status(500).json({ error })\n        return\n      }\n      res.json(deleteResult)\n    } catch (e) {\n      res.status(500).json(e)\n    }\n  }\n\n  static async save(req, res) {\n    try {\n      const userJwt = req.get(\"Authorization\").slice(\"Bearer \".length)\n      const userFromHeader = await User.decoded(userJwt)\n      var { error } = userFromHeader\n      if (error) {\n        res.status(401).json({ error })\n        return\n      }\n\n      await UsersDAO.updatePreferences(\n        userFromHeader.email,\n        req.body.preferences,\n      )\n      const userFromDB = await UsersDAO.getUser(userFromHeader.email)\n      const updatedUser = new User(userFromDB)\n\n      res.json({\n        auth_token: updatedUser.encoded(),\n        info: updatedUser.toJson(),\n      })\n    } catch (e) {\n      res.status(500).json(e)\n    }\n  }\n\n  // for internal use only\n  static async createAdminUser(req, res) {\n    try {\n      const userFromBody = req.body\n      let errors = {}\n      if (userFromBody && userFromBody.password.length < 8) {\n        errors.password = \"Your password must be at least 8 characters.\"\n      }\n      if (userFromBody && userFromBody.name.length < 3) {\n        errors.name = \"You must specify a name of at least 3 characters.\"\n      }\n\n      if (Object.keys(errors).length > 0) {\n        res.status(400).json(errors)\n        return\n      }\n\n      const userInfo = {\n        ...userFromBody,\n        password: await hashPassword(userFromBody.password),\n      }\n\n      const insertResult = await UsersDAO.addUser(userInfo)\n      if (!insertResult.success) {\n        errors.email = insertResult.error\n      }\n\n      if (Object.keys(errors).length > 0) {\n        res.status(400).json(errors)\n        return\n      }\n\n      const makeAdminResponse = await UsersDAO.makeAdmin(userFromBody.email)\n\n      const userFromDB = await UsersDAO.getUser(userFromBody.email)\n      if (!userFromDB) {\n        errors.general = \"Internal error, please try again later\"\n      }\n\n      if (Object.keys(errors).length > 0) {\n        res.status(400).json(errors)\n        return\n      }\n\n      const user = new User(userFromDB)\n      const jwt = user.encoded()\n      const loginResponse = await UsersDAO.loginUser(user.email, jwt)\n\n      res.json({\n        auth_token: jwt,\n        info: user.toJson(),\n      })\n    } catch (e) {\n      res.status(500).json(e)\n    }\n  }\n}\n"
      ],
      "mappings": "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"
    },
    "sourceType": "script",
    "externalDependencies": {},
    "mtime": 1641016800000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js\",\"filename\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api/users.route.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/fusiontech/Documents/FusionTech/M220/mflix-js\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"syntax-dynamic-import\",\"visitor\":{},\"options\":{},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-decorators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"legacy\":true},\"externalDependencies\":[]},{\"key\":\"proposal-function-sent\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"MetaProperty\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-throw-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"UnaryExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-export-default-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-pipeline-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"proposal\":\"minimal\"},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-do-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DoExpression\":{\"exit\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.18.10": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js",
      "filename": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api/users.route.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-decorators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "legacy": true
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-function-sent",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "MetaProperty": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-throw-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "UnaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-export-default-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-pipeline-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "proposal": "minimal"
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "proposal-do-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DoExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {},
          "externalDependencies": []
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          },
          "externalDependencies": []
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api/users.route.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "decorators-legacy",
          "functionSent",
          "exportNamespaceFrom",
          "numericSeparator",
          "throwExpressions",
          "exportDefaultFrom",
          "logicalAssignment",
          "optionalChaining",
          [
            "pipelineOperator",
            {
              "proposal": "minimal"
            }
          ],
          "nullishCoalescingOperator",
          "doExpressions",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api/users.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api",
        "sourceFileName": "users.route.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _users = _interopRequireDefault(require(\"./users.controller\"));\n\nvar _comments = _interopRequireDefault(require(\"./comments.controller\"));\n\nvar router = new _express.Router(); // associate put, delete, and get(id)\n\nrouter.route(\"/register\").post(_users[\"default\"].register);\nrouter.route(\"/login\").post(_users[\"default\"].login);\nrouter.route(\"/logout\").post(_users[\"default\"].logout);\nrouter.route(\"/delete\")[\"delete\"](_users[\"default\"][\"delete\"]);\nrouter.route(\"/update-preferences\").put(_users[\"default\"].save);\nrouter.route(\"/comment-report\").get(_comments[\"default\"].apiCommentReport);\nrouter.route(\"/make-admin\").post(_users[\"default\"].createAdminUser);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyb3V0ZXIiLCJSb3V0ZXIiLCJyb3V0ZSIsInBvc3QiLCJ1c2Vyc0N0cmwiLCJyZWdpc3RlciIsImxvZ2luIiwibG9nb3V0IiwicHV0Iiwic2F2ZSIsImdldCIsImNvbW1lbnRzQ3RybCIsImFwaUNvbW1lbnRSZXBvcnQiLCJjcmVhdGVBZG1pblVzZXIiXSwic291cmNlUm9vdCI6Ii9Vc2Vycy9mdXNpb250ZWNoL0RvY3VtZW50cy9GdXNpb25UZWNoL00yMjAvbWZsaXgtanMvc3JjL2FwaSIsInNvdXJjZXMiOlsidXNlcnMucm91dGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVyIH0gZnJvbSBcImV4cHJlc3NcIlxuaW1wb3J0IHVzZXJzQ3RybCBmcm9tIFwiLi91c2Vycy5jb250cm9sbGVyXCJcbmltcG9ydCBjb21tZW50c0N0cmwgZnJvbSBcIi4vY29tbWVudHMuY29udHJvbGxlclwiXG5cbmNvbnN0IHJvdXRlciA9IG5ldyBSb3V0ZXIoKVxuXG4vLyBhc3NvY2lhdGUgcHV0LCBkZWxldGUsIGFuZCBnZXQoaWQpXG5yb3V0ZXIucm91dGUoXCIvcmVnaXN0ZXJcIikucG9zdCh1c2Vyc0N0cmwucmVnaXN0ZXIpXG5yb3V0ZXIucm91dGUoXCIvbG9naW5cIikucG9zdCh1c2Vyc0N0cmwubG9naW4pXG5yb3V0ZXIucm91dGUoXCIvbG9nb3V0XCIpLnBvc3QodXNlcnNDdHJsLmxvZ291dClcbnJvdXRlci5yb3V0ZShcIi9kZWxldGVcIikuZGVsZXRlKHVzZXJzQ3RybC5kZWxldGUpXG5yb3V0ZXIucm91dGUoXCIvdXBkYXRlLXByZWZlcmVuY2VzXCIpLnB1dCh1c2Vyc0N0cmwuc2F2ZSlcbnJvdXRlci5yb3V0ZShcIi9jb21tZW50LXJlcG9ydFwiKS5nZXQoY29tbWVudHNDdHJsLmFwaUNvbW1lbnRSZXBvcnQpXG5yb3V0ZXIucm91dGUoXCIvbWFrZS1hZG1pblwiKS5wb3N0KHVzZXJzQ3RybC5jcmVhdGVBZG1pblVzZXIpXG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlclxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFFQSxJQUFNQSxNQUFNLEdBQUcsSUFBSUMsZUFBSixFQUFmLEMsQ0FFQTs7QUFDQUQsTUFBTSxDQUFDRSxLQUFQLENBQWEsV0FBYixFQUEwQkMsSUFBMUIsQ0FBK0JDLGlCQUFBLENBQVVDLFFBQXpDO0FBQ0FMLE1BQU0sQ0FBQ0UsS0FBUCxDQUFhLFFBQWIsRUFBdUJDLElBQXZCLENBQTRCQyxpQkFBQSxDQUFVRSxLQUF0QztBQUNBTixNQUFNLENBQUNFLEtBQVAsQ0FBYSxTQUFiLEVBQXdCQyxJQUF4QixDQUE2QkMsaUJBQUEsQ0FBVUcsTUFBdkM7QUFDQVAsTUFBTSxDQUFDRSxLQUFQLENBQWEsU0FBYixZQUErQkUsaUJBQUEsVUFBL0I7QUFDQUosTUFBTSxDQUFDRSxLQUFQLENBQWEscUJBQWIsRUFBb0NNLEdBQXBDLENBQXdDSixpQkFBQSxDQUFVSyxJQUFsRDtBQUNBVCxNQUFNLENBQUNFLEtBQVAsQ0FBYSxpQkFBYixFQUFnQ1EsR0FBaEMsQ0FBb0NDLG9CQUFBLENBQWFDLGdCQUFqRDtBQUNBWixNQUFNLENBQUNFLEtBQVAsQ0FBYSxhQUFiLEVBQTRCQyxJQUE1QixDQUFpQ0MsaUJBQUEsQ0FBVVMsZUFBM0M7ZUFFZWIsTSJ9",
    "map": {
      "version": 3,
      "names": [
        "router",
        "Router",
        "route",
        "post",
        "usersCtrl",
        "register",
        "login",
        "logout",
        "put",
        "save",
        "get",
        "commentsCtrl",
        "apiCommentReport",
        "createAdminUser"
      ],
      "sourceRoot": "/Users/fusiontech/Documents/FusionTech/M220/mflix-js/src/api",
      "sources": [
        "users.route.js"
      ],
      "sourcesContent": [
        "import { Router } from \"express\"\nimport usersCtrl from \"./users.controller\"\nimport commentsCtrl from \"./comments.controller\"\n\nconst router = new Router()\n\n// associate put, delete, and get(id)\nrouter.route(\"/register\").post(usersCtrl.register)\nrouter.route(\"/login\").post(usersCtrl.login)\nrouter.route(\"/logout\").post(usersCtrl.logout)\nrouter.route(\"/delete\").delete(usersCtrl.delete)\nrouter.route(\"/update-preferences\").put(usersCtrl.save)\nrouter.route(\"/comment-report\").get(commentsCtrl.apiCommentReport)\nrouter.route(\"/make-admin\").post(usersCtrl.createAdminUser)\n\nexport default router\n"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;AACA;;AAEA,IAAMA,MAAM,GAAG,IAAIC,eAAJ,EAAf,C,CAEA;;AACAD,MAAM,CAACE,KAAP,CAAa,WAAb,EAA0BC,IAA1B,CAA+BC,iBAAA,CAAUC,QAAzC;AACAL,MAAM,CAACE,KAAP,CAAa,QAAb,EAAuBC,IAAvB,CAA4BC,iBAAA,CAAUE,KAAtC;AACAN,MAAM,CAACE,KAAP,CAAa,SAAb,EAAwBC,IAAxB,CAA6BC,iBAAA,CAAUG,MAAvC;AACAP,MAAM,CAACE,KAAP,CAAa,SAAb,YAA+BE,iBAAA,UAA/B;AACAJ,MAAM,CAACE,KAAP,CAAa,qBAAb,EAAoCM,GAApC,CAAwCJ,iBAAA,CAAUK,IAAlD;AACAT,MAAM,CAACE,KAAP,CAAa,iBAAb,EAAgCQ,GAAhC,CAAoCC,oBAAA,CAAaC,gBAAjD;AACAZ,MAAM,CAACE,KAAP,CAAa,aAAb,EAA4BC,IAA5B,CAAiCC,iBAAA,CAAUS,eAA3C;eAEeb,M"
    },
    "sourceType": "script",
    "externalDependencies": {},
    "mtime": 1641016800000
  }
}